import api, { APIService } from './api';
import store from '@/core/store';
/* tslint:disable */
class OperatorService {
  api: APIService;

  constructor() {
    this.api = api;
  }

  get space(): string {
    return store.getters.spaceId;
  }

  get zone(): string {
    return store.state.zone.id;
  }

  listOperatorGroups() {
    return Promise.resolve({
      apiVersion: 'operators.coreos.com/v1',
      items: [
        {
          apiVersion: 'operators.coreos.com/v1',
          kind: 'OperatorGroup',
          metadata: {
            annotations: {
              'kubectl.kubernetes.io/last-applied-configuration':
                '{"apiVersion":"operators.coreos.com/v1","kind":"OperatorGroup","metadata":{"annotations":{},"name":"ns-og","namespace":"ck"},"spec":{"targetNamespaces":["ck"]}}\n',
              'olm.providedAPIs': 'PodSet.v1alpha1.app.example.com',
            },
            creationTimestamp: '2019-09-02T03:09:19Z',
            generation: 1,
            name: 'ns-og',
            namespace: 'ck',
            resourceVersion: '1438725',
            selfLink: '/apis/operators.coreos.com/v1/namespaces/ck/operatorgroups/ns-og',
            uid: '174a1b46-482d-4804-add9-53beeee1b5cd',
          },
          spec: { targetNamespaces: ['ck'] },
          status: { lastUpdated: '2019-09-02T03:09:19Z', namespaces: ['ck'] },
        },
        {
          apiVersion: 'operators.coreos.com/v1',
          kind: 'OperatorGroup',
          metadata: {
            annotations: { 'olm.providedAPIs': '' },
            creationTimestamp: '2019-08-30T02:41:40Z',
            generateName: 'default-',
            generation: 1,
            name: 'default-26rdc',
            namespace: 'default',
            resourceVersion: '734857',
            selfLink:
              '/apis/operators.coreos.com/v1/namespaces/default/operatorgroups/default-26rdc',
            uid: 'bdb6d6f8-225b-4723-98d4-727b4f49ab7c',
          },
          spec: { targetNamespaces: ['default'] },
          status: { lastUpdated: '2019-08-30T02:41:40Z', namespaces: ['default'] },
        },
        {
          apiVersion: 'operators.coreos.com/v1',
          kind: 'OperatorGroup',
          metadata: {
            annotations: {
              'kubectl.kubernetes.io/last-applied-configuration':
                '{"apiVersion":"operators.coreos.com/v1","kind":"OperatorGroup","metadata":{"annotations":{},"name":"olm-operators","namespace":"olm"},"spec":{"targetNamespaces":["olm"]}}\n',
              'olm.providedAPIs': 'PackageManifest.v1.packages.operators.coreos.com',
            },
            creationTimestamp: '2019-08-26T08:06:27Z',
            generation: 1,
            name: 'olm-operators',
            namespace: 'olm',
            resourceVersion: '781625',
            selfLink: '/apis/operators.coreos.com/v1/namespaces/olm/operatorgroups/olm-operators',
            uid: '24bac05a-ae19-49c4-abb9-c3bd0a081d7f',
          },
          spec: { targetNamespaces: ['olm'] },
          status: { lastUpdated: '2019-08-26T08:27:50Z', namespaces: ['olm'] },
        },
        {
          apiVersion: 'operators.coreos.com/v1',
          kind: 'OperatorGroup',
          metadata: {
            annotations: {
              'kubectl.kubernetes.io/last-applied-configuration':
                '{"apiVersion":"operators.coreos.com/v1","kind":"OperatorGroup","metadata":{"annotations":{},"name":"global-operators","namespace":"operators"}}\n',
              'olm.providedAPIs': '',
            },
            creationTimestamp: '2019-08-26T08:06:27Z',
            generation: 2,
            name: 'global-operators',
            namespace: 'operators',
            resourceVersion: '781702',
            selfLink:
              '/apis/operators.coreos.com/v1/namespaces/operators/operatorgroups/global-operators',
            uid: '605a0250-0327-4936-bd9d-eac35838ef06',
          },
          spec: {},
          status: { lastUpdated: '2019-08-26T08:27:50Z', namespaces: [''] },
        },
        {
          apiVersion: 'operators.coreos.com/v1',
          kind: 'OperatorGroup',
          metadata: {
            annotations: { 'olm.providedAPIs': '' },
            creationTimestamp: '2019-08-30T02:35:33Z',
            generateName: 'test-',
            generation: 4,
            name: 'test-grfhb',
            namespace: 'test',
            resourceVersion: '1938517',
            selfLink: '/apis/operators.coreos.com/v1/namespaces/test/operatorgroups/test-grfhb',
            uid: '47b60822-2bea-4b13-905f-53dd15eb141f',
          },
          spec: { targetNamespaces: ['test'] },
          status: { lastUpdated: '2019-08-30T04:00:05Z', namespaces: ['test'] },
        },
      ],
      kind: 'OperatorGroupList',
      metadata: {
        continue: '',
        resourceVersion: '2157304',
        selfLink: '/apis/operators.coreos.com/v1/operatorgroups',
      },
    });
  }

  listPackageManifests() {
    return Promise.resolve({
      "kind": "PackageManifestList",
      "apiVersion": "packages.operators.coreos.com/v1",
      "metadata": {
        "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests"
      },
      "items": [
        {
          "metadata": {
            "name": "elasticsearch",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/elasticsearch",
            "creationTimestamp": "2019-08-30T04:05:35Z",
            "labels": {
              "catalog": "my-operator-catalog",
              "catalog-namespace": "olm",
              "provider": "DaoCloud",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "my-operator-catalog",
            "catalogSourceDisplayName": "DaoCloud Operators",
            "catalogSourcePublisher": "daocloud.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "DaoCloud"
            },
            "packageName": "elasticsearch",
            "channels": [
              {
                "name": "preview",
                "currentCSV": "elasticsearch.v0.9.0",
                "currentCSVDesc": {
                  "displayName": "ElasticSearch",
                  "icon": [
                    {
                      "base64data": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI2NCIgaGVpZ2h0PSI2NCIgdmlld0JveD0iMCAwIDY0IDY0Ij4KICA8ZyBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgPHBhdGggZmlsbD0iIzM0Mzc0MSIgZD0iTTM3LjA2MjUsMzIgQzM3LjA2MjUsMzQuNzk2IDM0Ljc5NTUsMzcuMDYyIDMyLjAwMDUsMzcuMDYyIEMyOS4yMDQ1LDM3LjA2MiAyNi45Mzc1LDM0Ljc5NiAyNi45Mzc1LDMyIEMyNi45Mzc1LDI5LjIwNCAyOS4yMDQ1LDI2LjkzOCAzMi4wMDA1LDI2LjkzOCBDMzQuNzk1NSwyNi45MzggMzcuMDYyNSwyOS4yMDQgMzcuMDYyNSwzMiIvPgogICAgPHBhdGggZmlsbD0iI0YwNEU5OCIgZD0iTTM4LjIyMjcsMjQuMTA0NSBDMzguMjY1NywyNC4xMzg1IDM4LjMwOTcsMjQuMTczNSAzOC4zNTI3LDI0LjIwODUgQzM5LjI5MDcsMjQuOTcyNSA0MC41ODU3LDI1LjEyMDUgNDEuNjc3NywyNC41OTc1IEw1NS4xNzE3LDE4LjE0MTUgQzUxLjg3NDcsMTIuNjQwNSA0Ni42NzU3LDguNDE2NSA0MC40ODI3LDYuMzY3NSBMMzcuMTE4NywyMC45NDI1IEMzNi44NDU3LDIyLjEyMTUgMzcuMjcxNywyMy4zNTU1IDM4LjIyMjcsMjQuMTA0NSIvPgogICAgPHBhdGggZmlsbD0iIzA3QyIgZD0iTTMyLjE4NTUsNDQuMTgzNiBDMzEuOTE4NSw0My4wMDI2IDMwLjk5OTUsNDIuMDc1NiAyOS44MTg1LDQxLjgxMzYgQzI1LjMxNjUsNDAuODE1NiAyMS45Mzc1LDM2Ljc5ODYgMjEuOTM3NSwzMS45OTk2IEMyMS45Mzc1LDI3LjE4MjYgMjUuMzQxNSwyMy4xNTI2IDI5Ljg3MDUsMjIuMTczNiBDMzEuMDUyNSwyMS45MTg2IDMxLjk3NTUsMjAuOTk0NiAzMi4yNDc1LDE5LjgxNTYgTDM1LjYxMDUsNS4yNDc2IEMzNC40Mjg1LDUuMDg5NiAzMy4yMjQ1LDQuOTk5NiAzMS45OTk1LDQuOTk5NiBDMTcuMDg3NSw0Ljk5OTYgNC45OTk1LDE3LjA4ODYgNC45OTk1LDMxLjk5OTYgQzQuOTk5NSw0Ni45MTE2IDE3LjA4NzUsNTguOTk5NiAzMS45OTk1LDU4Ljk5OTYgQzMzLjE3ODUsNTguOTk5NiAzNC4zMzY1LDU4LjkxNTYgMzUuNDc0NSw1OC43Njk2IEwzMi4xODU1LDQ0LjE4MzYgWiIvPgogICAgPHBhdGggZmlsbD0iIzM0Mzc0MSIgZD0iTTU3LjI4NTIsNDEuNDc4IEM1OC4zOTAyLDM4LjUyOCA1OS4wMDAyLDM1LjMzNiA1OS4wMDAyLDMyIEM1OS4wMDAyLDI4LjcxMyA1OC40MTEyLDI1LjU2MyA1Ny4zMzUyLDIyLjY0OSBMNDMuNzUyMiwyOS4xNDggQzQyLjY1MzIsMjkuNjc0IDQxLjk2MjIsMzAuNzg2IDQxLjk2MTE5MDIsMzIuMDA0IEw0MS45NjExOTAyLDMyLjA1NCBDNDEuOTU4MiwzMy4yNyA0Mi42NDMyLDM0LjM4MSA0My43MzcyLDM0LjkxMSBMNTcuMjg1Miw0MS40NzggWiIvPgogICAgPHBhdGggZmlsbD0iI0YwNEU5OCIgZD0iTTM4LjMxMDUsMzkuODIzNyBDMzguMjY3NSwzOS44NTc3IDM4LjIyNDUsMzkuODkxNyAzOC4xODE1LDM5LjkyNTcgQzM3LjIyNzUsNDAuNjY5NyAzNi43OTU1LDQxLjkwMDcgMzcuMDYxNSw0My4wODE3IEw0MC4zNTM1LDU3LjY3NjcgQzQ2LjU1OTUsNTUuNjU3NyA1MS43ODE1LDUxLjQ1OTcgNTUuMTA0NSw0NS45Nzc3IEw0MS42Mzk1LDM5LjQ1MDcgQzQwLjU0OTUsMzguOTIyNyAzOS4yNTI1LDM5LjA2MzcgMzguMzEwNSwzOS44MjM3Ii8+CiAgPC9nPgo8L3N2Zz4K",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.9.0",
                  "provider": {
                    "name": "DaoCloud"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n  \t\"apiVersion\": \"elasticsearch.k8s.elastic.co\\/v1alpha1\",\n  \t\"kind\": \"Elasticsearch\",\n  \t\"metadata\": {\n  \t\t\"name\": \"elasticsearch-sample\"\n  \t},\n  \t\"spec\": {\n  \t\t\"version\": \"7.2.0\",\n  \t\t\"nodes\": [{\n  \t\t\t\"config\": {\n  \t\t\t\t\"node.master\": true,\n  \t\t\t\t\"node.data\": true,\n  \t\t\t\t\"node.attr.attr_name\": \"attr_value\"\n  \t\t\t},\n  \t\t\t\"podTemplate\": {\n  \t\t\t\t\"metadata\": {\n  \t\t\t\t\t\"labels\": {\n  \t\t\t\t\t\t\"foo\": \"bar\"\n  \t\t\t\t\t}\n  \t\t\t\t},\n  \t\t\t\t\"spec\": {\n  \t\t\t\t\t\"containers\": [{\n  \t\t\t\t\t\t\"name\": \"elasticsearch\",\n  \t\t\t\t\t\t\"resources\": {\n  \t\t\t\t\t\t\t\"limits\": {\n  \t\t\t\t\t\t\t\t\"memory\": \"2Gi\",\n  \t\t\t\t\t\t\t\t\"cpu\": 1\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}]\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t\"nodeCount\": 3\n  \t\t}]\n  \t}\n  },\n  {\n  \t\"apiVersion\": \"kibana.k8s.elastic.co\\/v1alpha1\",\n  \t\"kind\": \"Kibana\",\n  \t\"metadata\": {\n  \t\t\"name\": \"kibana-sample\"\n  \t},\n  \t\"spec\": {\n  \t\t\"version\": \"7.2.0\",\n  \t\t\"nodeCount\": 1,\n  \t\t\"elasticsearchRef\": {\n  \t\t\t\"name\": \"elasticsearch-sample\"\n  \t\t},\n  \t\t\"podTemplate\": {\n  \t\t\t\"metadata\": {\n  \t\t\t\t\"labels\": {\n  \t\t\t\t\t\"foo\": \"bar\"\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t\"spec\": {\n  \t\t\t\t\"containers\": [{\n  \t\t\t\t\t\"name\": \"kibana\",\n  \t\t\t\t\t\"resources\": {\n  \t\t\t\t\t\t\"limits\": {\n  \t\t\t\t\t\t\t\"memory\": \"1Gi\",\n  \t\t\t\t\t\t\t\"cpu\": 1\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t}]\n  \t\t\t}\n  \t\t}\n  \t}\n  },\n  {\n    \"apiVersion\": \"apm.k8s.elastic.co\\/v1alpha1\",\n    \"kind\": \"ApmServer\",\n    \"metadata\": {\n      \"labels\": {\n        \"controller-tools.k8s.io\": \"1.0\"\n      },\n      \"name\": \"apmserver-sample\"\n    },\n    \"spec\": {\n      \"version\": \"7.2.0\",\n      \"nodeCount\": 1,\n      \"elasticsearchRef\": {\n  \t\t\t\"name\": \"elasticsearch-sample\"\n  \t\t}\n    }\n  }\n]\n",
                    "capabilities": "Full Lifecycle",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "docker.elastic.co/eck/eck-operator:0.9.0",
                    "createdAt": "2019-04-30 18:35:59",
                    "description": "在Kubernetes或OpenShift平台上部署Elasticsearch、Kibana和APM Server",
                    "repository": "https://github.com/elastic/cloud-on-k8s",
                    "support": "elastic.co"
                  },
                  "description": "支持在Kubernetes上对Elasticsearch，Kibana和APM Server进行自动部署、配置和管理。\n这是一个alpha版本。\n当前功能：\n\n*  Elasticsearch，Kibana和APM Server自动部署\n*  TLS认证\n*  持久化存储\n*  自定义集群配置\n\n支持版本：\n\n*  Kubernetes: 1.11+\n\n快速入门请参阅此文档 [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/0.9/index.html)",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "elasticsearches.elasticsearch.k8s.elastic.co",
                        "version": "v1alpha1",
                        "kind": "Elasticsearch",
                        "displayName": "Elasticsearch集群",
                        "description": "ElasticSearch实例"
                      },
                      {
                        "name": "kibanas.kibana.k8s.elastic.co",
                        "version": "v1alpha1",
                        "kind": "Kibana",
                        "displayName": "Kibana",
                        "description": "Kibana实例"
                      },
                      {
                        "name": "apmservers.apm.k8s.elastic.co",
                        "version": "v1alpha1",
                        "kind": "ApmServer",
                        "displayName": "APM server",
                        "description": "APM server实例"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "preview"
          }
        },
        {
          "metadata": {
            "name": "kubebuilder-demo",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/kubebuilder-demo",
            "creationTimestamp": "2019-08-30T04:05:35Z",
            "labels": {
              "catalog": "my-operator-catalog",
              "catalog-namespace": "olm",
              "provider": "",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "my-operator-catalog",
            "catalogSourceDisplayName": "DaoCloud Operators",
            "catalogSourcePublisher": "daocloud.io",
            "catalogSourceNamespace": "olm",
            "provider": {

            },
            "packageName": "kubebuilder-demo",
            "channels": [
              {
                "name": "version-1",
                "currentCSV": "kubebuilder-demo.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "Kubebuilder Demo",
                  "version": "0.1.0",
                  "provider": {

                  },
                  "annotations": {
                    "capabilities": "Basic Install"
                  },
                  "description": "Placeholder description",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "sloops.ships.k8s.io",
                        "version": "v1beta1",
                        "kind": "Sloop",
                        "displayName": "kubebuilder-demo",
                        "description": "kubebuilder-demo"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "version-1"
          }
        },
        {
          "metadata": {
            "name": "podset",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/podset",
            "creationTimestamp": "2019-08-30T04:05:35Z",
            "labels": {
              "catalog": "my-operator-catalog",
              "catalog-namespace": "olm",
              "provider": "DaoCloud",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "my-operator-catalog",
            "catalogSourceDisplayName": "DaoCloud Operators",
            "catalogSourcePublisher": "daocloud.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "DaoCloud"
            },
            "packageName": "podset",
            "channels": [
              {
                "name": "version-1",
                "currentCSV": "podset-operator.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "PodSet Operator",
                  "version": "0.1.0",
                  "provider": {
                    "name": "DaoCloud"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"app.example.com/v1alpha1\",\"kind\":\"PodSet\",\"metadata\":{\"name\":\"example-podset\"},\"spec\":{\"replicas\":3}}]",
                    "capabilities": "Basic Install"
                  },
                  "description": "这是一个Operator Demo，生成并维护指定数目的busybox容器，没有实际用途",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "podsets.app.example.com",
                        "version": "v1alpha1",
                        "kind": "PodSet",
                        "displayName": "PodSet",
                        "description": "创建PodSet实例"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              },
              {
                "name": "version-2",
                "currentCSV": "podset-operator.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "PodSet Operator",
                  "version": "0.1.0",
                  "provider": {
                    "name": "DaoCloud"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"app.example.com/v1alpha1\",\"kind\":\"PodSet\",\"metadata\":{\"name\":\"example-podset\"},\"spec\":{\"replicas\":3}}]",
                    "capabilities": "Basic Install"
                  },
                  "description": "这是一个Operator Demo，生成并维护指定数目的busybox容器，没有实际用途",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "podsets.app.example.com",
                        "version": "v1alpha1",
                        "kind": "PodSet",
                        "displayName": "PodSet",
                        "description": "创建PodSet实例"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "version-1"
          }
        },
        {
          "metadata": {
            "name": "akka-cluster-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/akka-cluster-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Lightbend, Inc.",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Lightbend, Inc."
            },
            "packageName": "akka-cluster-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "akka-cluster-operator.v0.0.1",
                "currentCSVDesc": {
                  "displayName": "Akka Cluster Operator",
                  "icon": [
                    {
                      "base64data": "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA2NTggMjcwIj48dGl0bGU+YWtrYS1mdWxsLWNvbG9yPC90aXRsZT48ZyBpZD0iYWtrYS1mdWxsLWNvbG9yIj48cGF0aCBkPSJNMzQ5LjY0LDEwNS40NlY5My4zNGgxOS45MnY1OC40NGMwLDcuMTMsMS42Niw5Ljc5LDYuMTQsOS43OSwxLjE3LDAsMi42Ni0uMTcsNC4xNS0uMzN2MTYuMWEyOC43MSwyOC43MSwwLDAsMS05Ljc5LDEuMzNjLTQuODEsMC04LjYzLS44My0xMS42Mi0yLjY2YTE1LjQxLDE1LjQxLDAsMCwxLTYuODEtMTAuMTJDMzQ1LjgyLDE3NC42OCwzMzYuMiwxNzksMzIyLjkyLDE3OUEzOS43NCwzOS43NCwwLDAsMSwyOTMsMTY2LjM4Yy04LTguNDYtMTItMTguNzUtMTItMzEuMnM0LTIyLjc1LDEyLTMxLjA1YTM5Ljc3LDM5Ljc3LDAsMCwxLDI5Ljg4LTEyLjYxQzMzNi4zNiw5MS41MiwzNDYuNDksOTcuNDksMzQ5LjY0LDEwNS40NlptLTYsNDhhMjQuNDIsMjQuNDIsMCwwLDAsNy40Ny0xOC4yNiwyNC4zOSwyNC4zOSwwLDAsMC03LjQ3LTE4LjI2LDI0Ljc5LDI0Ljc5LDAsMCwwLTE4LjEtNy4zMSwyNCwyNCwwLDAsMC0xNy43Niw3LjMxYy00LjY1LDQuODEtNywxMS03LDE4LjI2czIuMzIsMTMuNDQsNywxOC4yNmEyNCwyNCwwLDAsMCwxNy43Niw3LjNBMjQuODIsMjQuODIsMCwwLDAsMzQzLjY3LDE1My40NFoiIGZpbGw9IiMwYjU1NjciLz48cGF0aCBkPSJNMzg4LjQ4LDE3N1Y2MS4zMWgxOS43NnY2Ny41NmwzMC44Ny0zNS41M0g0NjJsLTMyLjcsMzcuMzVMNDY1LjUxLDE3N0g0NDIuOTNsLTI2LjM5LTMzLjctOC4zLDkuM1YxNzdaIiBmaWxsPSIjMGI1NTY3Ii8+PHBhdGggZD0iTTQ3MC44MiwxNzdWNjEuMzFoMTkuNzV2NjcuNTZsMzAuODgtMzUuNTNoMjIuOTFsLTMyLjcsMzcuMzVMNTQ3Ljg0LDE3N0g1MjUuMjdsLTI2LjQtMzMuNy04LjMsOS4zVjE3N1oiIGZpbGw9IiMwYjU1NjciLz48cGF0aCBkPSJNNjA3Ljg3LDEwNS40NlY5My4zNGgxOS45MnY1OC40NGMwLDcuMTMsMS42Niw5Ljc5LDYuMTQsOS43OSwxLjE3LDAsMi42Ni0uMTcsNC4xNS0uMzN2MTYuMWEyOC43MSwyOC43MSwwLDAsMS05Ljc5LDEuMzNjLTQuODEsMC04LjYzLS44My0xMS42Mi0yLjY2YTE1LjQxLDE1LjQxLDAsMCwxLTYuODEtMTAuMTJjLTUuODEsOC43OS0xNS40MywxMy4xMS0yOC43MSwxMy4xMWEzOS43NCwzOS43NCwwLDAsMS0yOS44OC0xMi42MmMtOC04LjQ2LTEyLTE4Ljc1LTEyLTMxLjJzNC0yMi43NSwxMi0zMS4wNWEzOS43NywzOS43NywwLDAsMSwyOS44OC0xMi42MUM1OTQuNTksOTEuNTIsNjA0LjcyLDk3LjQ5LDYwNy44NywxMDUuNDZabS02LDQ4YTI0LjQyLDI0LjQyLDAsMCwwLDcuNDctMTguMjYsMjQuMzksMjQuMzksMCwwLDAtNy40Ny0xOC4yNiwyNC43OSwyNC43OSwwLDAsMC0xOC4xLTcuMzFBMjQsMjQsMCwwLDAsNTY2LDExNi45MmMtNC42NSw0LjgxLTcsMTEtNywxOC4yNnMyLjMyLDEzLjQ0LDcsMTguMjZhMjQsMjQsMCwwLDAsMTcuNzYsNy4zQTI0LjgyLDI0LjgyLDAsMCwwLDYwMS45LDE1My40NFoiIGZpbGw9IiMwYjU1NjciLz48cGF0aCBkPSJNMjMwLjI2LDIxMi44MmMzNS44OCwyOC42Nyw1OC45MS01NywxLjc0LTcyLjgyLTQ4LTEzLjI5LTk2LjMzLDkuNS0xNDQuNjYsNjIuNzRDODcuMzQsMjAyLjc0LDE3Ni42NywxNzAsMjMwLjI2LDIxMi44MloiIGZpbGw9IiMwYjU1NjciLz48cGF0aCBkPSJNODguMDgsMjAyYzM0LjQxLTM1LjY5LDkxLjY0LTc1LjUzLDE0NC45LTYwLjc1QTQ2LjA5LDQ2LjA5LDAsMCwxLDI1OS45LDE2MC42TDIwOS40OCw1OC43OGMtNy4yLTExLjQ2LTI1LjU4LTkuMTUtMzUuOTUtLjI2TDQwLjI5LDE3MC4wN2EyNy40LDI3LjQsMCwwLDAtMS41Niw0MC4xNWwwLDBhMjcuNCwyNy40LDAsMCwwLDM2LjUxLDJMODguMTQsMjAyWiIgZmlsbD0iIzE1YTljZSIvPjwvZz48L3N2Zz4=",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.0.1",
                  "provider": {
                    "name": "Lightbend, Inc."
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"app.lightbend.com/v1alpha1\",\n    \"kind\": \"AkkaCluster\",\n    \"metadata\": {\n      \"name\": \"akka-cluster-demo\"\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"template\": {\n        \"spec\": {\n          \"containers\": [\n            {\n              \"name\": \"main\",\n              \"image\": \"lightbend-docker-registry.bintray.io/lightbend/akka-cluster-demo:1.0.2\",\n              \"readinessProbe\": {\n                \"httpGet\": {\n                  \"path\": \"/ready\",\n                  \"port\": \"management\"\n                },\n                \"periodSeconds\": 10,\n                \"failureThreshold\": 10,\n                \"initialDelaySeconds\": 20\n              },\n              \"livenessProbe\": {\n                \"httpGet\": {\n                  \"path\": \"/alive\",\n                  \"port\": \"management\"\n                },\n                \"periodSeconds\": 10,\n                \"failureThreshold\": 10,\n                \"initialDelaySeconds\": 20\n              },\n              \"ports\": [\n                {\n                  \"name\": \"http\",\n                  \"containerPort\": 8080\n                },\n                {\n                  \"name\": \"remoting\",\n                  \"containerPort\": 2552\n                },\n                {\n                  \"name\": \"management\",\n                  \"containerPort\": 8558\n                }\n              ]\n            }\n          ]\n        }\n      }\n    }\n  }\n]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Application Runtime",
                    "certified": "false",
                    "containerImage": "lightbend-docker-registry.bintray.io/lightbend/akkacluster-operator:latest",
                    "createdAt": "2019-06-28T15:23:00Z",
                    "description": "Run Akka Cluster applications on OpenShift.",
                    "repository": "https://github.com/lightbend/akka-cluster-operator",
                    "support": "Lightbend, Inc."
                  },
                  "description": "The Akka Cluster Operator allows you to manage applications designed for\n[Akka Cluster](https://doc.akka.io/docs/akka/current/common/cluster.html).\nClustering with [Akka](https://doc.akka.io/docs/akka/current/guide/introduction.html) provides a\nfault-tolerant, decentralized, peer-to-peer based cluster\nfor building stateful, distributed applications with no single point of failure.\nDevelopers should use Akka Management v1.x or newer, with both Bootstrap and HTTP modules enabled.\nWhen deploying using the Akka Cluster Operator, only the `management port` needs to be defined.\nDefaults are provided by the Operator for all other required configuration.\nThe Akka Cluster Operator provides scalabililty control and membership status information\nfor deployed applications using Akka Cluster. As part of supervising membership of running clusters,\nthis Operator creates a pod-listing ServiceAccount, Role, and RoleBinding suitable for\neach application. See the project [Readme](https://github.com/lightbend/akka-cluster-operator/blob/master/README.md)\nfor more information and details.\nThis is an incubating project in alpha version.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "akkaclusters.app.lightbend.com",
                        "version": "v1alpha1",
                        "kind": "AkkaCluster",
                        "displayName": "Akka Cluster",
                        "description": "An example Akka Cluster app that provides cluster visualization.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "ServiceAccount",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Role",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "RoleBinding",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicaSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pods",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "cluster",
                            "displayName": "Cluster",
                            "description": "Information on the cluster"
                          },
                          {
                            "path": "lastUpdate",
                            "displayName": "Last Update",
                            "description": "The last time the status changed"
                          },
                          {
                            "path": "managementHost",
                            "displayName": "Management Host",
                            "description": "The host of the (host,port) pair used to obtain the cluster status"
                          },
                          {
                            "path": "managementPort",
                            "displayName": "Management Port",
                            "description": "The port of the (host,port) pair used to obtain the cluster status"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "replicas",
                            "displayName": "Replica Count",
                            "description": "The desired number of pod instances in the Akka Cluster"
                          },
                          {
                            "path": "template",
                            "displayName": "Template",
                            "description": "The template used to form the cluster"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "appsody-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/appsody-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Appsody",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Appsody"
            },
            "packageName": "appsody-operator",
            "channels": [
              {
                "name": "beta",
                "currentCSV": "appsody-operator.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "Appsody Operator",
                  "icon": [
                    {
                      "base64data": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1Ni43MSA1MC43NSI+PGRlZnM+PHN0eWxlPi5he2lzb2xhdGlvbjppc29sYXRlO30uYntvcGFjaXR5OjAuODt9LmIsLmV7bWl4LWJsZW5kLW1vZGU6bXVsdGlwbHk7fS5je2ZpbGw6I2VkOGUwMDt9LmR7ZmlsbDojYzQzMDJmO30uZXtmaWxsOiNhZjFmNjQ7b3BhY2l0eTowLjg1O308L3N0eWxlPjwvZGVmcz48dGl0bGU+QXNzZXQgMjwvdGl0bGU+PGcgY2xhc3M9ImEiPjxnIGNsYXNzPSJiIj48cGF0aCBjbGFzcz0iYyIgZD0iTTI1Ljg4LjI4Yy0yLjUtLjgxLTUuNTguMTQtOC42MywzLjA2TDMuODcsMTYuMTdDLTIuMjIsMjItMSwyOC44MSw2LjYyLDMxLjI3bDE2LjcsNS40MWM3LjYxLDIuNDYsMTIuNi0yLjMyLDExLjA4LTEwLjYyTDMxLjA4LDcuODJjLS43Ni00LjE1LTIuNjktNi43My01LjItNy41NFoiLz48L2c+PGcgY2xhc3M9ImIiPjxwYXRoIGNsYXNzPSJkIiBkPSJNMzcuOTQsMy4xNEExNS43MywxNS43MywwLDAsMCwzMi41NSw0LjZMMTQuNjYsMTIuNzNjLTQuNTcsMi4wNy03LjMxLDUuMjYtNy43Miw5LS4zOSwzLjUyLDEuNDIsNyw1LjA4LDkuNzRsMTUsMTEuMzFhMTIuMjgsMTIuMjgsMCwwLDAsOC4wNiwyLjhjNC43Ny0uMzEsOC4yOS00LjM1LDkuMi0xMC41M2wyLjg0LTE5LjQ0QzQ4LjEyLDksNDUuNTEsNiw0My44Nyw0Ljc1YTguNzksOC43OSwwLDAsMC01LjkzLTEuNjFaIi8+PC9nPjxwYXRoIGNsYXNzPSJlIiBkPSJNMzMuOCw1MC43MWMtMi45My0uMzMtNS41Ny0yLjM5LTcuNDktNS44OEwxNywyNy44Yy0yLjExLTMuODMtMi4zLTcuNDYtLjU0LTEwLjIyczUuMjEtNC4yNiw5Ljc2LTQuMjhsMjAuMjctLjA3YzQuNTYsMCw3LjkxLDEuNSw5LjQyLDQuMjVzMSw2LjM5LTEuNDUsMTAuMjNMNDMuNDksNDQuOGMtMi40NCwzLjgzLTUuNTgsNS45NC04LjgzLDZBNi4xMiw2LjEyLDAsMCwxLDMzLjgsNTAuNzFaIi8+PC9nPjwvc3ZnPg==",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "Appsody"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"appsody.dev/v1beta1\",\"kind\":\"AppsodyApplication\",\"metadata\":{\"name\":\"example-appsodyapplication\"},\"spec\":{\"applicationImage\":\"APPLICATION_IMAGE\",\"stack\":\"java-microprofile\"}}]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Application Runtime",
                    "certified": "true",
                    "containerImage": "appsody/application-operator:0.1.0",
                    "createdAt": "2019-08-23 09:00:00",
                    "description": "Deploys Appsody based applications",
                    "repository": "https://github.com/appsody/appsody-operator",
                    "support": "Appsody"
                  },
                  "description": "The Appsody Operator allows easy deployment of applications developed with [Appsody](https://appsody.dev) to Kubernetes environments. The operator provides the following key features:\n\n#### Routing\n\nExpose your application to external users via a single toggle.\n\n#### High Availability\n\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence\n\nEnable persistence for your application by specifying storage requirements.\n\n#### Knative\n\nDeploy your serverless application on [Knative](https://knative.dev) using a single toggle.\n\nSee our [**documentation**](https://github.com/appsody/appsody-operator/tree/master/doc/) for more information.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "appsodyapplications.appsody.dev",
                        "version": "v1beta1",
                        "kind": "AppsodyApplication",
                        "displayName": "Appsody Application",
                        "description": "Describes application deployment",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": ""
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": ""
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": ""
                          },
                          {
                            "name": "",
                            "kind": "Route",
                            "version": ""
                          },
                          {
                            "name": "",
                            "kind": "HorizontalPodAutoscaler",
                            "version": ""
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "conditions",
                            "displayName": "Status conditions",
                            "description": "status conditions",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "stack",
                            "displayName": "Stack",
                            "description": "application stack",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "applicationImage",
                            "displayName": "Application Image",
                            "description": "application image to be installed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:text"
                            ]
                          },
                          {
                            "path": "pullPolicy",
                            "displayName": "Pull Policy",
                            "description": "image pull policy for container image",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:imagePullPolicy"
                            ]
                          },
                          {
                            "path": "replicas",
                            "displayName": "Replicas",
                            "description": "number of pods to create",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "expose",
                            "displayName": "Expose",
                            "description": "automatically create HTTP Route",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "resourceConstraints",
                            "displayName": "Resource Requirements",
                            "description": "resource requirements for cpu and memory",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          },
                          {
                            "path": "service.port",
                            "displayName": "Service Port",
                            "description": "port to use for kubernetes service",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:number"
                            ]
                          },
                          {
                            "path": "service.type",
                            "displayName": "Service Type",
                            "description": "type to use for kubernetes service",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:text"
                            ]
                          },
                          {
                            "path": "autoscaling",
                            "displayName": "Autoscaling",
                            "description": "horizontal pod autoscaling",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:fieldGroup:label"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "beta"
          }
        },
        {
          "metadata": {
            "name": "aqua",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/aqua",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Aqua Security, Inc.",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Aqua Security, Inc."
            },
            "packageName": "aqua",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "aqua-operator.v0.0.2",
                "currentCSVDesc": {
                  "displayName": "Aqua Security Operator",
                  "icon": [
                    {
                      "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIzLjAuMiwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCAxMDAgMTAwIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAxMDAgMTAwOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6I0YwREUzNDt9Cgkuc3Qxe2ZpbGw6I0Y5QUU0MTt9Cgkuc3Qye2ZpbGw6Izk5RDVFQjt9Cgkuc3Qze2ZpbGw6IzAyQjBENDt9Cgkuc3Q0e2ZpbGw6I0Y1OTMyMDt9Cgkuc3Q1e2ZpbGw6IzA5ODA5QTt9Cjwvc3R5bGU+CjxnPgoJPHBvbHlnb24gY2xhc3M9InN0MCIgcG9pbnRzPSI1MCwyLjEgMjUuNSwyNi4xIDc0LjUsMjYuMSA3NC41LDIuMSAJIi8+Cgk8cG9seWdvbiBjbGFzcz0ic3QxIiBwb2ludHM9Ijc0LjUsNzMuOSA5OSw1MCA5OSwyNi4xIDc0LjUsMjYuMSAJIi8+Cgk8cG9seWdvbiBjbGFzcz0ic3QyIiBwb2ludHM9IjI1LjUsNzMuOSAyNS41LDk3LjkgNTAsOTcuOSA3NC41LDczLjkgCSIvPgoJPHBvbHlnb24gY2xhc3M9InN0MyIgcG9pbnRzPSIxLDUwIDEsNzMuOSAyNS41LDczLjkgMjUuNSwyNi4xIAkiLz4KCTxyZWN0IHg9Ijc0LjUiIHk9IjIuMSIgY2xhc3M9InN0NCIgd2lkdGg9IjI0LjUiIGhlaWdodD0iMjMuOSIvPgoJPHJlY3QgeD0iMSIgeT0iNzMuOSIgY2xhc3M9InN0NSIgd2lkdGg9IjI0LjUiIGhlaWdodD0iMjMuOSIvPgo8L2c+Cjwvc3ZnPgo=",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.0.2",
                  "provider": {
                    "name": "Aqua Security, Inc."
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"operator.aquasec.com/v1alpha1\",\n    \"kind\": \"AquaCsp\",\n    \"metadata\": {\n      \"name\": \"aqua\"\n    },\n    \"spec\": {\n      \"requirements\": true,\n      \"password\": \"password\",\n      \"rbac\": {\n        \"enable\": true,\n        \"privileged\": true\n      },\n      \"registry\": {\n        \"url\": \"registry.aquasec.com\",\n        \"username\": \"example@gmail.com\",\n        \"password\": \"\",\n        \"email\": \"example@gmail.com\"\n      },\n      \"database\": {\n        \"replicas\": 1,\n        \"service\": \"ClusterIP\",\n        \"image\": {\n          \"repository\": \"database\",\n          \"registry\": \"registry.aquasec.com\",\n          \"tag\": \"4.0\",\n          \"pullPolicy\": \"IfNotPresent\"\n        }\n      },\n      \"gateway\": {\n        \"replicas\": 1,\n        \"service\": \"ClusterIP\",\n        \"image\": {\n          \"repository\": \"gateway\",\n          \"registry\": \"registry.aquasec.com\",\n          \"tag\": \"4.0\",\n          \"pullPolicy\": \"IfNotPresent\"\n        }\n      },\n      \"server\": {\n        \"replicas\": 1,\n        \"service\": \"LoadBalancer\",\n        \"image\": {\n          \"repository\": \"console\",\n          \"registry\": \"registry.aquasec.com\",\n          \"tag\": \"4.0\",\n          \"pullPolicy\": \"IfNotPresent\"\n        }\n      },\n      \"scanner\": {\n        \"deploy\": {\n          \"replicas\": 1,\n          \"service\": \"ClusterIP\",\n          \"image\": {\n            \"repository\": \"scanner\",\n            \"registry\": \"registry.aquasec.com\",\n            \"tag\": \"4.0\",\n            \"pullPolicy\": \"IfNotPresent\"\n          }\n        },\n        \"min\": 1,\n        \"max\": 5,\n        \"imagesPerScanner\": 100\n      },\n      \"adminPassword\": \"Password1\",\n      \"licenseToken\": null,\n      \"clustermode\": false,\n      \"ssl\": false,\n      \"auditSsl\": false\n    }\n  },\n  {\n    \"apiVersion\": \"operator.aquasec.com/v1alpha1\",\n    \"kind\": \"AquaDatabase\",\n    \"metadata\": {\n      \"name\": \"aqua\"\n    },\n    \"spec\": {\n      \"requirements\": true,\n      \"password\": \"password\",\n      \"registry\": {\n        \"url\": \"registry.aquasec.com\",\n        \"username\": \"example@gmail.com\",\n        \"password\": \"\",\n        \"email\": \"example@gmail.com\"\n      },\n      \"deploy\": {\n        \"replicas\": 1,\n        \"service\": \"ClusterIP\",\n        \"image\": {\n          \"repository\": \"database\",\n          \"registry\": \"registry.aquasec.com\",\n          \"tag\": \"4.0\",\n          \"pullpolicy\": \"IfNotPresent\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"operator.aquasec.com/v1alpha1\",\n    \"kind\": \"AquaEnforcer\",\n    \"metadata\": {\n      \"name\": \"aqua\"\n    },\n    \"spec\": {\n      \"requirements\": false,\n      \"serviceAccount\": \"aqua-sa\",\n      \"token\": \"tests\",\n      \"rbac\": {\n        \"enable\": false,\n        \"privileged\": true\n      },\n      \"deploy\": {\n        \"image\": {\n          \"repository\": \"enforcer\",\n          \"registry\": \"registry.aquasec.com\",\n          \"tag\": \"4.0\",\n          \"pullPolicy\": \"IfNotPresent\"\n        }\n      },\n      \"gateway\": {\n        \"host\": \"aqua-gateway-svc\",\n        \"port\": 3622\n      },\n      \"sendingHostImages\": false,\n      \"runcInterception\": false\n    }\n  },\n  {\n    \"apiVersion\": \"operator.aquasec.com/v1alpha1\",\n    \"kind\": \"AquaGateway\",\n    \"metadata\": {\n      \"name\": \"aqua\"\n    },\n    \"spec\": {\n      \"requirements\": false,\n      \"serviceAccount\": \"aqua-sa\",\n      \"dbSecretName\": \"aqua-database-password\",\n      \"dbSecretKey\": \"db-password\",\n      \"deploy\": {\n        \"replicas\": 1,\n        \"service\": \"ClusterIP\",\n        \"image\": {\n          \"repository\": \"gateway\",\n          \"registry\": \"registry.aquasec.com\",\n          \"tag\": \"3.5\",\n          \"pullpolicy\": \"IfNotPresent\"\n        }\n      },\n      \"aquaDb\": \"aqua-database\",\n      \"ssl\": false,\n      \"auditSsl\": false\n    }\n  },\n  {\n    \"apiVersion\": \"operator.aquasec.com/v1alpha1\",\n    \"kind\": \"AquaScanner\",\n    \"metadata\": {\n      \"name\": \"aqua\"\n    },\n    \"spec\": {\n      \"requirements\": false,\n      \"serviceAccount\": \"aqua-sa\",\n      \"deploy\": {\n        \"replicas\": 1,\n        \"service\": \"ClusterIP\",\n        \"image\": {\n          \"repository\": \"scanner\",\n          \"registry\": \"registry.aquasec.com\",\n          \"tag\": \"4.0\",\n          \"pullPolicy\": \"IfNotPresent\"\n        }\n      },\n      \"login\": {\n        \"username\": \"administrator\",\n        \"password\": \"Password1\",\n        \"host\": \"http://aqua-server-svc:8080\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"operator.aquasec.com/v1alpha1\",\n    \"kind\": \"AquaServer\",\n    \"metadata\": {\n      \"name\": \"aqua\"\n    },\n    \"spec\": {\n      \"requirements\": false,\n      \"add\": false,\n      \"serviceAccount\": \"aqua-sa\",\n      \"dbSecretName\": \"aqua-database-password\",\n      \"dbSecretKey\": \"db-password\",\n      \"rbac\": {\n        \"enable\": true,\n        \"privileged\": true\n      },\n      \"deploy\": {\n        \"replicas\": 1,\n        \"service\": \"LoadBalancer\",\n        \"image\": {\n          \"repository\": \"console\",\n          \"registry\": \"registry.aquasec.com\",\n          \"tag\": \"3.5\",\n          \"pullPolicy\": \"IfNotPresent\"\n        }\n      },\n      \"aquaDb\": \"aqua-database\",\n      \"adminPassword\": \"Password1\",\n      \"licenseToken\": null,\n      \"clusterMode\": true,\n      \"ssl\": false,\n      \"auditSsl\": false,\n      \"dockerless\": false\n    }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "Security",
                    "certified": "false",
                    "containerImage": "aquasec/aqua-operator:0.0.2",
                    "createdAt": "2019-03-21 08:00:00",
                    "description": "The Aqua Security Operator runs within Kubernetes cluster and provides a means to deploy and manage Aqua Security cluster and components.",
                    "repository": "https://github.com/aquasecurity/aqua-operator",
                    "support": "Aqua Security, Inc."
                  },
                  "description": "The Aqua Security Operator runs within a Kubernetes cluster, and provides a means to deploy and manage the Aqua Security cluster and components\n* Server (sometimes called “console”)\n* Database (not recommended for production environments)\n* Gateway\n* Enforcer (sometimes called “agent”)\n* Scanner\n* CSP (package containing the Server, Database, and Gateway - not supported, and not for production environments)\nUse the aqua-operator to - \n* Deploy Aqua Security components on Kubernetes\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n* Automatically scale the number of Aqua scanners according to the number of images in the scan queue\n## Before You Begin Using the Operator CRDs\nObtain access to the Aqua registry https://www.aquasec.com/about-us/contact-us/\n### Kubernetes 1.11, 1.12, 1.13 or 1.14\nThe operator in Kubernetes needs to be able to create the all the requirements by passing the parameter **requirements** as `true`.\nYou can also create the requirements\n* Service account with pull permissions from the Aqua Docker registry\n* Secret for the Docker registry \n* Secret for the database\n## After the Installation\nOnce the operator is installed in the cluster, you now can use the CRDs to install the Aqua cluster and components.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "aquacsps.operator.aquasec.com",
                        "version": "v1alpha1",
                        "kind": "AquaCsp",
                        "displayName": "AquaCsp",
                        "description": "Aqua Security CSP Deployment with Aqua Operator"
                      },
                      {
                        "name": "aquadatabases.operator.aquasec.com",
                        "version": "v1alpha1",
                        "kind": "AquaDatabase",
                        "displayName": "AquaDatabase",
                        "description": "Aqua Security Database Deployment with Aqua Operator"
                      },
                      {
                        "name": "aquaenforcers.operator.aquasec.com",
                        "version": "v1alpha1",
                        "kind": "AquaEnforcer",
                        "displayName": "AquaEnforcer",
                        "description": "Aqua Security Enforcer Deployment with Aqua Operator"
                      },
                      {
                        "name": "aquagateways.operator.aquasec.com",
                        "version": "v1alpha1",
                        "kind": "AquaGateway",
                        "displayName": "AquaGateway",
                        "description": "Aqua Security Gateway Deployment with Aqua Operator"
                      },
                      {
                        "name": "aquascanners.operator.aquasec.com",
                        "version": "v1alpha1",
                        "kind": "AquaScanner",
                        "displayName": "AquaScanner",
                        "description": "Aqua Security Scanner Deployment with Aqua Operator"
                      },
                      {
                        "name": "aquaservers.operator.aquasec.com",
                        "version": "v1alpha1",
                        "kind": "AquaServer",
                        "displayName": "AquaServer",
                        "description": "Aqua Security Server Deployment with Aqua Operator"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "atlasmap-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/atlasmap-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "AtlasMap",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "AtlasMap"
            },
            "packageName": "atlasmap-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "atlasmap-operator.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "AtlasMap Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "AtlasMap"
                  },
                  "annotations": {
                    "alm-examples": "[{\n  \"apiVersion\":\"atlasmap.io/v1alpha1\",\n  \"kind\":\"AtlasMap\",\n  \"metadata\": {\n    \"name\":\"example-atlasmap\"\n  },\n  \"spec\": {\n    \"replicas\":1\n  }\n}]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Integration \u0026 Delivery",
                    "certified": "false",
                    "containerImage": "docker.io/atlasmap/atlasmap-operator",
                    "createdAt": "2019-06-10 06:42:43",
                    "description": "AtlasMap is a data mapping solution with an interactive web based user interface, that simplifies configuring integrations between Java, XML, and JSON data sources",
                    "repository": "https://github.com/atlasmap/atlasmap-operator",
                    "support": "AtlasMap"
                  },
                  "description": "AtlasMap is a data mapping solution with an interactive web based user interface, that simplifies configuring integrations between Java, XML, and JSON data sources.\n\nThe AtlasMap operator simplifies the deployment of AtlasMap on OpenShift / Kubernetes clusters.\n\nFor further information about AtlasMap and the operator, visit the documentation.\n\n* [AtlasMap documentation](https://www.atlasmap.io/)\n* [AtlasMap operator documentation](https://github.com/atlasmap/atlasmap-operator)\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "atlasmaps.atlasmap.io",
                        "version": "v1alpha1",
                        "kind": "AtlasMap",
                        "displayName": "AtlasMap",
                        "description": "A running AtlasMap instance",
                        "statusDescriptors": [
                          {
                            "path": "URL",
                            "displayName": "URL",
                            "description": "URL of the AtlasMap instance"
                          },
                          {
                            "path": "image",
                            "displayName": "Image",
                            "description": "Image used for the AtlasMap containers"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "replicas",
                            "displayName": "Size",
                            "description": "Desired number of AtlasMap Pods for the cluster"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "aws-service",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/aws-service",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Amazon Web Services, Inc.",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Amazon Web Services, Inc."
            },
            "packageName": "aws-service",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "aws-service-operator.v0.0.1",
                "currentCSVDesc": {
                  "displayName": "AWS Service Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.0.1",
                  "provider": {
                    "name": "Amazon Web Services, Inc."
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"service-operator.aws/v1alpha1\",\n    \"kind\": \"CloudFormationTemplate\",\n    \"metadata\": {\n      \"name\": \"ecrrepository\"\n    },\n    \"data\": {\n      \"key\": \"ecrrepository.yaml\",\n      \"template\": \"AWSTemplateFormatVersion: 2010-09-09\\nDescription: 'AWS Service Operator - Amazon ECR Repository (aso-1otq2cgc9)'\\nParameters:\\n  Namespace:\\n    Description: \u003e-\\n      This is the namespace for the Kubernetes object.\\n    Type: String\\n  ResourceVersion:\\n    Type: String\\n    Description: \u003e-\\n      This is the resource version for the Kubernetes object.\\n  ResourceName:\\n    Description: \u003e-\\n      This is the resource name for the Kubernetes object\\n    Type: String\\n  ClusterName:\\n    Description: \u003e-\\n      This is the cluster name for the operator\\n    Type: String\\n  RepositoryName:\\n    Type: String\\n    Description: \u003e-\\n      What should the ECR Repository be named\\nResources:\\n  ECRRepository:\\n    Type: AWS::ECR::Repository\\n    Properties:\\n      RepositoryName: !Ref RepositoryName\\nOutputs:\\n  RepositoryName:\\n    Value: !Ref ECRRepository\\n    Description: Name of the topic\\n  RepositoryARN:\\n    Value: !GetAtt ECRRepository.Arn\\n    Description: ARN of the Repository\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"service-operator.aws/v1alpha1\",\n    \"kind\": \"DynamoDB\",\n    \"metadata\": {\n      \"name\": \"example-table-name\"\n    },\n    \"spec\": {\n      \"hashAttribute\": {\n        \"name\": \"user_id\",\n        \"type\": \"S\"\n      },\n      \"rangeAttribute\": {\n        \"name\": \"created_at\",\n        \"type\": \"S\"\n      },\n      \"readCapacityUnits\": 5,\n      \"writeCapacityUnits\": 5\n    }\n  },\n  {\n    \"apiVersion\": \"service-operator.aws/v1alpha1\",\n    \"kind\": \"ECRRepository\",\n    \"metadata\": {\n      \"name\": \"example-repository-name\"\n    }\n  },\n  {\n    \"apiVersion\": \"service-operator.aws/v1alpha1\",\n    \"kind\": \"ElastiCache\",\n    \"metadata\": {\n      \"name\": \"memcached13\"\n    },\n    \"spec\": {\n      \"cacheSubnetGroupName\": \"loadtest-cluster-k8s\",\n      \"vpcSecurityGroupIds\": \"sg-0581b94aa3c0db58c, sg-02b6d0034e8c2fa1b\",\n      \"autoMinorVersionUpgrade\": true,\n      \"engine\": \"memcached\",\n      \"engineVersion\": \"1.5.10\",\n      \"numCacheNodes\": 1,\n      \"port\": 11211,\n      \"cacheNodeType\": \"cache.m4.large\"\n    }\n  },\n  {\n    \"apiVersion\": \"service-operator.aws/v1alpha1\",\n    \"kind\": \"S3Bucket\",\n    \"metadata\": {\n      \"name\": \"Private\"\n    },\n    \"spec\": {\n      \"versioning\": true,\n      \"accessControl\": \"PublicRead\",\n      \"website\": {\n        \"enabled\": true,\n        \"indexPage\": \"index.html\",\n        \"errorPage\": \"500.html\"\n      },\n      \"logging\": {\n        \"enabled\": false,\n        \"prefix\": \"archive\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"service-operator.aws/v1alpha1\",\n    \"kind\": \"SNSSubscription\",\n    \"metadata\": {\n      \"name\": \"example-sns-subscription-name\"\n    },\n    \"spec\": {\n      \"topicName\": \"example-sns-topic-name\",\n      \"protocol\": \"sqs\",\n      \"endpoint\": \"example-sqs-queue-name\"\n    }\n  },\n  {\n    \"apiVersion\": \"service-operator.aws/v1alpha1\",\n    \"kind\": \"SNSTopic\",\n    \"metadata\": {\n      \"name\": \"example-sns-topic-name\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"service-operator.aws/v1alpha1\",\n    \"kind\": \"SQSQueue\",\n    \"metadata\": {\n      \"name\": \"example-sqs-queue-name\"\n    },\n    \"spec\": {\n      \"contentBasedDeduplication\": true,\n      \"delaySeconds\": 5,\n      \"usedeadletterQueue\": false,\n      \"maximumMessageSize\": 262144,\n      \"messageRetentionPeriod\": 345600,\n      \"visibilityTimeout\": 30\n    }\n  }\n]",
                    "categories": "Cloud Provider",
                    "containerImage": "awsserviceoperator/aws-service-operator:v0.0.1-alpha3",
                    "createdAt": "2019-02-09 12:00:00",
                    "description": "The AWS Service Operator allows you to manage AWS resources using Kubernetes Custom Resource Definitions.",
                    "support": "AWS Labs"
                  },
                  "description": "The AWS Service Operator allows you to manage AWS resources using Kubernetes Custom Resource Definitions. Using the AWS Service Operator enables a gitops workflow to drive your infrastructure to the desired state leveraging Kubernetes Custom Resource Definitions (CRD), the Kubernetes internal control loop, and AWS CloudFormation orchestration.\n\nIn order to run the Operator the node will need AWS IAM privileges. This can be done through a service like [kube2iam](https://github.com/jtblin/kube2iam). If you are using an Amazon Elastic Container Service for Kubernetes (EKS) cluster, you most likely provisioned this with CloudFormation.\n\nThe command shown below will use the CloudFormation stacks to try to update the proper Instance Policy with the correct permissions. Make sure to replace `${STACK_NAME}` with the nodegroup stack name from the CloudFormation console. A more limited IAM role may be substituted if desired.\n\n\n    aws iam attach-role-policy --policy-arn arn:aws:iam::aws:policy/AdministratorAccess --role-name $(aws cloudformation describe-stacks --stack-name ${STACK_NAME} --output json | jq -r \".Stacks[0].Outputs[0].OutputValue\" | sed -e 's/.*\\///g')\n\n\nBefore running this operator, you will need to create a Secret that contains your `cluster-name`, `region`, and `account-id`. You can do so based off the template below:\n\n\n    apiVersion:v1\n    kind: Secret metadata:\n      name: aws-service-operator-config\n      namespace: \u003cNAMESPACE\u003e\n    type: Opaque\n    stringData:\n      CLUSTER_NAME: \"\u003cCLUSTER_NAME\u003e\"\n      REGION: \"\u003cREGION\u003e\"\n      ACCOUNT_ID: \"\u003c000000000000\u003e\"\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "cloudformationtemplates.service-operator.aws",
                        "version": "v1alpha1",
                        "kind": "CloudFormationTemplate",
                        "displayName": "CloudFormationTemplate",
                        "description": "Represents a resource for managing AWS CloudFormation Templates."
                      },
                      {
                        "name": "dynamodbs.service-operator.aws",
                        "version": "v1alpha1",
                        "kind": "DynamoDB",
                        "displayName": "DynamoDB",
                        "description": "Represents a resource for managing an Amazon DynamoDB resource."
                      },
                      {
                        "name": "ecrrepositories.service-operator.aws",
                        "version": "v1alpha1",
                        "kind": "ECRRepository",
                        "displayName": "ECRRepository",
                        "description": "Represents a resource for managing an Amazon ECR Repository."
                      },
                      {
                        "name": "elasticaches.service-operator.aws",
                        "version": "v1alpha1",
                        "kind": "ElastiCache",
                        "displayName": "ElastiCache",
                        "description": "Represents a resource for managing an Amazon ElastiCache."
                      },
                      {
                        "name": "s3buckets.service-operator.aws",
                        "version": "v1alpha1",
                        "kind": "S3Bucket",
                        "displayName": "S3Bucket",
                        "description": "Represents a resource for managing an Amazon S3 Bucket."
                      },
                      {
                        "name": "snssubscriptions.service-operator.aws",
                        "version": "v1alpha1",
                        "kind": "SNSSubscription",
                        "displayName": "SNSSubscription",
                        "description": "Represents a resource for managing an Amazon Simple Notification Service Subscription."
                      },
                      {
                        "name": "snstopics.service-operator.aws",
                        "version": "v1alpha1",
                        "kind": "SNSTopic",
                        "displayName": "SNSTopic",
                        "description": "Represents a resource for managing an Amazon Simple Notification Service (SNS)."
                      },
                      {
                        "name": "sqsqueues.service-operator.aws",
                        "version": "v1alpha1",
                        "kind": "SQSQueue",
                        "displayName": "SQSQueue",
                        "description": "Represents a resource for managing an Amazon Simple Queue Service (SQS)."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "awss3-operator-registry",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/awss3-operator-registry",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Red Hat",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Red Hat"
            },
            "packageName": "awss3-operator-registry",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "awss3operator.v1.0.1",
                "currentCSVDesc": {
                  "displayName": "AWS S3 Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "1.0.1",
                  "provider": {
                    "name": "Red Hat"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"objectbucket.io/v1alpha1\",\"kind\":\"ObjectBucketClaim\",\"metadata\":{\"name\":\"myobc\",\"namespace\":\"app-namespace\"},\"spec\":{\"generateBucketName\":\"mybucket-\",\"bucketName\":\"my-awesome-bucket\",\"storageClassName\":\"mystorageclass\"}},{\"apiVersion\":\"objectbucket.io/v1alpha1\",\"kind\":\"ObjectBucket\",\"metadata\":{\"name\":\"myobc-app-namespace-my-awesome-bucket\",\"namespace\":\"\"},\"spec\":{\"Connection\":{\"additionalState\":{\"ARN\":\"\",\"UserName\":\"\"},\"endpoint\":{\"additionalConfig\":null,\"bucketHost\":\"theendpoint.com\",\"bucketName\":\"my-awesome-bucket\",\"bucketPort\":443,\"region\":\"myregion\",\"ssl\":true,\"subRegion\":\"\"}},\"claimRef\":\"47ac88b7-7d6e-11e9-b8cf-42010af00007\",\"reclaimPolicy\":\"Delete\",\"storageClassName\":\"my-storageclass\"}}]",
                    "capabilities": "Basic Install",
                    "categories": "Storage",
                    "certified": "false",
                    "containerImage": "quay.io/screeley44/aws-s3-provisioner:v1.0.0",
                    "createdAt": "2019-05-02 16:12:00",
                    "description": "Manage the full lifecycle of installing, configuring and managing AWS S3 Provisioner.",
                    "repository": "https://github.com/yard-turkey/aws-s3-provisioner",
                    "support": "OCTO"
                  },
                  "description": "AWS S3 Operator will deploy the AWS S3 Provisioner which will dynamically or statically\nprovision AWS S3 Bucket storage and access. The operator deploys the ObjectBucket (OB) and ObjectBucketClaim (OBC)\nCustomResourceDefinitions. The OB/OBC model follows the traditional Kubernetes PV/PVC pattern, when an OBC is detected\nthe operator will act on the OBC to either provision a brand new S3 Bucket in AWS or gain access to an existing\nS3 Bucket in AWS. The operator produces an OB and ConfigMap and Secret which can then be consumed by application pods.\n**Important Note**: Currently, while in preview, this operator does not\nsupport automatic upgrades. You must remove the old version of the operator\nmanually before installing a new version.\n## Using AWS S3 Operator\n### Administrator Creates Secret\nThis secret will contain the elevated/admin privileges needed by the provisioner\nto properly access and create S3 Buckets and IAM users and policies. The AWS Access ID\nand AWS Secret Key will be needed for this.\n1. Create the Kubernetes Secret for the Provisioner's Owner Access.\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: s3-bucket-owner [1]\n  namespace: s3-provisioner [2]\ntype: Opaque\ndata:\n  AWS_ACCESS_KEY_ID: *base64 encoded value* [3]\n  AWS_SECRET_ACCESS_KEY: *base64 encoded value* [4]\n```\n1. Name of the secret, this will be referenced in StorageClass.\n1. Namespace where the Secret will exist.\n1. Your AWS_ACCESS_KEY_ID base64 encoded.\n1. Your AWS_SECRET_ACCESS_KEY base64 encoded.\n```\n # kubectl create -f creds.yaml\nsecret/s3-bucket-owner created\n```\n### Administrator Creates StorageClass\nThe StorageClass defines the name of the provisioner and holds other properties that are needed to provision a new bucket, including\nthe Owner Secret and Namespace, and the AWS Region.\n#### Greenfield Example:\nFor Greenfield, a new, dynamic bucket will be generated.\n1. Create the Kubernetes StorageClass for the Provisioner.\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: s3-buckets [1]\nprovisioner: aws-s3.io/bucket [2]\nparameters:\n  region: us-west-1 [3]\n  secretName: s3-bucket-owner [4]\n  secretNamespace: s3-provisioner [5]\nreclaimPolicy: Delete [6]\n```\n1. Name of the StorageClass, this will be referenced in the User ObjectBucketClaim.\n1. Provisioner name\n1. AWS Region that the StorageClass will serve\n1. Name of the bucket owner Secret created above\n1. Namespace where the Secret will exist\n1. reclaimPolicy (Delete or Retain) indicates if the bucket can be deleted when the OBC is deleted.\n**NOTE:** the absence of the `bucketName` Parameter key in the storage class indicates this is a new bucket and its name is based on the bucket name fields in the OBC.\n```\n # kubectl create -f storageclass-greenfield.yaml\nstorageclass.storage.k8s.io/s3-buckets created\n```\n#### Brownfield Example:\nFor brownfield, the StorageClass defines the name of the provisioner and the name of the existing bucket. It also includes other properties needed by the target\nprovisioner, including: the Owner Secret and Namespace, and the AWS Region\n1. Create the Kubernetes StorageClass for the Provisioner.\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: s3-existing-buckets [1]\nprovisioner: aws-s3.io/bucket [2]\nparameters:\n  bucketName: my-existing-bucket [3]\n  region: us-west-1 [4]\n  secretName: s3-bucket-owner [5]\n  secretNamespace: s3-provisioner [6]\n```\n1. Name of the StorageClass, this will be referenced in the User ObjectBucketClaim.\n1. Provisioner name\n1. Name of the existing bucket\n1. AWS Region that the StorageClass will serve\n1. Name of the bucket owner Secret created above\n1. Namespace for that bucket owner secret\n**NOTE:** the storage class's `reclaimPolicy` is ignored for existing buckets.\n```\n # kubectl create -f storageclass-brownfield.yaml\nstorageclass.storage.k8s.io/s3-buckets created\n```\n### User Creates ObjectBucketClaim\nAn ObjectBucketClaim follows the same concept as a PVC, in that\nit is a request for Object Storage, the user doesn't need to\nconcern him/herself with the underlying storage, just that\nthey need access to it. The user will work with the cluster/storage\nadministrator to get the proper StorageClass needed and will\nthen request access via the OBC.\n#### Greenfield Request Example:\n1. Create the ObjectBucketClaim.\n```yaml\napiVersion: objectbucket.io/v1alpha1\nkind: ObjectBucketClaim\nmetadata:\n  name: myobc [1]\n  namespace: s3-provisioner [2]\nspec:\n  generateBucketName: mybucket [3]\n  bucketName: my-awesome-bucket [4]\n  storageClassName: s3-buckets [5]\n```\n1. Name of the OBC\n1. Namespace of the OBC\n1. Name prepended to a random string used to generate a bucket name. It is ignored if bucketName is defined\n1. Name of new bucket which must be unique across all AWS regions, otherwise an error occurs when creating the bucket. If present, this name overrides `generateName`\n1. StorageClass name\n**NOTE:** if both `generateBucketName` and `bucketName` are omitted, and the storage class does _not_ define a bucket name, then a new, random bucket name is generated with no prefix.\n```\n # kubectl create -f obc-brownfield.yaml\nobjectbucketclaim.objectbucket.io/myobc created\n```\n#### Brownfield Request Example:\n1. Create the ObjectBucketClaim.\n```yaml\napiVersion: objectbucket.io/v1alpha1\nkind: ObjectBucketClaim\nmetadata:\n  name: myobc [1]\n  namespace: s3-provisioner [2]\nspec:\n  storageClassName: s3-existing-buckets [3]\n```\n1. Name of the OBC\n1. Namespace of the OBC\n1. StorageClass name\n**NOTE:** in the OBC here there is no reference to the bucket's name. This is defined in the storage class and is not a concern of the user creating the claim to this bucket.  An OBC does have fields for defining a bucket name for greenfield use only.\n```\n # kubectl create -f obc-brownfield.yaml\nobjectbucketclaim.objectbucket.io/myobc created\n```\n### Results and Recap\nLet's pause for a moment and digest what just happened.\nAfter creating the OBC, and assuming the S3 provisioner is running, we now have\nthe following Kubernetes resources:\n.  a global ObjectBucket (OB) which contains: bucket endpoint info (including region and bucket name), a reference to the OBC, and a reference to the storage class. Unique to S3, the OB also contains the bucket Amazon Resource Name (ARN).Note: there is always a 1:1 relationship between an OBC and an OB.\n.  a ConfigMap in the same namespace as the OBC, which contains the same endpoint data found in the OB.\n.  a Secret in the same namespace as the OBC, which contains the AWS key-pairs needed to access the bucket.\nAnd of course, we have a *new* AWS S3 Bucket which you should be able to see via the AWS Console.\n*ObjectBucket*\n```yaml\n # kubectl get ob obc-s3-provisioner-my-awesome-bucket -o yaml\napiVersion: objectbucket.io/v1alpha1\nkind: ObjectBucket\nmetadata:\n  creationTimestamp: \"2019-04-03T15:42:22Z\"\n  generation: 1\n  name: obc-s3-provisioner-my-awesome-bucket\n  resourceVersion: \"15057\"\n  selfLink: /apis/objectbucket.io/v1alpha1/objectbuckets/obc-s3-provisioner-my-awesome-bucket\n  uid: 0bfe8e84-576d-4c4e-984b-f73c4460f736\nspec:\n  Connection:\n    additionalState:\n      ARN: arn:aws:iam::\u003caccountid\u003e:policy/my-awesome-bucket-vSgD5 [1]\n      UserName: my-awesome-bucket-vSgD5 [2]\n    endpoint:\n      additionalConfig: null\n      bucketHost: s3-us-west-1.amazonaws.com\n      bucketName: my-awesome-bucket [3]\n      bucketPort: 443\n      region: us-west-1\n      ssl: true\n      subRegion: \"\"\n  claimRef: null [4]\n  reclaimPolicy: null\n  storageClassName: s3-buckets [5]\n```\n1. The AWS Policy created for this user and bucket.\n1. The new user generated by the Provisioner to access this existing bucket.\n1. The bucket name.\n1. The reference to the OBC (not filled in yet).\n1. The reference to the StorageClass used.\n*ConfigMap*\n```yaml\n # kubectl get cm myobc -n s3-provisioner -o yaml\napiVersion: v1\ndata:\n  BUCKET_HOST: s3-us-west-1.amazonaws.com [1]\n  BUCKET_NAME: my-awesome-bucket [2]\n  BUCKET_PORT: \"443\"\n  BUCKET_REGION: us-west-1\n  BUCKET_SSL: \"true\"\n  BUCKET_SUBREGION: \"\"\nkind: ConfigMap\nmetadata:\n  creationTimestamp: \"2019-04-01T19:11:38Z\"\n  finalizers:\n  - objectbucket.io/finalizer\n  name: my-awesome-bucket\n  namespace: s3-provisioner\n  resourceVersion: \"892\"\n  selfLink: /api/v1/namespaces/s3-provisioner/configmaps/my-awesome-bucket\n  uid: 2edcc58a-aff8-4a29-814a-ffbb6439a9cd\n```\n1. The AWS S3 host.\n1. The name of the new bucket we are gaining access to.\n*Secret*\n```yaml\n # kubectl get secret my-awesome-bucket -n s3-provisioner -o yaml\napiVersion: v1\ndata:\n  AWS_ACCESS_KEY_ID: *the_new_access_id* [1]\n  AWS_SECRET_ACCESS_KEY: *the_new_access_key_value* [2]\nkind: Secret\nmetadata:\n  creationTimestamp: \"2019-04-03T15:42:22Z\"\n  finalizers:\n  - objectbucket.io/finalizer\n  name: my-awesome-bucket\n  namespace: s3-provisioner\n  resourceVersion: \"15058\"\n  selfLink: /api/v1/namespaces/s3-provisioner/secrets/screeley-provb-5\n  uid: 225c71a5-9d75-4ccc-b41f-bfe91b272a13\ntype: Opaque\n```\n1. The new generated AWS Access Key ID.\n1. The new generated AWS Secret Access Key.\nWhat happened in AWS? The first thing we do on any OBC request is\ncreate a new IAM user and generate Access ID and Secret Keys.\nThis allows us to also better control ACLs. We also create a policy\nin IAM which we then attach to the user and bucket. We also created a new bucket, called *my-awesome-bucket*.\nWhen the OBC is deleted all of its Kubernetes and AWS resources will also be deleted, which includes:\nthe generated OB, Secret, ConfigMap, IAM user, and policy.\nIf the _retainPolicy_ on the StorageClass for this bucket is *\"Delete\"*, then, in addition to the above cleanup, the physical bucket is also deleted.\n**NOTE:** The actual bucket is only deleted if the Storage Class's _reclaimPolicy_ is \"Delete\".\n### User Creates Pod\nNow that we have our bucket and connection/access information, a pod\ncan be used to access the bucket. This can be done in several different\nways, but the key here is that the provisioner has provided the proper\nendpoints and keys to access the bucket. The user then simply references\nthe keys.\n1. Create a Sample Pod to Access the Bucket.\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: photo1\n  labels:\n    name: photo1\nspec:\n  containers:\n  - name: photo1\n    image: docker.io/screeley44/photo-gallery:latest\n    imagePullPolicy: Always\n    envFrom:\n    - configMapRef:\n        name: my-awesome-bucket \u003c1\u003e\n    - secretRef:\n        name: my-awesome-bucket \u003c2\u003e\n    ports:\n    - containerPort: 3000\n      protocol: TCP\n```\n1. Name of the generated configmap from the provisioning process\n1. Name of the generated secret from the provisioning process\n*[Note]* Generated ConfigMap and Secret are same name as the OBC!\nLastly, expose the pod as a service so you can access the url from a browser. In this example,\nI exposed as a LoadBalancer\n```\n  # kubectl expose pod photo1 --type=LoadBalancer --name=photo1 -n your-namespace\n```\nTo access via a url use the EXTERNAL-IP\n```\n  # kubectl get svc photo1\n  NAME                         TYPE           CLUSTER-IP       EXTERNAL-IP                                                               PORT(S)          AGE\n  photo1                       LoadBalancer   100.66.124.105   a00c53ccb3c5411e9b6550a7c0e50a2a-2010797808.us-east-1.elb.amazonaws.com   3000:32344/TCP   6d\n```\n**NOTE:** This is just one example of a Pod that can utilize the bucket information,\nthere are several ways that these pod applications can be developed and therefore\nthe method of getting the actual values needed from the Secrets and ConfigMaps\nwill vary greatly, but the idea remains the same, that the pod consumes the generated\nConfigMap and Secret created by the provisioner.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "objectbuckets.objectbucket.io",
                        "version": "v1alpha1",
                        "kind": "ObjectBucket",
                        "displayName": "Object Bucket",
                        "description": "instance of an AWS S3 Bucket"
                      },
                      {
                        "name": "objectbucketclaims.objectbucket.io",
                        "version": "v1alpha1",
                        "kind": "ObjectBucketClaim",
                        "displayName": "Object Bucket Claim",
                        "description": "Request for an AWS S3 Bucket"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "banzaicloud-kafka-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/banzaicloud-kafka-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Banzai Cloud",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Banzai Cloud"
            },
            "packageName": "banzaicloud-kafka-operator",
            "channels": [
              {
                "name": "beta",
                "currentCSV": "banzaicloud-kafka-operator.0.3.1",
                "currentCSVDesc": {
                  "displayName": "Banzai Cloud Kafka Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.3.1",
                  "provider": {
                    "name": "Banzai Cloud"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"banzaicloud.banzaicloud.io/v1alpha1\",\n    \"kind\": \"KafkaCluster\",\n    \"metadata\": {\n      \"name\": \"kafka-sample\"\n    },\n    \"spec\": {\n      \"zkAddresses\": [\n        \"example-zookeepercluster-client.zookeeper:2181\"\n      ],\n      \"brokerConfigs\": [\n        {\n          \"image\": \"wurstmeister/kafka:2.12-2.1.0\",\n          \"id\": 0,\n          \"storageConfigs\": [\n            {\n              \"mountPath\": \"/kafka-logs\",\n              \"pvcSpec\": {\n                \"accessModes\": [\n                  \"ReadWriteOnce\"\n                ],\n                \"resources\": {\n                  \"requests\": {\n                    \"storage\": \"10Gi\"\n                  }\n                }\n              }\n            }\n          ]\n        },\n        {\n          \"image\": \"wurstmeister/kafka:2.12-2.1.0\",\n          \"id\": 1,\n          \"storageConfigs\": [\n            {\n              \"mountPath\": \"/kafka-logs\",\n              \"pvcSpec\": {\n                \"accessModes\": [\n                  \"ReadWriteOnce\"\n                ],\n                \"resources\": {\n                  \"requests\": {\n                    \"storage\": \"10Gi\"\n                  }\n                }\n              }\n            }\n          ]\n        },\n        {\n          \"image\": \"wurstmeister/kafka:2.12-2.1.0\",\n          \"id\": 2,\n          \"storageConfigs\": [\n            {\n              \"mountPath\": \"/kafka-logs\",\n              \"pvcSpec\": {\n                \"accessModes\": [\n                  \"ReadWriteOnce\"\n                ],\n                \"resources\": {\n                  \"requests\": {\n                    \"storage\": \"10Gi\"\n                  }\n                }\n              }\n            }\n          ]\n        },\n        {\n          \"image\": \"wurstmeister/kafka:2.12-2.1.0\",\n          \"id\": 3,\n          \"storageConfigs\": [\n            {\n              \"mountPath\": \"/kafka-logs\",\n              \"pvcSpec\": {\n                \"accessModes\": [\n                  \"ReadWriteOnce\"\n                ],\n                \"resources\": {\n                  \"requests\": {\n                    \"storage\": \"10Gi\"\n                  }\n                }\n              }\n            }\n          ]\n        }\n      ],\n      \"listenersConfig\": {\n        \"externalListeners\": [\n          {\n            \"type\": \"plaintext\",\n            \"name\": \"external\",\n            \"externalStartingPort\": 19090,\n            \"containerPort\": 9094\n          }\n        ],\n        \"internalListeners\": [\n          {\n            \"type\": \"plaintext\",\n            \"name\": \"plaintext\",\n            \"containerPort\": 29092,\n            \"usedForInnerBrokerCommunication\": true\n          }\n        ]\n      },\n      \"serviceAccount\": \"\"\n    }\n  }\n]\n",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Streaming \u0026 Messaging, Big Data",
                    "certified": "false",
                    "containerImage": "banzaicloud/kafka-operator:0.3.1",
                    "createdAt": "2019-05-28T08:00:00Z",
                    "description": "Installs and maintains Kafka",
                    "repository": "https://github.com/banzaicloud/kafka-operator/tree/master",
                    "support": "Banzai Cloud"
                  },
                  "description": "The Banzai Cloud Kafka operator is a Kubernetes operator to automate provisioning, management, autoscaling and operations of [Apache Kafka](https://kafka.apache.org) clusters deployed to K8s.\n\n## Overview\n\nApache Kafka is an open-source distributed streaming platform, and some of the main features of the **Kafka-operator** are:\n\n- the provisioning of secure and production ready Kafka clusters\n- **fine grained** broker configuration support\n- advanced and highly configurable External Access via LoadBalancers using **Envoy**\n- graceful Kafka cluster **scaling and rebalancing**\n- monitoring via **Prometheus**\n- encrypted communication using SSL\n- automatic reaction and self healing based on alerts (plugin system, with meaningful default alert plugins) using **Cruise Control**\n\n## Prerequisites\n\nKafka requires Zookeeper so you need to first have a Zookeeper cluster if you don't already have one.\n\n#### Install Zookeeper\n\nTo install Zookeeper we recommend using the [Pravega's Zookeeper Operator](https://github.com/pravega/zookeeper-operator).\nYou can deploy Zookeeper by using the Helm chart.\n\n```bash\nhelm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com/\nhelm install --name zookeeper-operator --namespace=zookeeper banzaicloud-stable/zookeeper-operator\nkubectl create --namespace zookeeper -f - \u003c\u003cEOF\napiVersion: zookeeper.pravega.io/v1beta1\nkind: ZookeeperCluster\nmetadata:\n  name: example-zookeepercluster\n  namespace: zookeeper\nspec:\n  replicas: 3\nEOF\n\n```\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "kafkaclusters.banzaicloud.banzaicloud.io",
                        "version": "v1alpha1",
                        "kind": "KafkaCluster",
                        "displayName": "Kafka cluster",
                        "description": "Represents an Kafka cluster"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "beta"
          }
        },
        {
          "metadata": {
            "name": "camel-k",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/camel-k",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "The Apache Software Foundation",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "The Apache Software Foundation"
            },
            "packageName": "camel-k",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "camel-k-operator.v1.0.0-m1",
                "currentCSVDesc": {
                  "displayName": "Camel K Operator",
                  "icon": [
                    {
                      "base64data": "PHN2ZyB2aWV3Qm94PSIwIDAgMTMwLjIxIDEzMC4wMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48ZGVmcz48bGluZWFyR3JhZGllbnQgaWQ9ImEiIHgxPSIzMzMuNDgiIHgyPSI0NzciIHkxPSI3MDIuNiIgeTI9IjU2My43MyIgZ3JhZGllbnRUcmFuc2Zvcm09InRyYW5zbGF0ZSg5NC4wMzggMjc2LjA2KSBzY2FsZSguOTkyMDYpIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSI+PHN0b3Agc3RvcC1jb2xvcj0iI0Y2OTkyMyIgb2Zmc2V0PSIwIi8+PHN0b3Agc3RvcC1jb2xvcj0iI0Y3OUEyMyIgb2Zmc2V0PSIuMTEiLz48c3RvcCBzdG9wLWNvbG9yPSIjRTk3ODI2IiBvZmZzZXQ9Ii45NDUiLz48L2xpbmVhckdyYWRpZW50PjxsaW5lYXJHcmFkaWVudCBpZD0iYiIgeDE9IjMzMy40OCIgeDI9IjQ3NyIgeTE9IjcwMi42IiB5Mj0iNTYzLjczIiBncmFkaWVudFRyYW5zZm9ybT0idHJhbnNsYXRlKDk0LjAzOCAyNzYuMDYpIHNjYWxlKC45OTIwNikiIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIj48c3RvcCBzdG9wLWNvbG9yPSIjRjY5OTIzIiBvZmZzZXQ9IjAiLz48c3RvcCBzdG9wLWNvbG9yPSIjRjc5QTIzIiBvZmZzZXQ9Ii4wOCIvPjxzdG9wIHN0b3AtY29sb3I9IiNFOTc4MjYiIG9mZnNldD0iLjQxOSIvPjwvbGluZWFyR3JhZGllbnQ+PGxpbmVhckdyYWRpZW50IGlkPSJjIiB4MT0iNjMzLjU1IiB4Mj0iNTY2LjQ3IiB5MT0iODE0LjYiIHkyPSI5MDkuMTIiIGdyYWRpZW50VHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTg1LjQyMSA1Ni4yMzYpIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSI+PHN0b3Agc3RvcC1jb2xvcj0iI2Y2ZTQyMyIgb2Zmc2V0PSIwIi8+PHN0b3Agc3RvcC1jb2xvcj0iI0Y3OUEyMyIgb2Zmc2V0PSIuNDEyIi8+PHN0b3Agc3RvcC1jb2xvcj0iI0U5NzgyNiIgb2Zmc2V0PSIuNzMzIi8+PC9saW5lYXJHcmFkaWVudD48L2RlZnM+PGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTQzNy44OSAtODM1LjI5KSI+PGNpcmNsZSBjeD0iNTAzLjEiIGN5PSI5MDAuMjkiIHI9IjYyLjUyIiBmaWxsPSJ1cmwoI2EpIiBzdHJva2U9InVybCgjYikiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iNC45NiIvPjxwYXRoIGQ9Ik00ODcuODkgODczLjY0YTg5LjUzIDg5LjUzIDAgMCAwLTIuNjg4LjAzMWMtMS4wNDMuMDMxLTIuNDQ1LjM2Mi00LjA2Mi45MDYgMjcuMzA5IDIwLjczNyAzNy4xMjcgNTguMTQ2IDIwLjI1IDkwLjY1Ni41NzMuMDE1IDEuMTQyLjA2MyAxLjcxOS4wNjMgMzAuODQ0IDAgNTYuNjItMjEuNDkzIDYzLjI4LTUwLjMxMi0xOS41NzItMjIuOTQzLTQ2LjExNy00MS4yOTQtNzguNS00MS4zNDR6IiBmaWxsPSJ1cmwoI2MpIiBvcGFjaXR5PSIuNzUiLz48cGF0aCBkPSJNNDgxLjE0IDg3NC41OGMtOS4wNjggMy4wNTItMjYuMzY4IDEzLjgwMi00MyAyOC4xNTYgMS4yNjMgMzQuMTk1IDI4Ljk2MSA2MS42MDcgNjMuMjUgNjIuNSAxNi44NzctMzIuNTEgNy4wNi02OS45MTktMjAuMjUtOTAuNjU2eiIgZmlsbD0iIzI4MTcwYiIgb3BhY2l0eT0iLjc1Ii8+PHBhdGggZD0iTTUwNC44ODkgODYyLjU0NmMtLjQ3Mi0uMDMyLS45MzIuMDI4LTEuMzc1LjI1LTUuNiAyLjgwMSAwIDE0IDAgMTQtMTYuODA3IDE0LjAwOS0xMy4yMzYgMzcuOTM4LTMyLjg0NCAzNy45MzgtMTAuNjg5IDAtMjEuMzIyLTEyLjI5My0zMi41MzEtMTkuODEyLS4xNDQgMS43NzMtLjI1IDMuNTY0LS4yNSA1LjM3NSAwIDI0LjUxNSAxMy41MSA0NS44NjMgMzMuNDY5IDU3LjA2MyA1LjU4My0uNzAzIDExLjE1OC0yLjExNCAxNS4zNDQtNC45MDYgMjEuOTkyLTE0LjY2MiAyNy40NTItNDIuNTU3IDM2LjQzOC01Ni4wMzEgNS41OTYtOC40MDcgMzEuODI0LTcuNjc3IDMzLjU5NC0xMS4yMiAyLjgwNC01LjYwMS01LjYwMi0xNC04LjQwNi0xNGgtMjIuNDA2Yy0xLjU2NiAwLTQuMDI1LTIuNzgtNS41OTQtMi43OGgtOC40MDZzLTMuNzI1LTUuNjUtNy4wMzEtNS44NzV6IiBmaWxsPSIjZmZmIi8+PC9nPjwvc3ZnPg==",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "1.0.0-m1",
                  "provider": {
                    "name": "The Apache Software Foundation"
                  },
                  "annotations": {
                    "alm-examples": "[{\n  \"apiVersion\": \"camel.apache.org/v1alpha1\",\n  \"kind\": \"IntegrationPlatform\",\n  \"metadata\": {\n    \"name\": \"example\"\n  }\n},\n{\n  \"apiVersion\": \"camel.apache.org/v1alpha1\",\n  \"kind\": \"Integration\",\n  \"metadata\": {\n    \"name\": \"example\"\n  },\n  \"spec\": {\n    \"sources\": [\n      {\n        \"content\": \"from('timer:groovy?period=1s')\\n  .setBody().simple('Hello world from Camel K!')\\n  .to('log:info?showAll=false')\",\n        \"name\": \"example.groovy\"\n      }\n    ]\n  }\n},\n{\n  \"apiVersion\": \"camel.apache.org/v1alpha1\",\n  \"kind\": \"IntegrationKit\",\n  \"metadata\": {\n    \"name\": \"example\"\n  }\n},\n{\n  \"apiVersion\": \"camel.apache.org/v1alpha1\",\n  \"kind\": \"CamelCatalog\",\n  \"metadata\": {\n    \"name\": \"example\"\n  }\n},\n{\n  \"apiVersion\": \"camel.apache.org/v1alpha1\",\n  \"kind\": \"Build\",\n  \"metadata\": {\n    \"name\": \"example\"\n  }\n}]",
                    "capabilities": "Basic Install",
                    "categories": "Integration \u0026 Delivery",
                    "certified": "false",
                    "containerImage": "docker.io/apache/camel-k:1.0.0-M1",
                    "createdAt": "2019-05-06T16:45:00Z",
                    "description": "Apache Camel K is a lightweight integration platform, born on Kubernetes, with serverless superpowers.",
                    "repository": "https://github.com/apache/camel-k",
                    "support": "Camel"
                  },
                  "description": "Apache Camel K\n==============\n\nApache Camel K is a lightweight integration platform, born on Kubernetes, with serverless superpowers.\n\n## Installation\n\nTo start using Camel K, install the operator and then create the following `IntegrationPlatform`:\n```\napiVersion: camel.apache.org/v1alpha1\nkind: IntegrationPlatform\nmetadata:\n  name: camel-k\n  labels:\n    app: \"camel-k\"\n```\n\n## Running an Integration\n\nAfter the initial setup, you can run a Camel integration on the cluster by creating an example `Integration`:\n```\napiVersion: camel.apache.org/v1alpha1\nkind: Integration\nmetadata:\n  name: example\nspec:\n  sources:\n  - content: |\n    import org.apache.camel.builder.RouteBuilder;\n\n    public class Example extends RouteBuilder {\n        @Override\n        public void configure() throws Exception {\n            from(\"timer:tick\")\n                .setBody(constant(\"Hello World!\"))\n            .to(\"log:info?skipBodyLineSeparator=false\");\n        }\n    }\n  name: Example.java\n```\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "builds.camel.apache.org",
                        "version": "v1alpha1",
                        "kind": "Build",
                        "displayName": "Build",
                        "description": "A Camel K build"
                      },
                      {
                        "name": "camelcatalogs.camel.apache.org",
                        "version": "v1alpha1",
                        "kind": "CamelCatalog",
                        "displayName": "Camel Catalog",
                        "description": "A Camel catalog"
                      },
                      {
                        "name": "integrations.camel.apache.org",
                        "version": "v1alpha1",
                        "kind": "Integration",
                        "displayName": "Integration",
                        "description": "A Camel K integration"
                      },
                      {
                        "name": "integrationkits.camel.apache.org",
                        "version": "v1alpha1",
                        "kind": "IntegrationKit",
                        "displayName": "Integration Kit",
                        "description": "A Camel K integration kit"
                      },
                      {
                        "name": "integrationplatforms.camel.apache.org",
                        "version": "v1alpha1",
                        "kind": "IntegrationPlatform",
                        "displayName": "Integration Platform",
                        "description": "A Camel K integration platform"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "clickhouse-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/clickhouse-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Altinity",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Altinity"
            },
            "packageName": "clickhouse-operator",
            "channels": [
              {
                "name": "latest",
                "currentCSV": "clickhouse-operator.v0.5.0",
                "currentCSVDesc": {
                  "displayName": "Altinity ClickHouse Operator",
                  "icon": [
                    {
                      "base64data": "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       ",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.5.0",
                  "provider": {
                    "name": "Altinity"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"clickhouse.altinity.com/v1\",\n    \"kind\": \"ClickHouseInstallation\",\n    \"metadata\": {\n      \"name\": \"simple-02\"\n    },\n    \"spec\": {\n      \"configuration\": {\n        \"clusters\": [\n          {\n            \"name\": \"shard1-repl1\",\n            \"layout\": {\n              \"shardsCount\": 1,\n              \"replicasCount\": 2\n            }\n          }\n        ]\n      }\n    }\n  }\n]",
                    "capabilities": "Full Lifecycle",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "altinity/clickhouse-operator:0.5.0",
                    "createdAt": "2019-07-31T10:00:00Z",
                    "description": "ClickHouse Operator manages full lifecycle of ClickHouse clusters.",
                    "repository": "https://github.com/altinity/clickhouse-operator",
                    "support": "Altinity Ltd. https://altinity.com"
                  },
                  "description": "## ClickHouse\n[ClickHouse](https://clickhouse.yandex) is an open source column-oriented database management system capable of real time generation of analytical data reports.\n\nCheck [ClickHouse documentation](https://clickhouse.yandex/docs/en) for more complete details.\n\n## ClickHouse Operator\nThe [Altinity ClickHouse Operator](https://github.com/altinity/clickhouse-operator) automates the creation, alteration, or deletion of nodes in your ClickHouse cluster environment. \n\nCheck [operator documentation](https://github.com/Altinity/clickhouse-operator/tree/master/docs) for complete details and examples.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "clickhouseinstallations.clickhouse.altinity.com",
                        "version": "v1",
                        "kind": "ClickHouseInstallation",
                        "displayName": "ClickHouseInstallation",
                        "description": "ClickHouse Installation - set of ClickHouse Clusters",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Endpoint",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Event",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "PersistentVolumeClaim",
                            "version": "v1"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "latest"
          }
        },
        {
          "metadata": {
            "name": "cockroachdb",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/cockroachdb",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Helm Community",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Helm Community"
            },
            "packageName": "cockroachdb",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "cockroachdb.v2.1.11",
                "currentCSVDesc": {
                  "displayName": "CockroachDB",
                  "icon": [
                    {
                      "base64data": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "2.1.11",
                  "provider": {
                    "name": "Helm Community"
                  },
                  "annotations": {
                    "alm-examples": "[{ \"apiVersion\": \"charts.helm.k8s.io/v1alpha1\", \"kind\": \"Cockroachdb\", \"metadata\": { \"name\": \"example\" }, \"spec\": { \"Name\": \"cdb\", \"Image\": \"cockroachdb/cockroach\", \"ImageTag\": \"v19.1.3\", \"ImagePullPolicy\": \"Always\", \"Replicas\": 3, \"MaxUnavailable\": 1, \"Component\": \"cockroachdb\", \"InternalGrpcPort\": 26257, \"ExternalGrpcPort\": 26257, \"InternalGrpcName\": \"grpc\", \"ExternalGrpcName\": \"grpc\", \"InternalHttpPort\": 8080, \"ExternalHttpPort\": 8080, \"HttpName\": \"http\", \"Resources\": { \"requests\": { \"cpu\": \"500m\", \"memory\": \"512Mi\" } }, \"InitPodResources\": { }, \"Storage\": \"10Gi\", \"StorageClass\": null, \"CacheSize\": \"25%\", \"MaxSQLMemory\": \"25%\", \"ClusterDomain\": \"cluster.local\", \"NetworkPolicy\": { \"Enabled\": false, \"AllowExternal\": true }, \"Service\": { \"type\": \"ClusterIP\", \"annotations\": { } }, \"PodManagementPolicy\": \"Parallel\", \"UpdateStrategy\": { \"type\": \"RollingUpdate\" }, \"NodeSelector\": { }, \"Tolerations\": { }, \"Secure\": { \"Enabled\": false, \"RequestCertsImage\": \"cockroachdb/cockroach-k8s-request-cert\", \"RequestCertsImageTag\": \"0.4\", \"ServiceAccount\": { \"Create\": true } } } }]",
                    "capabilities": "Basic Install",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "quay.io/helmoperators/cockroachdb:2.1.1",
                    "createdAt": "2019-01-24T15-33-43Z",
                    "description": "CockroachDB Operator based on the CockroachDB helm chart",
                    "repository": "https://github.com/dmesser/cockroachdb-operator",
                    "support": "a-robinson"
                  },
                  "description": "CockroachDB is a scalable, survivable, strongly-consistent SQL database.\n\n## About this Operator\n\nThis Operator is based on a Helm chart for CockroachDB. It supports reconfiguration for some parameters, but notably does not handle scale down of the replica count in a seamless manner. Scale up works great.\n\n## Core capabilities\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\n\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [`values.yaml`](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).\n\n## Using the cluster\n\nThe resulting cluster endpoint can be consumed from a `Service` that follows the pattern: `\u003cStatefulSet-name\u003e-public`. For example to connect using the command line client, use something like the following to obtain the name of the service:\n\n```\nkubectl get service -l chart=cockroachdb-2.0.11\nNAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             \u003cnone\u003e        26257/TCP,8080/TCP   24m\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   \u003cnone\u003e        26257/TCP,8080/TCP   24m\n```\n\nThen you can use the CockroachDB command line client to connect to the database cluster:\n\n```\nkubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public\n```\n\n## Before you start\n\nThis Operator requires a cluster with PV support in order to run correctly.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "cockroachdbs.charts.helm.k8s.io",
                        "version": "v1alpha1",
                        "kind": "Cockroachdb",
                        "displayName": "CockroachDB",
                        "description": "Represents a CockroachDB cluster",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicaSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "apps/v1"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "cos-bucket-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/cos-bucket-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "IBM",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "IBM"
            },
            "packageName": "cos-bucket-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "cos-bucket-operator.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "IBM COS Bucket Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "IBM"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\": \"ibmcloud.ibm.com/v1alpha1\", \"kind\": \"Bucket\", \"metadata\": {\"name\": \"cos4seed-bucket-m2c711\"}, \"spec\": {\"apiKey\": {\"secretKeyRef\": {\"name\": \"cos4seed-hmac\", \"key\": \"apikey\"}}, \"resourceInstanceID\": {\"secretKeyRef\": {\"name\": \"cos4seed-hmac\", \"key\": \"resource_instance_id\"}}, \"endpoints\": {\"configMapKeyRef\": {\"name\": \"cos4seed-hmac\", \"key\": \"endpoints\"}}}}]",
                    "capabilities": "Basic Install",
                    "categories": "Cloud Provider",
                    "certified": "false",
                    "containerImage": "cloudoperators/cosbucket-operator:0.1.0",
                    "createdAt": "2019-08-23T12:38:36Z",
                    "description": "The IBM Bucket Operator provides a Kubernetes CRD-Based API to manage the lifecycle of IBM Cloud Object Storage Bucket.",
                    "repository": "https://github.com/IBM/cos-bucket-operator",
                    "support": "IBM"
                  },
                  "description": "The IBM COS Bucket Operator provides a simple Kubernetes CRD-Based API to provision and manage lifecycle of IBM COS Bucket on your Kubernetes cluster. With this operator,  you can simply manage cos bucket as part of your Kubernetes  application templates and let the operator reconciliation logic ensure that the required COS bucket is automatically created and available for your application.\nThe IBM Bucket Operator is currently in preview. It will get updated as we release new versions of the [upstream repository](https://github.com/IBM/cos-bucket-operator).\n## Features\n* **Bucket Provisioning** - supports provisioning for bucket for existing IBM Cloud Object Storage service.\n* **Bucket Configuration** - supports Retention and CORS policy for existing bucket.\n* **Bucket Encryption** - supports using Key Protect key for bucket encryption, also support automatic key rotation. Please reference the [Key Protect Setup](https://github.com/ibm/cos-bucket-operator#keyprotectSetup) for detail.\n## Requirements\nThe operator can be installed on any OLM-enabled Kubernetes cluster with version \u003e= 1.11.  It requires [IBM Cloud Operators](https://operatorhub.io/operator/ibmcloud-operator) if using the `bindingFrom` option in the definition spec. Otherwise, please input your service credentials in either Kubernetes Secret or Configmap and specify `apiKey`, `resourceInstanceID` and `endpoints` in spec.\n### Using IBM COS Bucket Operators in stand-alone mode\nAfter the installation steps, you need to manually create the service credentail in  your IBM Cloud COS instance. and then create either Kubernetes Secret or ConfigMap to store these credentials.\n* Login to IBM Cloud using ibmcloud login.\n* Create Credential in Cloud Object Storage instance:\n\n    `ibmcloud resource service-key-create \u003ccredential_name\u003e Manager --instance-name \u003ccos_instance_name\u003e`\n\n    for example: `ibmcloud resource service-key-create cos4operator Manager --instance-name mycos`\n\n  * Option 1 - Stored in Secret.\n\n      1. Retrieve the Credential, and generate the base64 encoded file (Note - credential_name is from step 1). After the command, you can check if the file `/tmp/mySecret.secrets` is created:\n          \n        ```\n        ibmcloud resource service-key cos4operator | \n        awk '/apikey/ {seen = 1} seen {print}' |  \n        awk '{system(\"bash -c '\\''echo -n  \"$1\" | tr : = '\\''\"); printf(\"%s \\n\",$2)}' \u003e /tmp/myCOSSecret.secrets\n        ```\n          \n      2. Create Secret:\n\n        ```  \n        kubectl create secret generic \u003ckubebete_secret_name\u003e --type=Secret --from-env-file=/tmp/myCOSSecret.secrets\n        ```\n\n  * Option 2 - Stored in ConfigMap.\n\n      1. Create the data file (Note - the attached command create base64 decoded values as ConfigMap will not decode the value automatically):\n   \n          ```\n          ibmcloud resource service-key cos4operator  | \n          awk '/apikey/ {seen = 1} seen {print}' |  \n          awk '{system(\"bash -c '\\''echo -n  \"$1\" | tr  : = '\\''\"); system(\"bash -c '\\''echo -n  \"$2\" |    base64 -i -'\\''\"); printf(\"\\n\")}' \u003e    /tmp/myCOSSecret.secrets\n          ```\n\n      2. Create ConfigMap:\n\n          ```\n          kubectl create configmap  \u003ckubernete_configmap_name\u003e  --from-env-file=/tmp/myCOSSecret.secrets\n          ```\n\n* Verify the required info is in the Secret or ConfigMap:\n\n    ```\n    kubectl get secret \u003ckubernete_secret_name\u003e -o yaml\n    ```\n    \n  For Example, the data field should look like the following (should contains at least apiKey, endpoints and resource_instance_id)\n    \n   ```\n   data:\n       apiKey: c29tZSByYW5kb20gYXBpa2V5IGdlbmVyYXRlZCBieSB5b3UK\n       endpoints: aHR0cHM6Ly9jb250cm9sLmNsb3VkLW9iamVjdC1zdG9yYWdlLmNsb3VkLmlibS5jb20vdjIvZW5kcG9pbnRz\n       ...\n       resource_instance_id: Y3JuOnYxOmJsdWVtaXg6cHVibGljOmNsb3VkLW9iamVjdC1zdG9yYWdlOmdsb2JhbDphLzg5YjdiOWU3OWJmNjFhMDc5MzE3OWYxMzIzMGZkMmJkOjQ5OTQ2M2QxLWUwZTYtNGMxYy04YmQzLTIzOTNhZTRjZTRkZTo6\n   ```           \n### Using IBM Cloud Operators\nAfter follow the installation steps in the [IBM Cloud Operator](https://operatorhub.io/operator/ibmcloud-operator),  You can create an instance of an IBM public cloud service using the following custom resource (change plan:standard to plan:lite if using lite plan):\n\n     \n    apiVersion: ibmcloud.ibm.com/v1alpha1\n    kind: Service\n    metadata:\n      name: cos4me\n    spec:\n      externalName: cos4me\n      serviceClass: cloud-object-storage\n      plan: standard\n    \nAfter creating a service, you can find its status with:\n\n    kubectl get services.ibmcloud \n    NAME           STATUS   AGE\n    cos4me         Online   12s\n\nYou can bind to a service with name `cos4me` using the following custom resource:\n\n    \n    apiVersion: ibmcloud.ibm.com/v1alpha1\n    kind: Binding\n    metadata:\n      name: cos4me\n    spec:\n      serviceName: cos4me\n      role: Manager\n    \n\nTo find the status of your binding, you can run the command:\n\n    kubectl get bindings.ibmcloud \n    NAME        STATUS   AGE\n    cos4me      Online   25s\n   \nThe `Binding` operator generates a secret with the same name as the binding resource and \n    contains service credentials that can be consumed by your application.\n\n    kubectl get secrets\n    NAME      TYPE     DATA   AGE                         \n    cos4me    Opaque   6      102s                          \n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "buckets.ibmcloud.ibm.com",
                        "version": "v1alpha1",
                        "kind": "Bucket",
                        "displayName": "Bucket",
                        "description": "Represents a bucket of a Cloud Object Storage bucket resource  on IBM Cloud.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Bucket",
                            "version": "v1alpha1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "message",
                            "displayName": "Message",
                            "description": "Detailed message on current status",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "state",
                            "displayName": "State",
                            "description": "Current state for the service",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "apiKey",
                            "displayName": "API Key",
                            "description": "API Key",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "apiKey/secretKeyRef",
                            "displayName": "secretKeyRef",
                            "description": "API KEY in Secret"
                          },
                          {
                            "path": "bindOnly",
                            "displayName": "Bind Only",
                            "description": "Bind to existing bucket, can be used to control Retention rule and CORS policy",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "bindingFrom",
                            "displayName": "Binding From",
                            "description": "Use bindingFrom if using IBM Cloud Operators to control service and binding",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "bucketType",
                            "displayName": "Bucket Type",
                            "description": "Type of Bucket - Public or Private. Default to public",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "context",
                            "displayName": "Context",
                            "description": "Context of the operator",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "corsRules",
                            "displayName": "CORS rule",
                            "description": "CORS rule - allowedOrigin, allowedHeader and allowedMethod",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "endpoints",
                            "displayName": "Endpoints",
                            "description": "Endpoints - can be found in the instance service crentials",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "keepIfNotEmpty",
                            "displayName": "Keep If Not Empty",
                            "description": "Do not remove the bucket if it is not empty",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "location",
                            "displayName": "Location",
                            "description": "Location of the bucket",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "region",
                            "displayName": "Region",
                            "description": "Region of the bucket",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "resiliency",
                            "displayName": "Resiliency",
                            "description": "Bucket Resiliency - Cross Region, Regional, Single Site",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "retentionPolicy",
                            "displayName": "Retention policy",
                            "description": "Retention policy - Only available for the standard plan Cloud Object Storage instance",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "resourceInstanceID",
                            "displayName": "Resource Instance ID",
                            "description": "Resource Instance ID of the COS Instance, can be fonud in the Service Credentials",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "storageClass",
                            "displayName": "Storage Class",
                            "description": "Bucket Storage Class - Standard, Vault, Cold Vault, and Flex",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "couchbase-enterprise",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/couchbase-enterprise",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Couchbase",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Couchbase"
            },
            "packageName": "couchbase-enterprise",
            "channels": [
              {
                "name": "preview",
                "currentCSV": "couchbase-operator.v1.1.0",
                "currentCSVDesc": {
                  "displayName": "Couchbase Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.1.0",
                  "provider": {
                    "name": "Couchbase"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"couchbase.com/v1\",\"kind\":\"CouchbaseCluster\",\"metadata\":{\"name\":\"cb-example\",\"namespace\":\"default\"},\"spec\":{\"authSecret\":\"cb-example-auth\",\"baseImage\":\"couchbase/server\",\"buckets\":[{\"conflictResolution\":\"seqno\",\"enableFlush\":true,\"evictionPolicy\":\"fullEviction\",\"ioPriority\":\"high\",\"memoryQuota\":128,\"name\":\"default\",\"replicas\":1,\"type\":\"couchbase\"}],\"cluster\":{\"analyticsServiceMemoryQuota\":1024,\"autoFailoverMaxCount\":3,\"autoFailoverOnDataDiskIssues\":true,\"autoFailoverOnDataDiskIssuesTimePeriod\":120,\"autoFailoverServerGroup\":false,\"autoFailoverTimeout\":120,\"clusterName\":\"cb-example\",\"dataServiceMemoryQuota\":256,\"eventingServiceMemoryQuota\":256,\"indexServiceMemoryQuota\":256,\"indexStorageSetting\":\"memory_optimized\",\"searchServiceMemoryQuota\":256},\"servers\":[{\"name\":\"all_services\",\"services\":[\"data\",\"index\",\"query\",\"search\",\"eventing\",\"analytics\"],\"size\":3}],\"version\":\"5.5.3\"}}]",
                    "capabilities": "Deep Insights",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "couchbase/operator:1.1.0",
                    "createdAt": "2019-02-25 12:24:59",
                    "description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
                    "support": "Couchbase"
                  },
                  "description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments. By installing this integration you will be able to deploy Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.1/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "couchbaseclusters.couchbase.com",
                        "version": "v1",
                        "kind": "CouchbaseCluster",
                        "displayName": "Couchbase Cluster",
                        "description": "Manages Couchbase clusters",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "size",
                            "displayName": "Size",
                            "description": "The desired number of member Pods for the deployment.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the Couchbase cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Status Details",
                            "description": "Explanation for the current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          },
                          {
                            "path": "currentVersion",
                            "displayName": "Current Version",
                            "description": "The current version of the Couchbase cluster."
                          },
                          {
                            "path": "clusterID",
                            "displayName": "Cluster ID",
                            "description": "The cluster identifier as provided by the Couchbase cluster."
                          },
                          {
                            "path": "controlPaused",
                            "displayName": "Control Paused",
                            "description": "Specifies if the Operator is currently managing this cluster."
                          },
                          {
                            "path": "adminConsolePort",
                            "displayName": "Admin Console Port",
                            "description": "The port that the web console can be accessed on from any node in the Kubernetes cluster."
                          },
                          {
                            "path": "adminConsolePortSSL",
                            "displayName": "SSL Admin Console Port",
                            "description": "The SSL port that the web console can be accessed on from any node in the Kubernetes cluster."
                          },
                          {
                            "path": "conditions",
                            "displayName": "Conditions",
                            "description": "Conditions for the cluster",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "authSecret",
                            "displayName": "Auth Secret",
                            "description": "The name of the secret object that stores the admin credentials.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Secret"
                            ]
                          },
                          {
                            "path": "tls.static.member.serverSecret",
                            "displayName": "Server TLS Secret",
                            "description": "The name of the secret object that stores the server's TLS certificate.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Secret"
                            ]
                          },
                          {
                            "path": "tls.static.operatorSecret",
                            "displayName": "Operator TLS Secret",
                            "description": "The name of the secret object that stores the Operator's TLS certificate.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Secret"
                            ]
                          },
                          {
                            "path": "paused",
                            "displayName": "Paused",
                            "description": "Specifies if the Operator will manage this cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ],
                            "value": false
                          },
                          {
                            "path": "exposeAdminConsole",
                            "displayName": "Expose Console",
                            "description": "Specifies if the Couchbase Server Web Console will be exposed externally.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ],
                            "value": false
                          },
                          {
                            "path": "antiAffinity",
                            "displayName": "Anti Affinity",
                            "description": "Specifies whether or not two pods in this cluster can be deployed on the same Kubernetes node.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ],
                            "value": false
                          },
                          {
                            "path": "softwareUpdateNotifications",
                            "displayName": "Show Update Notifications",
                            "description": "Specifies if update notifications will be displayed in the Couchbase UI.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ],
                            "value": false
                          },
                          {
                            "path": "disableBucketManagement",
                            "displayName": "Disable Bucket Management",
                            "description": "Specifies if the Operator will create or delete buckets.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ],
                            "value": false
                          },
                          {
                            "path": "servers[0].size",
                            "displayName": "Size",
                            "description": "The desired number of member Pods for the Couchbase cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "cluster.autoFailoverMaxCount",
                            "displayName": "Auto Failover Max Count",
                            "description": "The maximum number of failover events tolerated before manual intervention is required.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:slider",
                              "urn:alm:descriptor:com.tectonic.ui:sliderStart:1"
                            ]
                          },
                          {
                            "path": "servers[0].pod.resources",
                            "displayName": "Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "preview"
          }
        },
        {
          "metadata": {
            "name": "eclipse-che",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/eclipse-che",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Eclipse Foundation",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Eclipse Foundation"
            },
            "packageName": "eclipse-che",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "eclipse-che.v7.0.0",
                "currentCSVDesc": {
                  "displayName": "Eclipse Che",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "7.0.0",
                  "provider": {
                    "name": "Eclipse Foundation"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"org.eclipse.che/v1\",\n    \"kind\": \"CheCluster\",\n    \"metadata\": {\n       \"name\": \"eclipse-che\"\n    },\n    \"spec\": {\n      \"k8s\": {\n          \"ingressDomain\": \"\",\n          \"tlsSecretName\": \"\"\n        },\n       \"server\": {\n          \"cheImageTag\": \"\",\n          \"devfileRegistryImage\": \"\",\n          \"pluginRegistryImage\": \"\",\n          \"tlsSupport\": false,\n          \"selfSignedCert\": false\n       },\n       \"database\": {\n          \"externalDb\": false,\n          \"chePostgresHostname\": \"\",\n          \"chePostgresPort\": \"\",\n          \"chePostgresUser\": \"\",\n          \"chePostgresPassword\": \"\",\n          \"chePostgresDb\": \"\"\n       },\n       \"auth\": {\n          \"identityProviderImage\": \"\",\n          \"externalIdentityProvider\": false,\n          \"identityProviderURL\": \"\",\n          \"identityProviderRealm\": \"\",\n          \"identityProviderClientId\": \"\"\n       },\n       \"storage\": {\n          \"pvcStrategy\": \"per-workspace\",\n          \"pvcClaimSize\": \"1Gi\",\n          \"preCreateSubPaths\": true\n       }\n    }\n  }\n]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Developer Tools",
                    "certified": "false",
                    "containerImage": "quay.io/eclipse/che-operator:7.0.0",
                    "createdAt": "2019-08-14T08:16:43Z",
                    "description": "A Kube-native development solution that delivers portable and collaborative developer workspaces.",
                    "repository": "https://github.com/eclipse/che-operator",
                    "support": "Eclipse Foundation"
                  },
                  "description": "A collaborative Kubernetes-native development solution that delivers Kubernetes workspaces and in-browser IDE for rapid cloud application development.\nThis operator installs PostgreSQL, Keycloak, Registries and the Eclipse Che server, as well as configures all these services.\n## Prerequisites\n- Operator Lifecycle Manager (OLM) needs to be installed.\n- Kubernetes Platform. For OpenShift, the installation is directly made from OperatorHub UI in the admin console.\n\nOLM installation can be checked by running the command:\n```\n$ kubectl get pods --all-namespaces | grep olm\nolm             catalog-operator-7b8cd7f8bf-2v7zj                       1/1     Running   0          10m\nolm             olm-operator-5c5c798cd5-s6ll5                           1/1     Running   0          10m\nolm             olm-operators-fm5wc                                     1/1     Running   0          10m\nolm             operatorhubio-catalog-d78km                             1/1     Running   0          10m\nolm             packageserver-5c5f64947b-trghp                          1/1     Running   0          9m56s\nolm             packageserver-5c5f64947b-zqvxg                          1/1     Running   0          9m56s\n```\n\n## How to Install\nInstall `Eclipse Che Operator` by following instructions in top right button `Install`.\n\nA new pod che-operator is created in `my-eclipse-che` namespace\n\n```\n$ kubectl get pods --all-namespaces | grep my-eclipse-che\nmy-eclipse-che   che-operator-554c564476-fl98z                           1/1     Running   0          13s\n```\n\nThe operator is now providing new Custom Resources Definitions: `checluster.org.eclipse.che`\n\nCreate a new Eclipse Che instance by creating a new CheCluster resource:\n\nOn the bottom of this page, there is a section `Custom Resource Definitions` with `Eclipse Che Cluster` name.\n\nClick on `View YAML Example` *Link* and copy the content to a new file named `my-eclipse-che.yaml`\n**Important!** Make sure you provide **K8s.ingressDomain** which is a global ingress domain of your k8s cluster, for example, `gcp.my-ide.cloud`\nCreate the new CheCluster by creating the resource in the `my-eclipse-che` namespace :\n```\n$ kubectl create -f my-eclipse-che.yaml -n my-eclipse-che\n```\n***important:*** The operator is only tracking resources in its own namespace. If CheCluster is not created in this namespace it's ignored.\nThe operator will now create pods for Eclipse Che. The deployment status can be tracked by looking at the Operator logs by using the command:\n```    \n$ kubectl logs -n my-eclipse-che che-operator-554c564476-fl98z\n```\n***important:*** pod name is different on each installation\n\nWhen all Eclipse Che containers are running, the Eclipse Che URL is printed\n\n\nEclipse Che URL can be tracked by searching for available trace:\n```\n$ kubectl logs -f -n my-eclipse-che che-operator-7b6b4bcb9c-m4m2m | grep \"Eclipse Che is now available\"\ntime=\"2019-08-01T13:31:05Z\" level=info msg=\"Eclipse Che is now available at: http://che-my-eclipse-che.gcp.my-ide.cloud\" \n```\nWhen Eclipse Che is ready, the Eclipse Che URL is displayed in CheCluster resource in `status` section\n```\n$ kubectl describe checluster/eclipse-che -n my-eclipse-che\n```\n\n```\nStatus:\n  Che Cluster Running:           Available\n  Che URL:                       http://che-my-eclipse-che.gcp.my-ide.cloud\n  Che Version:                   7.0.0\n  ...\n```\n\nBy opening this URL in a web browser, Eclipse Che is ready to use.\n## Defaults\nBy default, the operator deploys Eclipse Che with:\n* Bundled PostgreSQL and Keycloak\n* Per-Workspace PVC strategy\n* Auto-generated passwords\n* HTTP mode (non-secure ingresses)\n## Installation Options\nEclipse Che operator installation options include:\n* Connection to external database and Keycloak\n* Configuration of default passwords and object names\n* TLS mode\n* PVC strategy (once shared PVC for all workspaces, PVC per workspace, or PVC per volume)\n* Authentication options\n### External Database and Keycloak\nTo instruct the operator to skip deploying PostgreSQL and Keycloak and connect to an existing DB and Keycloak instead:\n* set respective fields to `true` in a custom resource spec\n* provide the operator with connection and authentication details:\n  ```\n  externalDb: true\n  chePostgresHostname: 'yourPostgresHost'\n  chePostgresPort: '5432'\n  chePostgresUser: 'myuser'\n  chePostgresPassword: 'mypass'\n  chePostgresDb: 'mydb'\n  externalIdentityProvider: true\n  identityProviderURL: 'https://my-keycloak.com'\n  identityProviderRealm: 'myrealm'\n  identityProviderClientId: 'myClient'\n  ```\n### TLS Mode\nTo activate TLS mode, set the respective field in the CR spec to `true` (in the `server` block):\n```\ntlsSupport: true\n```\nYou will also need to provide name of tls secret that will be used for Eclipse Che and workspaces ingresses:\n```\ntlsSecretName: 'my-ingress-tls-secret'\n```\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "checlusters.org.eclipse.che",
                        "version": "v1",
                        "kind": "CheCluster",
                        "displayName": "Eclipse Che Cluster",
                        "description": "Eclipse Che cluster with DB and Auth Server",
                        "statusDescriptors": [
                          {
                            "path": "cheURL",
                            "displayName": "Eclipse Che URL",
                            "description": "Ingress to access Eclipse Che",
                            "x-descriptors": [
                              "urn:alm:descriptor:org.w3:link"
                            ]
                          },
                          {
                            "path": "keycloakURL",
                            "displayName": "Keycloak Admin Console URL",
                            "description": "Ingress to access Keycloak Admin Console",
                            "x-descriptors": [
                              "urn:alm:descriptor:org.w3:link"
                            ]
                          },
                          {
                            "path": "cheVersion",
                            "displayName": "Eclipse Che version",
                            "description": "Eclipse Che server version",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "cheClusterRunning",
                            "displayName": "Status",
                            "description": "The current status of the application",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "server.tlsSupport",
                            "displayName": "TLS Mode",
                            "description": "TLS routes",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "elastic-cloud-eck",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/elastic-cloud-eck",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Elastic",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Elastic"
            },
            "packageName": "elastic-cloud-eck",
            "channels": [
              {
                "name": "preview",
                "currentCSV": "elastic-cloud-eck.v0.9.0",
                "currentCSVDesc": {
                  "displayName": "Elastic Cloud on Kubernetes",
                  "icon": [
                    {
                      "base64data": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI2NCIgaGVpZ2h0PSI2NCIgdmlld0JveD0iMCAwIDY0IDY0Ij4KICA8ZyBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgPHBhdGggZmlsbD0iIzM0Mzc0MSIgZD0iTTM3LjA2MjUsMzIgQzM3LjA2MjUsMzQuNzk2IDM0Ljc5NTUsMzcuMDYyIDMyLjAwMDUsMzcuMDYyIEMyOS4yMDQ1LDM3LjA2MiAyNi45Mzc1LDM0Ljc5NiAyNi45Mzc1LDMyIEMyNi45Mzc1LDI5LjIwNCAyOS4yMDQ1LDI2LjkzOCAzMi4wMDA1LDI2LjkzOCBDMzQuNzk1NSwyNi45MzggMzcuMDYyNSwyOS4yMDQgMzcuMDYyNSwzMiIvPgogICAgPHBhdGggZmlsbD0iI0YwNEU5OCIgZD0iTTM4LjIyMjcsMjQuMTA0NSBDMzguMjY1NywyNC4xMzg1IDM4LjMwOTcsMjQuMTczNSAzOC4zNTI3LDI0LjIwODUgQzM5LjI5MDcsMjQuOTcyNSA0MC41ODU3LDI1LjEyMDUgNDEuNjc3NywyNC41OTc1IEw1NS4xNzE3LDE4LjE0MTUgQzUxLjg3NDcsMTIuNjQwNSA0Ni42NzU3LDguNDE2NSA0MC40ODI3LDYuMzY3NSBMMzcuMTE4NywyMC45NDI1IEMzNi44NDU3LDIyLjEyMTUgMzcuMjcxNywyMy4zNTU1IDM4LjIyMjcsMjQuMTA0NSIvPgogICAgPHBhdGggZmlsbD0iIzA3QyIgZD0iTTMyLjE4NTUsNDQuMTgzNiBDMzEuOTE4NSw0My4wMDI2IDMwLjk5OTUsNDIuMDc1NiAyOS44MTg1LDQxLjgxMzYgQzI1LjMxNjUsNDAuODE1NiAyMS45Mzc1LDM2Ljc5ODYgMjEuOTM3NSwzMS45OTk2IEMyMS45Mzc1LDI3LjE4MjYgMjUuMzQxNSwyMy4xNTI2IDI5Ljg3MDUsMjIuMTczNiBDMzEuMDUyNSwyMS45MTg2IDMxLjk3NTUsMjAuOTk0NiAzMi4yNDc1LDE5LjgxNTYgTDM1LjYxMDUsNS4yNDc2IEMzNC40Mjg1LDUuMDg5NiAzMy4yMjQ1LDQuOTk5NiAzMS45OTk1LDQuOTk5NiBDMTcuMDg3NSw0Ljk5OTYgNC45OTk1LDE3LjA4ODYgNC45OTk1LDMxLjk5OTYgQzQuOTk5NSw0Ni45MTE2IDE3LjA4NzUsNTguOTk5NiAzMS45OTk1LDU4Ljk5OTYgQzMzLjE3ODUsNTguOTk5NiAzNC4zMzY1LDU4LjkxNTYgMzUuNDc0NSw1OC43Njk2IEwzMi4xODU1LDQ0LjE4MzYgWiIvPgogICAgPHBhdGggZmlsbD0iIzM0Mzc0MSIgZD0iTTU3LjI4NTIsNDEuNDc4IEM1OC4zOTAyLDM4LjUyOCA1OS4wMDAyLDM1LjMzNiA1OS4wMDAyLDMyIEM1OS4wMDAyLDI4LjcxMyA1OC40MTEyLDI1LjU2MyA1Ny4zMzUyLDIyLjY0OSBMNDMuNzUyMiwyOS4xNDggQzQyLjY1MzIsMjkuNjc0IDQxLjk2MjIsMzAuNzg2IDQxLjk2MTE5MDIsMzIuMDA0IEw0MS45NjExOTAyLDMyLjA1NCBDNDEuOTU4MiwzMy4yNyA0Mi42NDMyLDM0LjM4MSA0My43MzcyLDM0LjkxMSBMNTcuMjg1Miw0MS40NzggWiIvPgogICAgPHBhdGggZmlsbD0iI0YwNEU5OCIgZD0iTTM4LjMxMDUsMzkuODIzNyBDMzguMjY3NSwzOS44NTc3IDM4LjIyNDUsMzkuODkxNyAzOC4xODE1LDM5LjkyNTcgQzM3LjIyNzUsNDAuNjY5NyAzNi43OTU1LDQxLjkwMDcgMzcuMDYxNSw0My4wODE3IEw0MC4zNTM1LDU3LjY3NjcgQzQ2LjU1OTUsNTUuNjU3NyA1MS43ODE1LDUxLjQ1OTcgNTUuMTA0NSw0NS45Nzc3IEw0MS42Mzk1LDM5LjQ1MDcgQzQwLjU0OTUsMzguOTIyNyAzOS4yNTI1LDM5LjA2MzcgMzguMzEwNSwzOS44MjM3Ii8+CiAgPC9nPgo8L3N2Zz4K",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.9.0",
                  "provider": {
                    "name": "Elastic"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n  \t\"apiVersion\": \"elasticsearch.k8s.elastic.co\\/v1alpha1\",\n  \t\"kind\": \"Elasticsearch\",\n  \t\"metadata\": {\n  \t\t\"name\": \"elasticsearch-sample\"\n  \t},\n  \t\"spec\": {\n  \t\t\"version\": \"7.2.0\",\n  \t\t\"nodes\": [{\n  \t\t\t\"config\": {\n  \t\t\t\t\"node.master\": true,\n  \t\t\t\t\"node.data\": true,\n  \t\t\t\t\"node.attr.attr_name\": \"attr_value\"\n  \t\t\t},\n  \t\t\t\"podTemplate\": {\n  \t\t\t\t\"metadata\": {\n  \t\t\t\t\t\"labels\": {\n  \t\t\t\t\t\t\"foo\": \"bar\"\n  \t\t\t\t\t}\n  \t\t\t\t},\n  \t\t\t\t\"spec\": {\n  \t\t\t\t\t\"containers\": [{\n  \t\t\t\t\t\t\"name\": \"elasticsearch\",\n  \t\t\t\t\t\t\"resources\": {\n  \t\t\t\t\t\t\t\"limits\": {\n  \t\t\t\t\t\t\t\t\"memory\": \"2Gi\",\n  \t\t\t\t\t\t\t\t\"cpu\": 1\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}]\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t\"nodeCount\": 3\n  \t\t}]\n  \t}\n  },\n  {\n  \t\"apiVersion\": \"kibana.k8s.elastic.co\\/v1alpha1\",\n  \t\"kind\": \"Kibana\",\n  \t\"metadata\": {\n  \t\t\"name\": \"kibana-sample\"\n  \t},\n  \t\"spec\": {\n  \t\t\"version\": \"7.2.0\",\n  \t\t\"nodeCount\": 1,\n  \t\t\"elasticsearchRef\": {\n  \t\t\t\"name\": \"elasticsearch-sample\"\n  \t\t},\n  \t\t\"podTemplate\": {\n  \t\t\t\"metadata\": {\n  \t\t\t\t\"labels\": {\n  \t\t\t\t\t\"foo\": \"bar\"\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t\"spec\": {\n  \t\t\t\t\"containers\": [{\n  \t\t\t\t\t\"name\": \"kibana\",\n  \t\t\t\t\t\"resources\": {\n  \t\t\t\t\t\t\"limits\": {\n  \t\t\t\t\t\t\t\"memory\": \"1Gi\",\n  \t\t\t\t\t\t\t\"cpu\": 1\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t}]\n  \t\t\t}\n  \t\t}\n  \t}\n  },\n  {\n    \"apiVersion\": \"apm.k8s.elastic.co\\/v1alpha1\",\n    \"kind\": \"ApmServer\",\n    \"metadata\": {\n      \"labels\": {\n        \"controller-tools.k8s.io\": \"1.0\"\n      },\n      \"name\": \"apmserver-sample\"\n    },\n    \"spec\": {\n      \"version\": \"7.2.0\",\n      \"nodeCount\": 1,\n      \"elasticsearchRef\": {\n  \t\t\t\"name\": \"elasticsearch-sample\"\n  \t\t}\n    }\n  }\n]\n",
                    "capabilities": "Full Lifecycle",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "docker.elastic.co/eck/eck-operator:0.9.0",
                    "createdAt": "2019-04-30 18:35:59",
                    "description": "Run Elasticsearch, Kibana and the APM Server on Kubernetes and OpenShift",
                    "repository": "https://github.com/elastic/cloud-on-k8s",
                    "support": "elastic.co"
                  },
                  "description": "Elastic Cloud on Kubernetes automates the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana and the APM Server on Kubernetes.\nThis is an alpha version.\n\nCurrent features:\n\n*  Elasticsearch, Kibana and APM Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration \u0026 topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n*  Kubernetes: 1.11+\n\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/0.9/index.html) to get started with ECK.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "elasticsearches.elasticsearch.k8s.elastic.co",
                        "version": "v1alpha1",
                        "kind": "Elasticsearch",
                        "displayName": "Elasticsearch Cluster",
                        "description": "Instance of an Elasticsearch cluster"
                      },
                      {
                        "name": "kibanas.kibana.k8s.elastic.co",
                        "version": "v1alpha1",
                        "kind": "Kibana",
                        "displayName": "Kibana",
                        "description": "Kibana instance"
                      },
                      {
                        "name": "apmservers.apm.k8s.elastic.co",
                        "version": "v1alpha1",
                        "kind": "ApmServer",
                        "displayName": "APM server",
                        "description": "APM server instance"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "preview"
          }
        },
        {
          "metadata": {
            "name": "enmasse",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/enmasse",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "EnMasse",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "EnMasse"
            },
            "packageName": "enmasse",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "enmasse.0.29.1",
                "currentCSVDesc": {
                  "displayName": "EnMasse",
                  "icon": [
                    {
                      "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iNzlweCIgaGVpZ2h0PSI3OXB4IiB2aWV3Qm94PSIwIDAgNzkgNzkiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDQyICgzNjc4MSkgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+CiAgICA8dGl0bGU+dmVyc2lvbnM8L3RpdGxlPgogICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+CiAgICA8ZGVmcz48L2RlZnM+CiAgICA8ZyBpZD0iUGFnZS0xIiBzdHJva2U9Im5vbmUiIHN0cm9rZS13aWR0aD0iMSIgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj4KICAgICAgICA8ZyBpZD0idmVyc2lvbnMiIHRyYW5zZm9ybT0idHJhbnNsYXRlKC0zMDguMDAwMDAwLCAtNzIuMDAwMDAwKSI+CiAgICAgICAgICAgIDxlbGxpcHNlIGlkPSJDb21iaW5lZC1TaGFwZS1Db3B5LTIiIGZpbGw9IiMwMDQ5OUUiIGN4PSIzNDcuNSIgY3k9IjExMS41IiByeD0iMjQuNSIgcnk9IjI0LjUiPjwvZWxsaXBzZT4KICAgICAgICAgICAgPHBhdGggZD0iTTMzOSwxMDIuNjkxMDE0IEMzMzksMTAyLjY5MTAxNCAzNDIuNjkwMjE1LDk0LjQxMDUzMjMgMzUwLjIwNTY1MSwxMDAuOTM1OTEyIEwzNTEuMDE1Njk5LDEwMS43NDU5NTkgQzM1MS4wMTU2OTksMTAxLjc0NTk1OSAzNTIuNzI1Nzk4LDEwMy41MDEwNjEgMzUzLjQ0NTg0LDEwMy41MDEwNjEgQzM1NC4xNjU4ODIsMTAzLjUwMTA2MSAzNTQuMjU1ODg3LDEwMy40MTEwNTYgMzU1Ljk2NTk4NiwxMDEuNzAwOTU2IEMzNTcuNjc2MDg2LDk5Ljk5MDg1NjggMzU3LjQwNjA3LDEwMC4wMzU4NTkgMzU5Ljg4MTIxNCw5Ny43ODU3Mjg2IEMzNjIuMzU2MzU4LDk1LjUzNTU5NzcgMzY1LjY3MTUyMSw5My45MzA1MzQ0IDM2NS42NzE1MjEsOTMuOTMwNTM0NCBDMzY1LjY3MTUyMSw5My45MzA1MzQ0IDM2Ny4yOTE2MTUsOTIuOTEwNDE1MSAzNzAuMjYxNzg4LDkyLjE2MDQwMTUgQzM3My4yMzE5Niw5MS40MTAzODc5IDM3Ny40MDk3MzMsOTAuNjUyODEzOSAzODIsOTEuMTcwMzQ0IEMzODIsOTEuMTcwMzQ0IDM4MC4xMzIzOTEsOTIuMjUwNDA2NyAzNzcuOTI3MjYzLDk4Ljk1NTc5NjYgQzM3NS43MjIxMzUsMTA1LjY2MTE4NiAzNzQuNTA3MDY0LDEwNy43MzEzMDcgMzc0LjUwNzA2NCwxMDcuNzMxMzA3IEMzNzQuNTA3MDY0LDEwNy43MzEzMDcgMzcxLjg1MTkxLDExMy4zNTY2MzQgMzY1LjQ2MTUzOCwxMTQuNTcxNzA0IEMzNjUuNDYxNTM4LDExNC41NzE3MDQgMzY4LjY1NjcyNCwxMTguMzk2OTI3IDM3OS45OTczODQsMTE3LjEzNjg1NCBDMzc5Ljk5NzM4NCwxMTcuMTM2ODU0IDM1OC4wODExMDksMTMxLjE3NzY3IDM0OC4yNzA1MzksMTE0Ljg0MTcyIEMzNDguMDQ4OTQ2LDExNC4zNDQyNjEgMzQ1Ljg0OTM5OCwxMTAuMDI1NDUgMzQ1LjMwMDM2NiwxMDguMjExMzA1IEMzNDQuNjEwMjk2LDEwNS45MzEyMDIgMzQ0LjMwOTEzOSwxMDUuMTI1Mzg1IDM0My4yOTAyNzksMTA0LjE2MTA2OSBDMzQwLjc3MDEzMywxMDEuNzc1OTMxIDMzOSwxMDIuNjkxMDE0IDMzOSwxMDIuNjkxMDE0IiBpZD0iRmlsbC0xLUNvcHktNyIgZmlsbD0iIzc1QTBEMyI+PC9wYXRoPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.29.1",
                  "provider": {
                    "name": "EnMasse"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"admin.enmasse.io/v1beta1\",\n    \"kind\": \"StandardInfraConfig\",\n    \"metadata\": {\n      \"name\": \"default\"\n    },\n    \"spec\": {\n      \"broker\": {\n        \"resources\": {\n          \"memory\": \"1Gi\",\n          \"storage\": \"5Gi\"\n        },\n        \"addressFullPolicy\": \"FAIL\"\n      },\n      \"router\": {\n        \"linkCapacity\": 50,\n        \"resources\": {\n          \"memory\": \"512Mi\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"admin.enmasse.io/v1beta1\",\n    \"kind\": \"BrokeredInfraConfig\",\n    \"metadata\": {\n      \"name\": \"default\"\n    },\n    \"spec\": {\n      \"broker\": {\n        \"resources\": {\n          \"memory\": \"4Gi\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"admin.enmasse.io/v1beta2\",\n    \"kind\": \"AddressPlan\",\n    \"metadata\": {\n      \"name\": \"standard-small-queue\"\n    },\n    \"spec\": {\n      \"addressType\": \"queue\",\n      \"shortDescription\": \"Small Queue\",\n      \"resources\": {\n        \"router\": 0.01,\n        \"broker\": 0.1\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"admin.enmasse.io/v1beta2\",\n    \"kind\": \"AddressSpacePlan\",\n    \"metadata\": {\n      \"name\": \"standard-small\"\n    },\n    \"spec\": {\n      \"addressSpaceType\": \"standard\",\n      \"infraConfigRef\": \"default\",\n      \"shortDescription\": \"Small Address Space Plan\",\n      \"resourceLimits\": {\n        \"router\": 1.0,\n        \"broker\": 2.0,\n        \"aggregate\": 2.0\n      },\n      \"addressPlans\": [\n        \"standard-small-queue\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"admin.enmasse.io/v1beta1\",\n    \"kind\": \"AuthenticationService\",\n    \"metadata\": {\n      \"name\": \"standard-authservice\"\n    },\n    \"spec\": {\n      \"type\": \"standard\"\n    }\n  },\n  {\n    \"apiVersion\": \"enmasse.io/v1beta1\",\n    \"kind\": \"AddressSpace\",\n    \"metadata\": {\n      \"name\": \"myspace\"\n    },\n    \"spec\": {\n      \"plan\": \"standard-small\",\n      \"type\": \"standard\"\n    }\n  },\n  {\n    \"apiVersion\": \"enmasse.io/v1beta1\",\n    \"kind\": \"Address\",\n    \"metadata\": {\n      \"name\": \"myspace.myqueue\"\n    },\n    \"spec\": {\n      \"address\": \"myqueue\",\n      \"plan\": \"standard-small-queue\",\n      \"type\": \"queue\"\n    }\n  },\n  {\n    \"apiVersion\": \"user.enmasse.io/v1beta1\",\n    \"kind\": \"MessagingUser\",\n    \"metadata\": {\n      \"name\": \"myspace.user\"\n    },\n    \"spec\": {\n      \"authentication\": {\n        \"password\": \"ZW5tYXNzZQ==\",\n        \"type\": \"password\"\n      },\n      \"authorization\": [\n        {\n          \"addresses\": [\n            \"myqueue\"\n          ],\n          \"operations\": [\n            \"send\",\n            \"recv\"\n          ]\n        }\n      ],\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"admin.enmasse.io/v1beta1\",\n    \"kind\": \"ConsoleService\",\n    \"metadata\": {\n      \"name\": \"console\"\n    },\n    \"spec\": {}\n  },\n  {\n    \"apiVersion\": \"iot.enmasse.io/v1alpha1\",\n    \"kind\": \"IoTConfig\",\n    \"metadata\": {\n      \"name\": \"default\"\n    },\n    \"spec\": {}\n  },\n  {\n    \"apiVersion\": \"enmasse.io/v1beta1\",\n    \"kind\": \"AddressSpaceSchema\",\n    \"metadata\": {\n      \"name\": \"undefined\"\n    },\n    \"spec\": {}\n  }\n]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Streaming \u0026 Messaging",
                    "certified": "false",
                    "containerImage": "quay.io/enmasse/controller-manager:0.29.1",
                    "createdAt": "2019-02-19 00:00:00",
                    "description": "EnMasse provides messaging as a managed service on Kubernetes",
                    "repository": "https://github.com/EnMasseProject/enmasse",
                    "support": "EnMasse"
                  },
                  "description": "**EnMasse** provides messaging as a managed service on Kubernetes.\nWith EnMasse, administrators can configure a cloud-native,\nmulti-tenant messaging service either in the cloud or on premise.\nDevelopers can provision messaging using the EnMasse Console.\nMultiple development teams can provision the brokers and queues from the\nconsole, without requiring each team to install, configure, deploy,\nmaintain, or patch any software. \n\n**The core capabilities include:**\n\n  * **Built-in authentication and authorization** - Use the built-in authentication service or\n    plug in your own authentication service for authentication and\n    authorization of messaging clients.\n\n  * **Self-service messaging for applications** - The service administrator deploys\n    and manages the messaging infrastructure, while applications can request\n    messaging resources regardless of the messaging infrastructure.\n\n  * **Support for a wide variety of messaging patterns** - Choose between\n    JMS-style messaging with strict guarantees, or messaging that supports\n    a larger number of connections and higher throughput.\n\n## Post-installation tasks\n\nTo fully use EnMasse, you need to create a few\ninfrastructure components after the installation, including:\n\n  * An authentication service\n  * Infrastructure configuration for the standard and brokered address space\n  * Address and address space plans\n  * (Optional) Create RBAC roles to allow users to self-manage addresses and\n    address spaces.\n\nFor a complete overview of how to configure EnMasse, see\n[Configuring EnMasse](https://enmasse.io/documentation/).\n\n### Quickstart infrastructure configuration\n\nIf you simply want to get started quickly, you can import the following\nYAML by saving the content to a file and apply it by running the \n`oc apply -f \u003cfile\u003e` command. You can also split the content (at the `---` marker)\nand import the single YAML document using the Web UI: \n\n~~~yaml\n---\napiVersion: admin.enmasse.io/v1beta1\nkind: StandardInfraConfig\nmetadata:\n  name: default\n---\napiVersion: admin.enmasse.io/v1beta2\nkind: AddressPlan\nmetadata:\n  name: standard-small-queue\nspec:\n  addressType: queue\n  resources:\n    router: 0.01\n    broker: 0.1\n---\napiVersion: admin.enmasse.io/v1beta2\nkind: AddressSpacePlan\nmetadata:\n  name: standard-small\nspec:\n  addressSpaceType: standard\n  infraConfigRef: default\n  addressPlans:\n  - standard-small-queue\n  resourceLimits:\n    router: 2.0\n    broker: 3.0\n    aggregate: 4.0\n---\napiVersion: admin.enmasse.io/v1beta1\nkind: AuthenticationService\nmetadata:\n  name: standard-authservice\nspec:\n  type: standard\n~~~\n\n### Creating infrastructure using the Web UI\n\nYou must create a new instance of each of the following custom resources. You can\nuse the example data directly, which is provided when using the\nWeb UI:\n\n  * *Authentication Service* – Create an authentication service.\n  * *Brokered Infra Config* – Create the broker infrastructure configuration.\n  * *Standard Infra Config* – Create the standard infrastructure\n    configuration.\n\nYou must also create at least one address space plan and one address plan.\n\n*Note*: The name of the address space plan and address plan is required\nlater when creating new addresses. Some examples use specific plan\nnames, which might not be available in your environment. You can\ncreate those plans, or edit the examples to use different plan names.\n\n## Configuration for messaging tenants\n\nWhile service administrators perform the infrastructure configuration, the following\nresources are for the actual users of the system, the messaging tenants.\n\nYou need to create those resources to satisfy your particular use case.\n\n  * *Address space* – A container for addresses\n  * *Address* – A messaging address (address, topic, queue, and so on)\n  * *Messaging user* – Manages access to an address\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "standardinfraconfigs.admin.enmasse.io",
                        "version": "v1beta1",
                        "kind": "StandardInfraConfig",
                        "displayName": "Standard Infra Config",
                        "description": "Infrastructure configuration template for the standard address space type",
                        "specDescriptors": [
                          {
                            "path": "router.minReplicas",
                            "displayName": "Minimum Router Replicas",
                            "description": "The minimal number of AMQP router replicas to create.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "router.linkCapacity",
                            "displayName": "Link capacity",
                            "description": "The link capacity of AMQP producer links attached to the routers.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "router.resources.memory",
                            "displayName": "Router Memory",
                            "description": "The amount of memory to configure for AMQP router pods.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "broker.resources.memory",
                            "displayName": "Broker Memory",
                            "description": "The amount of memory to configure for message brokers.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "broker.resources.storage",
                            "displayName": "Broker Storage",
                            "description": "The amount of storage to configure for message brokers.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "broker.storageClassName",
                            "displayName": "Broker Storage Class",
                            "description": "The storage class name to use for message broker persistent volumes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "broker.addressFullPolicy",
                            "displayName": "Broker Address Full Policy",
                            "description": "The policy to apply when message queues are full.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "admin.resources.memory",
                            "displayName": "Admin Memory",
                            "description": "The amount of memory to configure for the admin operator.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "brokeredinfraconfigs.admin.enmasse.io",
                        "version": "v1beta1",
                        "kind": "BrokeredInfraConfig",
                        "displayName": "Brokered Infra Config",
                        "description": "Infrastructure configuration template for the brokered address space type",
                        "specDescriptors": [
                          {
                            "path": "broker.resources.memory",
                            "displayName": "Broker Memory",
                            "description": "The amount of memory to configure for message brokers.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "broker.resources.storage",
                            "displayName": "Broker Storage",
                            "description": "The amount of storage to configure for message brokers.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "broker.storageClassName",
                            "displayName": "Broker Storage Class",
                            "description": "The storage class name to use for message broker persistent volumes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "broker.addressFullPolicy",
                            "displayName": "Broker Address Full Policy",
                            "description": "The policy to apply when message queues are full.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "admin.resources.memory",
                            "displayName": "Admin Memory",
                            "description": "The amount of memory to configure for the admin operator.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "addressplans.admin.enmasse.io",
                        "version": "v1beta2",
                        "kind": "AddressPlan",
                        "displayName": "Address Plan",
                        "description": "Plan describing the resource usage of a given address type",
                        "specDescriptors": [
                          {
                            "path": "displayName",
                            "displayName": "Display Name",
                            "description": "The name to be displayed in the console UI.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "shortDescription",
                            "displayName": "Short Description",
                            "description": "The description to be shown in the console UI.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "resources.broker",
                            "displayName": "Broker Usage",
                            "description": "The broker resource usage.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "resources.router",
                            "displayName": "Router Usage",
                            "description": "The router resource usage.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "addressspaceplans.admin.enmasse.io",
                        "version": "v1beta2",
                        "kind": "AddressSpacePlan",
                        "displayName": "Address Space Plan",
                        "description": "Plan describing the capabilities and resource limits of a given address space type",
                        "specDescriptors": [
                          {
                            "path": "displayName",
                            "displayName": "Display Name",
                            "description": "The name to be displayed in the console UI.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "infraConfigRef",
                            "displayName": "InfraConfig Reference",
                            "description": "The reference to the infrastructure config used by this plan.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "shortDescription",
                            "displayName": "Short Description",
                            "description": "The description to be shown in the console UI.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "resourceLimits.broker",
                            "displayName": "Broker Quota",
                            "description": "The quota for broker resources",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "resourceLimits.router",
                            "displayName": "Router Quota",
                            "description": "The quota for router resources",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "resourceLimits.aggregate",
                            "displayName": "Aggregate Quota",
                            "description": "The aggregate quota for all resources",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "authenticationservices.admin.enmasse.io",
                        "version": "v1beta1",
                        "kind": "AuthenticationService",
                        "displayName": "Authentication Service",
                        "description": "Authentication service configuration available to address spaces.",
                        "specDescriptors": [
                          {
                            "path": "type",
                            "displayName": "Type",
                            "description": "The type of authentication service",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "consoleservices.admin.enmasse.io",
                        "version": "v1beta1",
                        "kind": "ConsoleService",
                        "displayName": "Console Service",
                        "description": "Console Service Singleton for deploying global console.",
                        "specDescriptors": [
                          {
                            "path": "discoveryMetadataUrl",
                            "displayName": "Discovery Metadata URL",
                            "description": "The discovery Metadata URL",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "certificateSecret.name",
                            "displayName": "Console certificate secret name",
                            "description": "Console certificate secret name",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "oauthClientSecret.name",
                            "displayName": "OAUTH Client Secret Name",
                            "description": "OAUTH Client Secret Name",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "scope",
                            "displayName": "Scope",
                            "description": "Scope",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "host",
                            "displayName": "Host",
                            "description": "Host to use for ingress",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "iotconfigs.iot.enmasse.io",
                        "version": "v1alpha1",
                        "kind": "IoTConfig",
                        "displayName": "IoT Config",
                        "description": "IoT Infrastructure Configuration Singleton"
                      }
                    ]
                  },
                  "apiservicedefinitions": {
                    "owned": [
                      {
                        "name": "addressspaces",
                        "group": "enmasse.io",
                        "version": "v1beta1",
                        "kind": "AddressSpace",
                        "deploymentName": "api-server",
                        "containerPort": 8443,
                        "displayName": "Address Space",
                        "description": "A group of messaging addresses that can be accessed via the same endpoint",
                        "statusDescriptors": [
                          {
                            "path": "isReady",
                            "displayName": "Ready",
                            "description": "Address space ready.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "type",
                            "displayName": "Type",
                            "description": "The address space type.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "plan",
                            "displayName": "Plan",
                            "description": "The address space plan.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "addresses",
                        "group": "enmasse.io",
                        "version": "v1beta1",
                        "kind": "Address",
                        "deploymentName": "api-server",
                        "containerPort": 8443,
                        "displayName": "Address",
                        "description": "A messaging address that can be used to send/receive messages to/from",
                        "statusDescriptors": [
                          {
                            "path": "isReady",
                            "displayName": "Ready",
                            "description": "Address ready.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "phase",
                            "displayName": "Phase",
                            "description": "Address phase",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "type",
                            "displayName": "Type",
                            "description": "The address type.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "plan",
                            "displayName": "Plan",
                            "description": "The address plan.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "addressspaceschemas",
                        "group": "enmasse.io",
                        "version": "v1beta1",
                        "kind": "AddressSpaceSchema",
                        "deploymentName": "api-server",
                        "containerPort": 8443,
                        "displayName": "AddressSpaceSchema",
                        "description": "A resource representing the available schema of plans and authentication services"
                      },
                      {
                        "name": "messagingusers",
                        "group": "user.enmasse.io",
                        "version": "v1beta1",
                        "kind": "MessagingUser",
                        "deploymentName": "user-api-server",
                        "containerPort": 8443,
                        "displayName": "Messaging User",
                        "description": "A messaging user that can connect to an Address Space",
                        "specDescriptors": [
                          {
                            "path": "username",
                            "displayName": "Username",
                            "description": "The user name.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "authentication.type",
                            "displayName": "Authentication type",
                            "description": "The authentication type",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "authentication.password",
                            "displayName": "Password",
                            "description": "The password",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "esindex-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/esindex-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "IBM",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "IBM"
            },
            "packageName": "esindex-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "esindex-operator.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "IBM Cloud Operator for Elasticsearch indices",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "IBM"
                  },
                  "annotations": {
                    "alm-examples": "[{\"kind\": \"EsIndex\", \"spec\": {\"bindingFrom\": {\"name\": \"myes-binding\"}, \"numberOfShards\": 2, \"numberOfReplicas\": 1, \"indexName\": \"myindex\"}, \"apiVersion\": \"ibmcloud.ibm.com/v1alpha1\", \"metadata\": {\"name\": \"myindex\"}}]",
                    "capabilities": "Basic Install",
                    "categories": "Cloud Provider",
                    "certified": "false",
                    "containerImage": "cloudoperators/esindex-operator:0.1.0",
                    "createdAt": "2019-08-09T09:40:38Z",
                    "description": "An operator for managing Elastic Search indices",
                    "repository": "https://github.com/IBM/esindex-operator",
                    "support": "IBM"
                  },
                  "description": "The IBM Cloud Operator for Elastic Search Indices, as part of IBM Cloud operators, provides  a Kubernetes CRD-Based API to manage the lifecycle of Elastic Search indices. It allows to  provision elasticsearch indices from your Kubernetes cluster, using the EsIndex CRD. \nThe Elastic Search access credentials can be specified in requests via reference to a Binding,  a Secret, or a ConfigMap resource. The Binding resource is managed by IBM Cloud Binding Operator  in conjuction with IBM Cloud Service Operator. Details can be found at https://github.com/IBM/cloud-operators.  \nThe IBM Cloud Operator for Elasticsearch Indices is currently in preview. It will get updated as we release new versions of the [upstream repository](https://github.com/IBM/esindex-operator).\n## Features\n* **Creation and Deletion** - Creates, deletes and monitors indices on Elastic Search service.\n* **Credential Source Options** - Elasticsearch access credentials can be provided by refrence  to a IBMCloud Binding, a Secret, or a ConfigMap resource.\n## Requirements\nThe operator can be installed on any OLM-enabled Kubernetes cluster with version \u003e= 1.11. \nIf using IBMCloud Binding for access credential，it requires [IBM Cloud Operator](https://operatorhub.io/operator/ibmcloud-operator)  installed on your cluster.\n## Using the IBM Cloud Operator\nYou can create an instance of an IBM Elastic Search Index using the following custom resources:\n\n    apiVersion: ibmcloud.ibm.com/v1alpha1\n    kind: EsIndex\n    metadata:\n      name: myindex\n    spec:\n      bindingFrom: \n        name: \u003cBINDING\u003e\n      indexName: myindex\n      numberOfShards: 2\n      numberOfReplicas: 1\n\nwhere `\u003cBINDING\u003e` is the binding for an instance of an IBM Elasticsearch service created and bound with the IBM Cloud Operator.\n\n    apiVersion: ibmcloud.ibm.com/v1alpha1\n    kind: EsIndex\n    metadata:\n      name: myindex\n    spec:\n      esURIComposed:\n        secretKeyRef: \n          name: \u003cSECRET\u003e\n          key: \u003cKEY\u003e \n      indexName: myindex\n      numberOfShards: 2\n      numberOfReplicas: 1\n\nwhere `\u003cSECRET\u003e` is the name of a secret that holds the elasticesearch credentrials, `\u003cKEY\u003e` is the key for the value of composed elasticsearch URI.\nFor additional configuration options, samples and more information on using the operator, consult  the [IBM Cloud Operator for Elastic Search Indices documentation](https://github.com/IBM/esindex-operator).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "esindices.ibmcloud.ibm.com",
                        "version": "v1alpha1",
                        "kind": "EsIndex",
                        "displayName": "EsIndex",
                        "description": "Represents an Elasticsearch index",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Binding",
                            "version": "v1alpha1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1alpha1"
                          },
                          {
                            "name": "",
                            "kind": "EsIndex",
                            "version": "v1alpha1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "state",
                            "displayName": "State",
                            "description": "Current state for the index",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "message",
                            "displayName": "Message",
                            "description": "Detailed message about the current state",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "generation",
                            "displayName": "Generation",
                            "description": "Genreation of spec",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:slider",
                              "urn:alm:descriptor:com.tectonic.ui:sliderStart:1"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "bindingFrom",
                            "displayName": "Binding Name",
                            "description": "Binding object that holds the secret for elasticsearch credentials",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "esURIComposed",
                            "displayName": "Composed elasticsearch URI from a reference object",
                            "description": "Composed elasticsearch URI from a SecretKeyRef or a ConfigMapKeyRef. Cannot be used if binding is not empty. The vacomposed URI must be in the format https://\u003cuser\u003e:\u003cpasswd\u003e@hostname:port.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "indexName",
                            "displayName": "Index Name",
                            "description": "Index to be created on elasticsearch",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "numberOfReplicas",
                            "displayName": "Number of replicas",
                            "description": "Number of replicas",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:slider",
                              "urn:alm:descriptor:com.tectonic.ui:sliderStart:1"
                            ]
                          },
                          {
                            "path": "numberOfShards",
                            "displayName": "Number of shards",
                            "description": "Number of shards",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:slider",
                              "urn:alm:descriptor:com.tectonic.ui:sliderStart:1"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "etcd",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/etcd",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "CNCF",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "CNCF"
            },
            "packageName": "etcd",
            "channels": [
              {
                "name": "clusterwide-alpha",
                "currentCSV": "etcdoperator.v0.9.4-clusterwide",
                "currentCSVDesc": {
                  "displayName": "etcd",
                  "icon": [
                    {
                      "base64data": "iVBORw0KGgoAAAANSUhEUgAAAOEAAADZCAYAAADWmle6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAEKlJREFUeNrsndt1GzkShmEev4sTgeiHfRYdgVqbgOgITEVgOgLTEQydwIiKwFQCayoCU6+7DyYjsBiBFyVVz7RkXvqCSxXw/+f04XjGQ6IL+FBVuL769euXgZ7r39f/G9iP0X+u/jWDNZzZdGI/Ftama1jjuV4BwmcNpbAf1Fgu+V/9YRvNAyzT2a59+/GT/3hnn5m16wKWedJrmOCxkYztx9Q+py/+E0GJxtJdReWfz+mxNt+QzS2Mc0AI+HbBBwj9QViKbH5t64DsP2fvmGXUkWU4WgO+Uve2YQzBUGd7r+zH2ZG/tiUQc4QxKwgbwFfVGwwmdLL5wH78aPC/ZBem9jJpCAX3xtcNASSNgJLzUPSQyjB1zQNl8IQJ9MIU4lx2+Jo72ysXYKl1HSzN02BMa/vbZ5xyNJIshJzwf3L0dQhJw4Sih/SFw9Tk8sVeghVPoefaIYCkMZCKbrcP9lnZuk0uPUjGE/KE8JQry7W2tgfuC3vXgvNV+qSQbyFtAtyWk7zWiYevvuUQ9QEQCvJ+5mmu6dTjz1zFHLFj8Eb87MtxaZh/IQFIHom+9vgTWwZxAQjT9X4vtbEVPojwjiV471s00mhAckpwGuCn1HtFtRDaSh6y9zsL+LNBvCG/24ThcxHObdlWc1v+VQJe8LcO0jwtuF8BwnAAUgP9M8JPU2Me+Oh12auPGT6fHuTePE3bLDy+x9pTLnhMn+07TQGh//Bz1iI0c6kvtqInjvPZcYR3KsPVmUsPYt9nFig9SCY8VQNhpPBzn952bbgcsk2EvM89wzh3UEffBbyPqvBUBYQ8ODGPFOLsa7RF096WJ69L+E4EmnpjWu5o4ChlKaRTKT39RMMaVPEQRsz/nIWlDN80chjdJlSd1l0pJCAMVZsniobQVuxceMM9OFoaMd9zqZtjMEYYDW38Drb8Y0DYPLShxn0pvIFuOSxd7YCPet9zk452wsh54FJoeN05hcgSQoG5RR0Qh9Q4E4VvL4wcZq8UACgaRFEQKgSwWrkr5WFnGxiHSutqJGlXjBgIOayhwYBTA0ER0oisIVSUV0AAMT0IASCUO4hRIQSAEECMCCEPwqyQA0JCQBzEGjWNAqHiUVAoXUWbvggOIQCEAOJzxTjoaQ4AIaE64/aZridUsBYUgkhB15oGg1DBIl8IqirYwV6hPSGBSFteMCUBSVXwfYixBmamRubeMyjzMJQBDDowE3OesDD+zwqFoDqiEwXoXJpljB+PvWJGy75BKF1FPxhKygJuqUdYQGlLxNEXkrYyjQ0GbaAwEnUIlLRNvVjQDYUAsJB0HKLE4y0AIpQNgCIhBIhQTgCKhZBBpAN/v6LtQI50JfUgYOnnjmLUFHKhjxbAmdTCaTiBm3ovLPqG2urWAij6im0Nd9aTN9ygLUEt9LgSRnohxUPIKxlGaE+/6Y7znFf0yX+GnkvFFWmarkab2o9PmTeq8sbd2a7DaysXz7i64VeznN4jCQhN9gdDbRiuWrfrsq0mHIrlaq+hlotCtd3Um9u0BYWY8y5D67wccJoZjFca7iUs9VqZcfsZwTd1sbWGG+OcYaTnPAP7rTQVVlM4Sg3oGvB1tmNh0t/HKXZ1jFoIMwCQjtqbhNxUmkGYqgZEDZP11HN/S3gAYRozf0l8C5kKEKUvW0t1IfeWG/5MwgheZTT1E0AEhDkAePQO+Ig2H3DncAkQM4cwUQCD530dU4B5Yvmi2LlDqXfWrxMCcMth51RToRMNUXFnfc2KJ0+Ryl0VNOUwlhh6NoxK5gnViTgQpUG4SqSyt5z3zRJpuKmt3Q1614QaCBPaN6je+2XiFcWAKOXcUfIYKRyL/1lb7pe5VxSxxjQ6hImshqGRt5GWZVKO6q2wHwujfwDtIvaIdexj8Cm8+a68EqMfox6x/voMouZF4dHnEGNeCDMwT6vdNfekH1MafMk4PI06YtqLVGl95aEM9Z5vAeCTOA++YLtoVJRrsqNCaJ6WRmkdYaNec5BT/lcTRMqrhmwfjbpkj55+OKp8IEbU/JLgPJE6Wa3TTe9sHS+ShVD5QIyqIxMEwKh12olC6mHIed5ewEop80CNlfIOADYOT2nd6ZXCop+Ebqchc0JqxKcKASxChycJgUh1rnHA5ow9eTrhqNI7JWiAYYwBGGdpyNLoGw0Pkh96h1BpHihyywtATDM/7Hk2fN9EnH8BgKJCU4ooBkbXFMZJiPbrOyecGl3zgQDQL4hk10IZiOe+5w99Q/gBAEIJgPhJM4QAEEoFREAIAAEiIASAkD8Qt4AQAEIAERAGFlX4CACKAXGVM4ivMwWwCLFAlyeoaa70QePKm5Dlp+/n+ye/5dYgva6YsUaVeMa+tzNFeJtWwc+udbJ0Fg399kLielQJ5Ze61c2+7ytA6EZetiPxZC6tj22yJCv6jUwOyj/zcbqAxOMyAKEbfeHtNa7DtYXptjsk2kJxR+eIeim/tHNofUKYy8DMrQcAKWz6brpvzyIAlpwPhQ49l6b7skJf5Z+YTOYQc4FwLDxvoTDwaygQK+U/kVr+ytSFBG01Q3gnJJR4cNiAhx4HDub8/b5DULXlj6SVZghFiE+LdvE9vo/o8Lp1RmH5hzm0T6wdbZ6n+D6i44zDRc3ln6CpAEJfXiRU45oqLz8gFAThWsh7ughrRibc0QynHgZpNJa/ENJ+loCwu/qOGnFIjYR/n7TfgycULhcQhu6VC+HfF+L3BoAQ4WiZTw1M+FPCnA2gKC6/FAhXgDC+ojQGh3NuWsvfF1L/D5ohlCKtl1j2ldu9a/nPAKFwN56Bst10zCG0CPleXN/zXPgHQZXaZaBgrbzyY5V/mUA+6F0hwtGN9rwu5DVZPuwWqfxdFz1LWbJ2lwKEa+0Qsm4Dl3fp+Pu0lV97PgwIPfSsS+UQhj5Oo+vvFULazRIQyvGEcxPuNLCth2MvFsrKn8UOilAQShkh7TTczYNMoS6OdP47msrPi82lXKGWhCdMZYS0bFy+vcnGAjP1CIfvgbKNA9glecEH9RD6Ol4wRuWyN/G9MHnksS6o/GPf5XcwNSUlHzQhDuAKtWJmkwKElU7lylP5rgIcsquh/FI8YZCDpkJBuE4FQm7Icw8N+SrUGaQKyi8FwiDt1ve5o+Vu7qYHy/psgK8cvh+FTYuO77bhEC7GuaPiys/L1X4IgXDL+e3M5+ovLxBy5VLuIebw1oqcHoPfoaMJUsHays878r8KbDc3xtPx/84gZPBG/JwaufrsY/SRG/OY3//8QMNdsvdZCFtbW6f8pFuf5bflILAlX7O+4fdfugKyFYS8T2zAsXthdG0VurPGKwI06oF5vkBgHWkNp6ry29+lsPZMU3vijnXFNmoclr+6+Ou/FIb8yb30sS8YGjmTqCLyQsi5N/6ZwKs0Yenj68pfPjF6N782Dp2FzV9CTyoSeY8mLK16qGxIkLI8oa1n8tz9juP40DlK0epxYEbojbq+9QfurBeVIlCO9D2396bxiV4lkYQ3hOAFw2pbhqMGISkkQOMcQ9EqhDmGZZdo92JC0YHRNTfoSg+5e0IT+opqCKHoIU+4ztQIgBD1EFNrQAgIpYSil9lDmPHqkROPt+JC6AgPquSuumJmg0YARVCuneDfvPVeJokZ6pIXDkNxQtGzTF9/BQjRG0tQznfb74RwCQghpALBtIQnfK4zhxdyQvVCUeknMIT3hLyY+T5jo0yABqKPQNpUNw/09tGZod5jgCaYFxyYvJcNPkv9eof+I3pnCFEHIETjSM8L9tHZHYCQT9PaZGycU6yg8S4akDnJ+P03L0+t23XGzCLzRgII/Wqa+fv/xlfvmKvMUOcOrlCDdoei1MGdZm6G5VEIfRzzjd4aQs69n699Rx7ewhvCGzr2gmTPs8zNsJOrXt24FbkhhOjCfT4ICA/rPbyhUy94Dks0gJCX1NzCZui9YUd3oei+c257TalFbgg19ILHrlrL2gvWgXAL26EX76gZTNASQnad8Ibwhl284NhgXpB0c+jKhWO3Ms1hP9ihJYB9eMF6qd1BCPk0qA1s+LimFIu7m4nsdQIzPK4VbQ8hYvrnuSH2G9b2ggP78QmWqBdF9Vx8SSY6QYdUW7BTA1schZATyhvY8lHvcRbNUS9YGFy2U+qmzh2YPVc0I7yAOFyHfRpyUwtCSzOdPXMHmz7qDIM0e0V2wZTEk+6Ym6N63eBLp/b5Bts+2cKCSJ/LuoZO3ANSiE5hKAZjnvNSS4931jcw9jpwT0feV/qSJ1pVtCyfHKDkvK8Ejx7pUxGh2xFNSwx8QTi2H9ceC0/nni64MS/5N5dG39pDqvRV+WgGk71c9VFXF9b+xYvOw/d61iv7m3MvEHryhvecwC52jSSx4VIIgwnMNT/UsTxIgpPt3K/ARj15CptwL3Zd/ceDSATj2DGQjbxgWwhdeMMte7zpy5On9vymRm/YxBYljGVjKWF9VJf7I1+sex3wY8w/V1QPTborW/72gkdsRDaZMJBdbdHIC7aCkAu9atlLbtnrzerMnyToDaGwelOnk3/hHSem/ZK7e/t7jeeR20LYBgqa8J80gS8jbwi5F02Uj1u2NYJxap8PLkJfLxA2hIJyvnHX/AfeEPLpBfe0uSFHbnXaea3Qd5d6HcpYZ8L6M7lnFwMQ3MNg+RxUR1+6AshtbsVgfXTEg1sIGax9UND2p7f270wdG3eK9gXVGHdw2k5sOyZv+Nbs39Z308XR9DqWb2J+PwKDhuKHPobfuXf7gnYGHdCs7bhDDadD4entDug7LWNsnRNW4mYqwJ9dk+GGSTPBiA2j0G8RWNM5upZtcG4/3vMfP7KnbK2egx6CCnDPhRn7NgD3cghLIad5WcM2SO38iqHvvMOosyeMpQ5zlVCaaj06GVs9xUbHdiKoqrHWgquFEFMWUEWfXUxJAML23hAHFOctmjZQffKD2pywkhtSGHKNtpitLroscAeE7kCkSsC60vxEl6yMtL9EL5HKGCMszU5bk8gdkklAyEn5FO0yK419rIxBOIqwFMooDE0tHEVYijAUECIshRCGIhxFWIowFJ5QkEYIS5PTJrUwNGlPyN6QQPyKtpuM1E/K5+YJDV/MiA3AaehzqgAm7QnZG9IGYKo8bHnSK7VblLL3hOwNHziPuEGOqE5brrdR6i+atCfckyeWD47HkAkepRGLY/e8A8J0gCwYSNypF08bBm+e6zVz2UL4AshhBUjML/rXLefqC82bcQFhGC9JDwZ1uuu+At0S5gCETYHsV4DUeD9fDN2Zfy5OXaW2zAwQygCzBLJ8cvaW5OXKC1FxfTggFAHmoAJnSiOw2wps9KwRWgJCLaEswaj5NqkLwAYIU4BxqTSXbHXpJdRMPZgAOiAMqABCNGYIEEJutEK5IUAIwYMDQgiCACEEAcJs1Vda7gGqDhCmoiEghAAhBAHCrKXVo2C1DCBMRlp37uMIEECoX7xrX3P5C9QiINSuIcoPAUI0YkAICLNWgfJDh4T9hH7zqYH9+JHAq7zBqWjwhPAicTVCVQJCNF50JghHocahKK0X/ZnQKyEkhSdUpzG8OgQI42qC94EQjsYLRSmH+pbgq73L6bYkeEJ4DYTYmeg1TOBFc/usTTp3V9DdEuXJ2xDCUbXhaXk0/kAYmBvuMB4qkC35E5e5AMKkwSQgyxufyuPy6fMMgAFCSI73LFXU/N8AmEL9X4ABACNSKMHAgb34AAAAAElFTkSuQmCC",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.9.4-clusterwide",
                  "provider": {
                    "name": "CNCF"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\",\n    \"kind\": \"EtcdCluster\",\n    \"metadata\": {\n      \"name\": \"example\",\n      \"annotations\": {\n        \"etcd.database.coreos.com/scope\": \"clusterwide\"\n      }\n    },\n    \"spec\": {\n      \"size\": 3,\n      \"version\": \"3.2.13\"\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\",\n    \"kind\": \"EtcdRestore\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-restore\"\n    },\n    \"spec\": {\n      \"etcdCluster\": {\n        \"name\": \"example-etcd-cluster\"\n      },\n      \"backupStorageType\": \"S3\",\n      \"s3\": {\n        \"path\": \"\u003cfull-s3-path\u003e\",\n        \"awsSecret\": \"\u003caws-secret\u003e\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\",\n    \"kind\": \"EtcdBackup\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-backup\"\n    },\n    \"spec\": {\n      \"etcdEndpoints\": [\"\u003cetcd-cluster-endpoints\u003e\"],\n      \"storageType\":\"S3\",\n      \"s3\": {\n        \"path\": \"\u003cfull-s3-path\u003e\",\n        \"awsSecret\": \"\u003caws-secret\u003e\"\n      }\n    }\n  }\n]\n",
                    "capabilities": "Full Lifecycle",
                    "categories": "Database",
                    "containerImage": "quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b",
                    "createdAt": "2019-02-28 01:03:00",
                    "description": "Create and maintain highly-available etcd clusters on Kubernetes",
                    "repository": "https://github.com/coreos/etcd-operator",
                    "tectonic-visibility": "ocs"
                  },
                  "description": "The etcd Operater creates and maintains highly-available etcd clusters on Kubernetes, allowing engineers to easily deploy and manage etcd clusters for their applications.\n\netcd is a distributed key value store that provides a reliable way to store data across a cluster of machines. It’s open-source and available on GitHub. etcd gracefully handles leader elections during network partitions and will tolerate machine failure, including the leader.\n\n\n### Reading and writing to etcd\n\nCommunicate with etcd though its command line utility `etcdctl` via port forwarding:\n\n    $ kubectl --namespace default port-forward service/example-client 2379:2379\n    $ etcdctl --endpoints http://127.0.0.1:2379 get /\n\nOr directly to the API using the automatically generated Kubernetes Service:\n\n    $ etcdctl --endpoints http://example-client.default.svc:2379 get /\n\nBe sure to secure your etcd cluster (see Common Configurations) before exposing it outside of the namespace or cluster.\n\n\n### Supported Features\n\n* **High availability** - Multiple instances of etcd are networked together and secured. Individual failures or networking issues are transparently handled to keep your cluster up and running.\n\n* **Automated updates** - Rolling out a new etcd version works like all Kubernetes rolling updates. Simply declare the desired version, and the etcd service starts a safe rolling update to the new version automatically.\n\n* **Backups included** - Create etcd backups and restore them through the etcd Operator.\n\n### Common Configurations\n\n* **Configure TLS** - Specify [static TLS certs](https://github.com/coreos/etcd-operator/blob/master/doc/user/cluster_tls.md) as Kubernetes secrets.\n\n* **Set Node Selector and Affinity** - [Spread your etcd Pods](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-node-selector-and-anti-affinity-across-nodes) across Nodes and availability zones.\n\n* **Set Resource Limits** - [Set the Kubernetes limit and request](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-resource-requirement) values for your etcd Pods.\n\n* **Customize Storage** - [Set a custom StorageClass](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#custom-persistentvolumeclaim-definition) that you would like to use.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "etcdclusters.etcd.database.coreos.com",
                        "version": "v1beta2",
                        "kind": "EtcdCluster",
                        "displayName": "etcd Cluster",
                        "description": "Represents a cluster of etcd nodes.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "members",
                            "displayName": "Member Status",
                            "description": "The status of each of the member Pods for the etcd cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                            ]
                          },
                          {
                            "path": "serviceName",
                            "displayName": "Service",
                            "description": "The service at which the running etcd cluster can be accessed.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Service"
                            ]
                          },
                          {
                            "path": "size",
                            "displayName": "Cluster Size",
                            "description": "The current size of the etcd cluster."
                          },
                          {
                            "path": "currentVersion",
                            "displayName": "Current Version",
                            "description": "The current version of the etcd cluster."
                          },
                          {
                            "path": "targetVersion",
                            "displayName": "Target Version",
                            "description": "The target version of the etcd cluster, after upgrading."
                          },
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the etcd cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Status Details",
                            "description": "Explanation for the current status of the cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "size",
                            "displayName": "Size",
                            "description": "The desired number of member Pods for the etcd cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "pod.resources",
                            "displayName": "Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "etcdbackups.etcd.database.coreos.com",
                        "version": "v1beta2",
                        "kind": "EtcdBackup",
                        "displayName": "etcd Backup",
                        "description": "Represents the intent to backup an etcd cluster.",
                        "statusDescriptors": [
                          {
                            "path": "succeeded",
                            "displayName": "Succeeded",
                            "description": "Indicates if the backup was successful.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Reason",
                            "description": "Indicates the reason for any backup related failures.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "etcdEndpoints",
                            "displayName": "etcd Endpoint(s)",
                            "description": "Specifies the endpoints of an etcd cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:etcd:endpoint"
                            ]
                          },
                          {
                            "path": "s3.path",
                            "displayName": "S3 Path",
                            "description": "The full AWS S3 path where the backup is saved.",
                            "x-descriptors": [
                              "urn:alm:descriptor:aws:s3:path"
                            ]
                          },
                          {
                            "path": "s3.awsSecret",
                            "displayName": "AWS Secret",
                            "description": "The name of the secret object that stores the AWS credential and config files.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Secret"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "etcdrestores.etcd.database.coreos.com",
                        "version": "v1beta2",
                        "kind": "EtcdRestore",
                        "displayName": "etcd Restore",
                        "description": "Represents the intent to restore an etcd cluster from a backup.",
                        "statusDescriptors": [
                          {
                            "path": "succeeded",
                            "displayName": "Succeeded",
                            "description": "Indicates if the restore was successful.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Reason",
                            "description": "Indicates the reason for any restore related failures.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "etcdCluster.name",
                            "displayName": "etcd Cluster",
                            "description": "References the EtcdCluster which should be restored,",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:EtcdCluster",
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "s3.path",
                            "displayName": "S3 Path",
                            "description": "The full AWS S3 path where the backup is saved.",
                            "x-descriptors": [
                              "urn:alm:descriptor:aws:s3:path"
                            ]
                          },
                          {
                            "path": "s3.awsSecret",
                            "displayName": "AWS Secret",
                            "description": "The name of the secret object that stores the AWS credential and config files.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Secret"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              },
              {
                "name": "singlenamespace-alpha",
                "currentCSV": "etcdoperator.v0.9.4",
                "currentCSVDesc": {
                  "displayName": "etcd",
                  "icon": [
                    {
                      "base64data": "iVBORw0KGgoAAAANSUhEUgAAAOEAAADZCAYAAADWmle6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAEKlJREFUeNrsndt1GzkShmEev4sTgeiHfRYdgVqbgOgITEVgOgLTEQydwIiKwFQCayoCU6+7DyYjsBiBFyVVz7RkXvqCSxXw/+f04XjGQ6IL+FBVuL769euXgZ7r39f/G9iP0X+u/jWDNZzZdGI/Ftama1jjuV4BwmcNpbAf1Fgu+V/9YRvNAyzT2a59+/GT/3hnn5m16wKWedJrmOCxkYztx9Q+py/+E0GJxtJdReWfz+mxNt+QzS2Mc0AI+HbBBwj9QViKbH5t64DsP2fvmGXUkWU4WgO+Uve2YQzBUGd7r+zH2ZG/tiUQc4QxKwgbwFfVGwwmdLL5wH78aPC/ZBem9jJpCAX3xtcNASSNgJLzUPSQyjB1zQNl8IQJ9MIU4lx2+Jo72ysXYKl1HSzN02BMa/vbZ5xyNJIshJzwf3L0dQhJw4Sih/SFw9Tk8sVeghVPoefaIYCkMZCKbrcP9lnZuk0uPUjGE/KE8JQry7W2tgfuC3vXgvNV+qSQbyFtAtyWk7zWiYevvuUQ9QEQCvJ+5mmu6dTjz1zFHLFj8Eb87MtxaZh/IQFIHom+9vgTWwZxAQjT9X4vtbEVPojwjiV471s00mhAckpwGuCn1HtFtRDaSh6y9zsL+LNBvCG/24ThcxHObdlWc1v+VQJe8LcO0jwtuF8BwnAAUgP9M8JPU2Me+Oh12auPGT6fHuTePE3bLDy+x9pTLnhMn+07TQGh//Bz1iI0c6kvtqInjvPZcYR3KsPVmUsPYt9nFig9SCY8VQNhpPBzn952bbgcsk2EvM89wzh3UEffBbyPqvBUBYQ8ODGPFOLsa7RF096WJ69L+E4EmnpjWu5o4ChlKaRTKT39RMMaVPEQRsz/nIWlDN80chjdJlSd1l0pJCAMVZsniobQVuxceMM9OFoaMd9zqZtjMEYYDW38Drb8Y0DYPLShxn0pvIFuOSxd7YCPet9zk452wsh54FJoeN05hcgSQoG5RR0Qh9Q4E4VvL4wcZq8UACgaRFEQKgSwWrkr5WFnGxiHSutqJGlXjBgIOayhwYBTA0ER0oisIVSUV0AAMT0IASCUO4hRIQSAEECMCCEPwqyQA0JCQBzEGjWNAqHiUVAoXUWbvggOIQCEAOJzxTjoaQ4AIaE64/aZridUsBYUgkhB15oGg1DBIl8IqirYwV6hPSGBSFteMCUBSVXwfYixBmamRubeMyjzMJQBDDowE3OesDD+zwqFoDqiEwXoXJpljB+PvWJGy75BKF1FPxhKygJuqUdYQGlLxNEXkrYyjQ0GbaAwEnUIlLRNvVjQDYUAsJB0HKLE4y0AIpQNgCIhBIhQTgCKhZBBpAN/v6LtQI50JfUgYOnnjmLUFHKhjxbAmdTCaTiBm3ovLPqG2urWAij6im0Nd9aTN9ygLUEt9LgSRnohxUPIKxlGaE+/6Y7znFf0yX+GnkvFFWmarkab2o9PmTeq8sbd2a7DaysXz7i64VeznN4jCQhN9gdDbRiuWrfrsq0mHIrlaq+hlotCtd3Um9u0BYWY8y5D67wccJoZjFca7iUs9VqZcfsZwTd1sbWGG+OcYaTnPAP7rTQVVlM4Sg3oGvB1tmNh0t/HKXZ1jFoIMwCQjtqbhNxUmkGYqgZEDZP11HN/S3gAYRozf0l8C5kKEKUvW0t1IfeWG/5MwgheZTT1E0AEhDkAePQO+Ig2H3DncAkQM4cwUQCD530dU4B5Yvmi2LlDqXfWrxMCcMth51RToRMNUXFnfc2KJ0+Ryl0VNOUwlhh6NoxK5gnViTgQpUG4SqSyt5z3zRJpuKmt3Q1614QaCBPaN6je+2XiFcWAKOXcUfIYKRyL/1lb7pe5VxSxxjQ6hImshqGRt5GWZVKO6q2wHwujfwDtIvaIdexj8Cm8+a68EqMfox6x/voMouZF4dHnEGNeCDMwT6vdNfekH1MafMk4PI06YtqLVGl95aEM9Z5vAeCTOA++YLtoVJRrsqNCaJ6WRmkdYaNec5BT/lcTRMqrhmwfjbpkj55+OKp8IEbU/JLgPJE6Wa3TTe9sHS+ShVD5QIyqIxMEwKh12olC6mHIed5ewEop80CNlfIOADYOT2nd6ZXCop+Ebqchc0JqxKcKASxChycJgUh1rnHA5ow9eTrhqNI7JWiAYYwBGGdpyNLoGw0Pkh96h1BpHihyywtATDM/7Hk2fN9EnH8BgKJCU4ooBkbXFMZJiPbrOyecGl3zgQDQL4hk10IZiOe+5w99Q/gBAEIJgPhJM4QAEEoFREAIAAEiIASAkD8Qt4AQAEIAERAGFlX4CACKAXGVM4ivMwWwCLFAlyeoaa70QePKm5Dlp+/n+ye/5dYgva6YsUaVeMa+tzNFeJtWwc+udbJ0Fg399kLielQJ5Ze61c2+7ytA6EZetiPxZC6tj22yJCv6jUwOyj/zcbqAxOMyAKEbfeHtNa7DtYXptjsk2kJxR+eIeim/tHNofUKYy8DMrQcAKWz6brpvzyIAlpwPhQ49l6b7skJf5Z+YTOYQc4FwLDxvoTDwaygQK+U/kVr+ytSFBG01Q3gnJJR4cNiAhx4HDub8/b5DULXlj6SVZghFiE+LdvE9vo/o8Lp1RmH5hzm0T6wdbZ6n+D6i44zDRc3ln6CpAEJfXiRU45oqLz8gFAThWsh7ughrRibc0QynHgZpNJa/ENJ+loCwu/qOGnFIjYR/n7TfgycULhcQhu6VC+HfF+L3BoAQ4WiZTw1M+FPCnA2gKC6/FAhXgDC+ojQGh3NuWsvfF1L/D5ohlCKtl1j2ldu9a/nPAKFwN56Bst10zCG0CPleXN/zXPgHQZXaZaBgrbzyY5V/mUA+6F0hwtGN9rwu5DVZPuwWqfxdFz1LWbJ2lwKEa+0Qsm4Dl3fp+Pu0lV97PgwIPfSsS+UQhj5Oo+vvFULazRIQyvGEcxPuNLCth2MvFsrKn8UOilAQShkh7TTczYNMoS6OdP47msrPi82lXKGWhCdMZYS0bFy+vcnGAjP1CIfvgbKNA9glecEH9RD6Ol4wRuWyN/G9MHnksS6o/GPf5XcwNSUlHzQhDuAKtWJmkwKElU7lylP5rgIcsquh/FI8YZCDpkJBuE4FQm7Icw8N+SrUGaQKyi8FwiDt1ve5o+Vu7qYHy/psgK8cvh+FTYuO77bhEC7GuaPiys/L1X4IgXDL+e3M5+ovLxBy5VLuIebw1oqcHoPfoaMJUsHays878r8KbDc3xtPx/84gZPBG/JwaufrsY/SRG/OY3//8QMNdsvdZCFtbW6f8pFuf5bflILAlX7O+4fdfugKyFYS8T2zAsXthdG0VurPGKwI06oF5vkBgHWkNp6ry29+lsPZMU3vijnXFNmoclr+6+Ou/FIb8yb30sS8YGjmTqCLyQsi5N/6ZwKs0Yenj68pfPjF6N782Dp2FzV9CTyoSeY8mLK16qGxIkLI8oa1n8tz9juP40DlK0epxYEbojbq+9QfurBeVIlCO9D2396bxiV4lkYQ3hOAFw2pbhqMGISkkQOMcQ9EqhDmGZZdo92JC0YHRNTfoSg+5e0IT+opqCKHoIU+4ztQIgBD1EFNrQAgIpYSil9lDmPHqkROPt+JC6AgPquSuumJmg0YARVCuneDfvPVeJokZ6pIXDkNxQtGzTF9/BQjRG0tQznfb74RwCQghpALBtIQnfK4zhxdyQvVCUeknMIT3hLyY+T5jo0yABqKPQNpUNw/09tGZod5jgCaYFxyYvJcNPkv9eof+I3pnCFEHIETjSM8L9tHZHYCQT9PaZGycU6yg8S4akDnJ+P03L0+t23XGzCLzRgII/Wqa+fv/xlfvmKvMUOcOrlCDdoei1MGdZm6G5VEIfRzzjd4aQs69n699Rx7ewhvCGzr2gmTPs8zNsJOrXt24FbkhhOjCfT4ICA/rPbyhUy94Dks0gJCX1NzCZui9YUd3oei+c257TalFbgg19ILHrlrL2gvWgXAL26EX76gZTNASQnad8Ibwhl284NhgXpB0c+jKhWO3Ms1hP9ihJYB9eMF6qd1BCPk0qA1s+LimFIu7m4nsdQIzPK4VbQ8hYvrnuSH2G9b2ggP78QmWqBdF9Vx8SSY6QYdUW7BTA1schZATyhvY8lHvcRbNUS9YGFy2U+qmzh2YPVc0I7yAOFyHfRpyUwtCSzOdPXMHmz7qDIM0e0V2wZTEk+6Ym6N63eBLp/b5Bts+2cKCSJ/LuoZO3ANSiE5hKAZjnvNSS4931jcw9jpwT0feV/qSJ1pVtCyfHKDkvK8Ejx7pUxGh2xFNSwx8QTi2H9ceC0/nni64MS/5N5dG39pDqvRV+WgGk71c9VFXF9b+xYvOw/d61iv7m3MvEHryhvecwC52jSSx4VIIgwnMNT/UsTxIgpPt3K/ARj15CptwL3Zd/ceDSATj2DGQjbxgWwhdeMMte7zpy5On9vymRm/YxBYljGVjKWF9VJf7I1+sex3wY8w/V1QPTborW/72gkdsRDaZMJBdbdHIC7aCkAu9atlLbtnrzerMnyToDaGwelOnk3/hHSem/ZK7e/t7jeeR20LYBgqa8J80gS8jbwi5F02Uj1u2NYJxap8PLkJfLxA2hIJyvnHX/AfeEPLpBfe0uSFHbnXaea3Qd5d6HcpYZ8L6M7lnFwMQ3MNg+RxUR1+6AshtbsVgfXTEg1sIGax9UND2p7f270wdG3eK9gXVGHdw2k5sOyZv+Nbs39Z308XR9DqWb2J+PwKDhuKHPobfuXf7gnYGHdCs7bhDDadD4entDug7LWNsnRNW4mYqwJ9dk+GGSTPBiA2j0G8RWNM5upZtcG4/3vMfP7KnbK2egx6CCnDPhRn7NgD3cghLIad5WcM2SO38iqHvvMOosyeMpQ5zlVCaaj06GVs9xUbHdiKoqrHWgquFEFMWUEWfXUxJAML23hAHFOctmjZQffKD2pywkhtSGHKNtpitLroscAeE7kCkSsC60vxEl6yMtL9EL5HKGCMszU5bk8gdkklAyEn5FO0yK419rIxBOIqwFMooDE0tHEVYijAUECIshRCGIhxFWIowFJ5QkEYIS5PTJrUwNGlPyN6QQPyKtpuM1E/K5+YJDV/MiA3AaehzqgAm7QnZG9IGYKo8bHnSK7VblLL3hOwNHziPuEGOqE5brrdR6i+atCfckyeWD47HkAkepRGLY/e8A8J0gCwYSNypF08bBm+e6zVz2UL4AshhBUjML/rXLefqC82bcQFhGC9JDwZ1uuu+At0S5gCETYHsV4DUeD9fDN2Zfy5OXaW2zAwQygCzBLJ8cvaW5OXKC1FxfTggFAHmoAJnSiOw2wps9KwRWgJCLaEswaj5NqkLwAYIU4BxqTSXbHXpJdRMPZgAOiAMqABCNGYIEEJutEK5IUAIwYMDQgiCACEEAcJs1Vda7gGqDhCmoiEghAAhBAHCrKXVo2C1DCBMRlp37uMIEECoX7xrX3P5C9QiINSuIcoPAUI0YkAICLNWgfJDh4T9hH7zqYH9+JHAq7zBqWjwhPAicTVCVQJCNF50JghHocahKK0X/ZnQKyEkhSdUpzG8OgQI42qC94EQjsYLRSmH+pbgq73L6bYkeEJ4DYTYmeg1TOBFc/usTTp3V9DdEuXJ2xDCUbXhaXk0/kAYmBvuMB4qkC35E5e5AMKkwSQgyxufyuPy6fMMgAFCSI73LFXU/N8AmEL9X4ABACNSKMHAgb34AAAAAElFTkSuQmCC",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.9.4",
                  "provider": {
                    "name": "CNCF"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\",\n    \"kind\": \"EtcdCluster\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": {\n      \"size\": 3,\n      \"version\": \"3.2.13\"\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\",\n    \"kind\": \"EtcdRestore\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-restore\"\n    },\n    \"spec\": {\n      \"etcdCluster\": {\n        \"name\": \"example-etcd-cluster\"\n      },\n      \"backupStorageType\": \"S3\",\n      \"s3\": {\n        \"path\": \"\u003cfull-s3-path\u003e\",\n        \"awsSecret\": \"\u003caws-secret\u003e\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\",\n    \"kind\": \"EtcdBackup\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-backup\"\n    },\n    \"spec\": {\n      \"etcdEndpoints\": [\"\u003cetcd-cluster-endpoints\u003e\"],\n      \"storageType\":\"S3\",\n      \"s3\": {\n        \"path\": \"\u003cfull-s3-path\u003e\",\n        \"awsSecret\": \"\u003caws-secret\u003e\"\n      }\n    }\n  }\n]\n",
                    "capabilities": "Full Lifecycle",
                    "categories": "Database",
                    "containerImage": "quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b",
                    "createdAt": "2019-02-28 01:03:00",
                    "description": "Create and maintain highly-available etcd clusters on Kubernetes",
                    "repository": "https://github.com/coreos/etcd-operator",
                    "tectonic-visibility": "ocs"
                  },
                  "description": "The etcd Operater creates and maintains highly-available etcd clusters on Kubernetes, allowing engineers to easily deploy and manage etcd clusters for their applications.\n\netcd is a distributed key value store that provides a reliable way to store data across a cluster of machines. It’s open-source and available on GitHub. etcd gracefully handles leader elections during network partitions and will tolerate machine failure, including the leader.\n\n\n### Reading and writing to etcd\n\nCommunicate with etcd though its command line utility `etcdctl` via port forwarding:\n\n    $ kubectl --namespace default port-forward service/example-client 2379:2379\n    $ etcdctl --endpoints http://127.0.0.1:2379 get /\n\nOr directly to the API using the automatically generated Kubernetes Service:\n\n    $ etcdctl --endpoints http://example-client.default.svc:2379 get /\n\nBe sure to secure your etcd cluster (see Common Configurations) before exposing it outside of the namespace or cluster.\n\n\n### Supported Features\n\n* **High availability** - Multiple instances of etcd are networked together and secured. Individual failures or networking issues are transparently handled to keep your cluster up and running.\n\n* **Automated updates** - Rolling out a new etcd version works like all Kubernetes rolling updates. Simply declare the desired version, and the etcd service starts a safe rolling update to the new version automatically.\n\n* **Backups included** - Create etcd backups and restore them through the etcd Operator.\n\n### Common Configurations\n\n* **Configure TLS** - Specify [static TLS certs](https://github.com/coreos/etcd-operator/blob/master/doc/user/cluster_tls.md) as Kubernetes secrets.\n\n* **Set Node Selector and Affinity** - [Spread your etcd Pods](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-node-selector-and-anti-affinity-across-nodes) across Nodes and availability zones.\n\n* **Set Resource Limits** - [Set the Kubernetes limit and request](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-resource-requirement) values for your etcd Pods.\n\n* **Customize Storage** - [Set a custom StorageClass](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#custom-persistentvolumeclaim-definition) that you would like to use.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "etcdclusters.etcd.database.coreos.com",
                        "version": "v1beta2",
                        "kind": "EtcdCluster",
                        "displayName": "etcd Cluster",
                        "description": "Represents a cluster of etcd nodes.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "members",
                            "displayName": "Member Status",
                            "description": "The status of each of the member Pods for the etcd cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                            ]
                          },
                          {
                            "path": "serviceName",
                            "displayName": "Service",
                            "description": "The service at which the running etcd cluster can be accessed.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Service"
                            ]
                          },
                          {
                            "path": "size",
                            "displayName": "Cluster Size",
                            "description": "The current size of the etcd cluster."
                          },
                          {
                            "path": "currentVersion",
                            "displayName": "Current Version",
                            "description": "The current version of the etcd cluster."
                          },
                          {
                            "path": "targetVersion",
                            "displayName": "Target Version",
                            "description": "The target version of the etcd cluster, after upgrading."
                          },
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the etcd cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Status Details",
                            "description": "Explanation for the current status of the cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "size",
                            "displayName": "Size",
                            "description": "The desired number of member Pods for the etcd cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "pod.resources",
                            "displayName": "Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "etcdbackups.etcd.database.coreos.com",
                        "version": "v1beta2",
                        "kind": "EtcdBackup",
                        "displayName": "etcd Backup",
                        "description": "Represents the intent to backup an etcd cluster.",
                        "statusDescriptors": [
                          {
                            "path": "succeeded",
                            "displayName": "Succeeded",
                            "description": "Indicates if the backup was successful.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Reason",
                            "description": "Indicates the reason for any backup related failures.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "etcdEndpoints",
                            "displayName": "etcd Endpoint(s)",
                            "description": "Specifies the endpoints of an etcd cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:etcd:endpoint"
                            ]
                          },
                          {
                            "path": "s3.path",
                            "displayName": "S3 Path",
                            "description": "The full AWS S3 path where the backup is saved.",
                            "x-descriptors": [
                              "urn:alm:descriptor:aws:s3:path"
                            ]
                          },
                          {
                            "path": "s3.awsSecret",
                            "displayName": "AWS Secret",
                            "description": "The name of the secret object that stores the AWS credential and config files.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Secret"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "etcdrestores.etcd.database.coreos.com",
                        "version": "v1beta2",
                        "kind": "EtcdRestore",
                        "displayName": "etcd Restore",
                        "description": "Represents the intent to restore an etcd cluster from a backup.",
                        "statusDescriptors": [
                          {
                            "path": "succeeded",
                            "displayName": "Succeeded",
                            "description": "Indicates if the restore was successful.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Reason",
                            "description": "Indicates the reason for any restore related failures.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "etcdCluster.name",
                            "displayName": "etcd Cluster",
                            "description": "References the EtcdCluster which should be restored,",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:EtcdCluster",
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "s3.path",
                            "displayName": "S3 Path",
                            "description": "The full AWS S3 path where the backup is saved.",
                            "x-descriptors": [
                              "urn:alm:descriptor:aws:s3:path"
                            ]
                          },
                          {
                            "path": "s3.awsSecret",
                            "displayName": "AWS Secret",
                            "description": "The name of the secret object that stores the AWS credential and config files.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Secret"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "singlenamespace-alpha"
          }
        },
        {
          "metadata": {
            "name": "event-streams-topic",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/event-streams-topic",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "IBM",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "IBM"
            },
            "packageName": "event-streams-topic",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "event-streams-topic.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "Event Streams Topic",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "IBM"
                  },
                  "annotations": {
                    "alm-examples": "[{\"kind\": \"Topic\", \"spec\": {\"bindingFrom\": {\"name\": \"myes-binding\"}, \"topicName\": \"myTopic\"}, \"apiVersion\": \"ibmcloud.ibm.com/v1alpha1\", \"metadata\": {\"name\": \"mytopic\"}}]",
                    "capabilities": "Basic Install",
                    "categories": "Cloud Provider",
                    "certified": "false",
                    "containerImage": "cloudoperators/event-streams-topic:0.1.0",
                    "createdAt": "2019-08-07T11:11:07Z",
                    "description": "An operator for managing Topics for Event Streams on IBM Cloud",
                    "repository": "https://github.com/IBM/event-streams-topic",
                    "support": "IBM"
                  },
                  "description": "Event Streams Topic is an operator to manage the life cycle of Topics on Event Streams service on IBM Cloud. It is currently in preview. It will get updated as we release new versions of the [upstream repository](https://github.com/IBM/event-streams-topic).\n## Requirements\nThe operator can be installed on any OLM-enabled Kubernetes cluster with version \u003e= 1.11. \n## Using the Event Streams Topic Operator\nFor additional configuration options, samples and more information on using the operator, consult  the [Event Streams Topic documentation](https://github.com/IBM/event-streams-topic).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "topics.ibmcloud.ibm.com",
                        "version": "v1alpha1",
                        "kind": "Topic",
                        "displayName": "Topic",
                        "description": "Represents an Event Streams Topic",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Binding",
                            "version": "v1alpha1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1alpha1"
                          },
                          {
                            "name": "",
                            "kind": "Topic",
                            "version": "v1alpha1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "state",
                            "displayName": "State",
                            "description": "Current state for the Topic",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "message",
                            "displayName": "Message",
                            "description": "Detailed message about the current state",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "bindingFrom",
                            "displayName": "BindingFrom",
                            "description": "Binding object that holds the secret for Event Streams credentials",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "topicName",
                            "displayName": "TopicName",
                            "description": "TopicName is the displayed Topic name",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "numPartitions",
                            "displayName": "numPartitions",
                            "description": "NumPartitions is the number of partitions for the Topic",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "replicationFactor",
                            "displayName": "ReplicationFactor",
                            "description": "ReplicationFactor is the replication factor for the Topic",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "configs",
                            "displayName": "Configs",
                            "description": "Configs is an array of configuration parameters for the Topic",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "apiKey",
                            "displayName": "ApiKey",
                            "description": "APIKey is the API key for the Topic's Event Stream service",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "kafkaAdminUrl",
                            "displayName": "KafkaAdminUrl",
                            "description": "KafkaAdminURL is the kafka admin URL for the Topic's Event Stream",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "ext-postgres-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/ext-postgres-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "movetokube.com",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "movetokube.com"
            },
            "packageName": "ext-postgres-operator",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "ext-postgres-operator.v0.3.0",
                "currentCSVDesc": {
                  "displayName": "Ext Postgres Operator",
                  "version": "0.3.0",
                  "provider": {
                    "name": "movetokube.com"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"db.movetokube.com/v1alpha1\",\"kind\":\"Postgres\",\"metadata\":{\"name\":\"my-db\",\"namespace\":\"app\"},\"spec\":{\"database\":\"test-db\"}},{\"apiVersion\":\"db.movetokube.com/v1alpha1\",\"kind\":\"PostgresUser\",\"metadata\":{\"name\":\"my-db-user\",\"namespace\":\"app\"},\"spec\":{\"database\":\"my-db\",\"role\":\"username\",\"secretName\":\"my-credential-secret\"}}]",
                    "capabilities": "Basic Install",
                    "categories": "Database",
                    "containerImage": "movetokube/postgres-operator:0.3",
                    "description": "Manage databases and roles in external PostgreSQL server or cluster",
                    "repository": "https://github.com/movetokube/postgres-operator"
                  },
                  "description": "ext-postgres-operator is an external PostgreSQL database operator. This is a very light-weight basic operator which\ndoes not provide a PostgreSQL server, but rather manages databases inside an existing PostgreSQL database server (or cluster).\n### Features\nThis operator enables you to create roles and databases easily by defining simple Custom Resources. Operator's\nfeatures are as follows:\n\n* Creates a database\n* Creates a group role which has full access to the database\n* Can create multiple user roles which are granted the group role permissions\n* Creates a secret for each user role, which includes role, password and postgres uri\n* on PostgresUser CR deletion - deletes the user role and associated Kubernetes secret\n* on Postgres CR deletion - checks if there are no other Postgres CRs using the group role, reassigns all objects to\n**POSTGRES_USER** role\n\n### Installation\nThis operator requires a Kubernetes Secret to be created in the **same namespace** as operator itself. Secret should\ncontain these keys: POSTGRES\\_HOST, POSTGRES\\_USER, POSTGRES\\_PASS, POSTGRES\\_URI\\_ARGS.\n\nExample\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ext-postgres-operator\n  namespace: operators\ntype: Opaque\ndata:\n  POSTGRES_HOST: postgres\n  POSTGRES_USER: postgres\n  POSTGRES_PASS: admin\n  POSTGRES_URI_ARGS:\n```\n\n### Custom Resources\nCustom Resources are very simple for this operator. For `postgres.db.movetokube.com` CR, the spec is:\n* `spec.database` - name of PostgreSQL database that should be created (if it does not exist). The group role name\nwill be **spec.database-group**\n\nFor `postgresusers.db.movetokube.com` CR, this needs to reference `postgres.db.movetokube.com` CR in the same namespace, the spec is:\n* `spec.role` - user role prefix, the final user role will be **spec.role-\u003chash\u003e**\n* `spec.database` - same as in `Postgres` CR in the same namespace\n* `spec.secretName` - name of the secret that will contain `ROLE`, `PASSWORD` and `POSTGRES_URL`. The final secret\nname will be format: **spec.secretName**-**CR.metadata.name**",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "postgres.db.movetokube.com",
                        "version": "v1alpha1",
                        "kind": "Postgres",
                        "displayName": "postgres.db.movetokube.com",
                        "description": "Represents a resource for managing external PostgreSQL database and associated group role"
                      },
                      {
                        "name": "postgresusers.db.movetokube.com",
                        "version": "v1alpha1",
                        "kind": "PostgresUser",
                        "displayName": "postgresusers.db.movetokube.com",
                        "description": "Represents a resource for managing external PostgreSQL user role"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "falco",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/falco",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Sysdig",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Sysdig"
            },
            "packageName": "falco",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "falco-operator.v0.7.6",
                "currentCSVDesc": {
                  "displayName": "Falco Operator",
                  "icon": [
                    {
                      "base64data": "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA0MDQuODUgMzc1LjkyIj48ZGVmcz48c3R5bGU+LmNscy0xLC5jbHMtMntmaWxsOiMwMGI0Yzg7fS5jbHMtMntmb250LXNpemU6NzEuOThweDtmb250LWZhbWlseTpSb2JvdG8tTWVkaXVtLCBSb2JvdG87fTwvc3R5bGU+PC9kZWZzPjx0aXRsZT5GYWxjbyB0ZWFsIHN0YWNrIGxvZ288L3RpdGxlPjxnIGlkPSJmcXFaWFQiPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTI0NCwxMjguMDlxLTQ0LjA1LDQ0LjM5LTg4LjM3LDg4LjVhMzkuNjIsMzkuNjIsMCwwLDEtNC4zNyw0Yy0yLjExLDEuNTctNC40MiwxLjY5LTYuMzQtLjM3cy0xLjI0LTQuMTUuMzUtNS44NWMzLjgtNC4wOSw3Ljc0LTguMDcsMTEuNy0xMnE0My41My00My4zMiw4Ny4wOS04Ni42M0MyNDYuNzgsMTEzLDI1OSwxMjIsMjYxLjg4LDEyNSIvPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTI1Mi41NCwxNDIuMTVjLS4xMiwxLjc3LTEuMjcsMi45My0yLjQzLDQuMDhxLTM2LjM2LDM2LjM2LTcyLjczLDcyLjcxYy0yLjI4LDIuMjgtNSw0LjUtNy44NCwxLjQtMi42LTIuODEtLjQxLTUuMzQsMS43MS03LjQ2cTM2LTM2LDcyLTcxLjk1YzEuODQtMS44NCwzLjgtMy41MSw2LjY2LTIuNDhBMy44MiwzLjgyLDAsMCwxLDI1Mi41NCwxNDIuMTVaIi8+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMTMzLjE3LDU5YzItLjA4LDMuMzgsMS4wOSw0LjY3LDIuMzhRMTcyLjQ4LDk2LDIwNy4wOSwxMzAuNjFjMi4xNSwyLjE2LDQuMTEsNC43NiwxLjQsNy40N3MtNS4zMS44LTcuNDgtMS4zN3EtMzQuNjItMzQuNjEtNjkuMjMtNjkuMjRjLTEuNzQtMS43NC0zLjA4LTMuNjQtMi02LjI0QTMuNTcsMy41NywwLDAsMSwxMzMuMTcsNTlaIi8+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMjQyLjksMjIyLjJjLTQuMTUuODEtNy4zNy0xLjExLTEwLjMxLTQuMTgtNS4yNi01LjQ3LTEwLjY2LTEwLjgxLTE2LjA3LTE2LjEyLTMuMi0zLjE0LTMuMzUtNi4xMy0uMTItOS4zNCw5LjIyLTkuMTcsMTguMzktMTguNCwyNy42Mi0yNy41NywyLTIsNC41LTMuNzMsNy4wOC0xLjI4LDIuODgsMi43MSwxLDUuMy0xLjE1LDcuNDYtNy4yNCw3LjMzLTE0LjQ0LDE0LjY5LTIxLjg2LDIxLjgzLTIuODIsMi43MS0zLjI2LDQuNzQtLjE2LDcuNSwzLjQ5LDMuMTMsNi43Myw2LjU1LDEwLDEwYTkuNDksOS40OSwwLDAsMCw3LjYsMy40YzMuMTMtLjEyLDYuODYtLjEsNi43Niw0LjIxcy0zLjkzLDQtNyw0LjI3QTE4LjIxLDE4LjIxLDAsMCwxLDI0Mi45LDIyMi4yWiIvPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTE5Ny41OCwxNDcuOTRjLS42MywyLjg5LTIuMjIsNC42NC01LjMzLDMuNjFhMTAuOTQsMTAuOTQsMCwwLDEtMy45My0yLjc0UTE2My4zOSwxMjQsMTM4LjU1LDk5LjA4YTE4LjkyLDE4LjkyLDAsMCwxLTIuMTItMi40NGMtMS40My0yLTEuNTUtNC4xMS4yNS01LjlzNC0xLjQ1LDUuNzkuMjJjMywyLjg0LDUuOTQsNS43OSw4Ljg3LDguNzNxMjEuMjQsMjEuMjMsNDIuNDcsNDIuNDhDMTk1LjQ0LDE0My44MSwxOTcuNCwxNDUuMjcsMTk3LjU4LDE0Ny45NFoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xODUuMTksMTYwYTQuMDYsNC4wNiwwLDAsMS0yLjEsMy41NSw0LjQ2LDQuNDYsMCwwLDEtNS40OS0uNzhjLTIuNzgtMi41Ny01LjQ0LTUuMjYtOC4xMi03LjkzUTE1Ny42MiwxNDMsMTQ1Ljc5LDEzMS4xM2EyNy43OCwyNy43OCwwLDAsMS0zLjQ1LTQuMTMsMy43NiwzLjc2LDAsMCwxLC4yOS01LDQuMTYsNC4xNiwwLDAsMSw1LS45NCw5Ljg4LDkuODgsMCwwLDEsMy4wNywyLjE0cTE2LjEsMTYsMzIuMTIsMzIuMTFDMTg0LjA4LDE1Ni42MywxODUuMjEsMTU4LDE4NS4xOSwxNjBaIi8+PC9nPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTE4Ny40LDI4NC4zMmExMC45NCwxMC45NCwwLDAsMC00LjQ2LTIuODcsMjAuMjcsMjAuMjcsMCwwLDAtNi44OS0xLDM2LjIxLDM2LjIxLDAsMCwwLTYuNDEuNTQsMzIuNDUsMzIuNDUsMCwwLDAtNC41NywxLjFsMSw2LjY4YTIzLjc5LDIzLjc5LDAsMCwxLDMuODgtMSwzMS40MywzMS40MywwLDAsMSw1LjI1LS40MSw5Ljc5LDkuNzksMCwwLDEsMy41MS41NSw1LjUyLDUuNTIsMCwwLDEsMi4yNSwxLjUzLDUuNzMsNS43MywwLDAsMSwxLjIsMi4yOSwxMC41MywxMC41MywwLDAsMSwuMzQsMi43M3YxLjM2YTI2Ljc0LDI2Ljc0LDAsMCwwLTMuMjEtLjU4LDI2LjE5LDI2LjE5LDAsMCwwLTIuODYtLjE3LDI2LjU0LDI2LjU0LDAsMCwwLTUuNjMuNTgsMTQsMTQsMCwwLDAtNC43MywxLjkxLDkuNyw5LjcsMCwwLDAtMy4yNCwzLjQ0LDEwLjM4LDEwLjM4LDAsMCwwLTEuMiw1LjE5LDEyLjIsMTIuMiwwLDAsMCwxLjA2LDUuMzgsOS4yNyw5LjI3LDAsMCwwLDIuOTMsMy41NSwxMi4zLDEyLjMsMCwwLDAsNC41NCwyLDI2LDI2LDAsMCwwLDUuODYuNjEsNTguNDMsNTguNDMsMCwwLDAsOC43LS41OHEzLjg0LS41OCw1Ljc2LTFWMjk0LjU0YTIxLjczLDIxLjczLDAsMCwwLS43Mi01Ljc2QTEwLjYzLDEwLjYzLDAsMCwwLDE4Ny40LDI4NC4zMlptLTQuODcsMjYuNDVhMzAuMTEsMzAuMTEsMCwwLDEtNS44LjQxLDkuNTIsOS41MiwwLDAsMS01LTEuMTJjLTEuMjItLjc1LTEuODQtMi4xLTEuODQtNC4wNmE0LjI1LDQuMjUsMCwwLDEsLjY5LTIuNDksNC40OCw0LjQ4LDAsMCwxLDEuOC0xLjUzLDguMjEsOC4yMSwwLDAsMSwyLjUzLS43NSwxOC41MiwxOC41MiwwLDAsMSwyLjc2LS4yMSwxNy45MywxNy45MywwLDAsMSwyLjg2LjIxLDE0LjcsMTQuNywwLDAsMSwyLC40MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0yMDguMjIsMzA5LjE3YTQsNCwwLDAsMS0uODUtMS43NCwxMS4yMSwxMS4yMSwwLDAsMS0uMjQtMi41MlYyNjQuMDZsLTguMjUsMS4zN3Y0MS4wNWExNy41OCwxNy41OCwwLDAsMCwuNTgsNC43NCw3Ljc3LDcuNzcsMCwwLDAsMiwzLjQ4LDkuNDIsOS40MiwwLDAsMCwzLjg2LDIuMTQsMjIuMDksMjIuMDksMCwwLDAsNi4xLjgybDEuMTYtNi44MmExMi44MiwxMi44MiwwLDAsMS0yLjctLjU4QTMuODMsMy44MywwLDAsMSwyMDguMjIsMzA5LjE3WiIvPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTIzOC43OSwzMTAuM2EyMS4zNCwyMS4zNCwwLDAsMS00LjE2LjQxcS01LjY1LDAtOC0zLjExdC0yLjM5LTguNDJxMC01LjUyLDIuNTItOC41NnQ3LjM3LTNhMTcuNTUsMTcuNTUsMCwwLDEsMy44NS40MSwxOC43MSwxOC43MSwwLDAsMSwzLjI0LDFsMS43Ny02Ljc1YTI0LjksMjQuOSwwLDAsMC05LjU0LTEuODQsMTguMjgsMTguMjgsMCwwLDAtNy4zNywxLjQzLDE2LjE2LDE2LjE2LDAsMCwwLTUuNTYsNCwxNy42NCwxNy42NCwwLDAsMC0zLjUxLDYsMjEuODksMjEuODksMCwwLDAtMS4yMyw3LjQsMjQuNTcsMjQuNTcsMCwwLDAsMS4xLDcuNDcsMTYsMTYsMCwwLDAsMy4zLDUuOTMsMTUuMDcsMTUuMDcsMCwwLDAsNS41OSwzLjg5LDIwLjcyLDIwLjcyLDAsMCwwLDgsMS40LDI5LjU5LDI5LjU5LDAsMCwwLDUuNjktLjU1LDE2LjgyLDE2LjgyLDAsMCwwLDQuMTMtMS4yM2wtMS4xNi02LjgyQTE5Ljk0LDE5Ljk0LDAsMCwxLDIzOC43OSwzMTAuM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0yNzkuMTgsMjkxLjQ0YTE3LjYyLDE3LjYyLDAsMCwwLTMuNTEtNS45LDE1LjQsMTUuNCwwLDAsMC01LjQyLTMuNzgsMTcuNjcsMTcuNjcsMCwwLDAtNi45Mi0xLjMzLDE3LjQyLDE3LjQyLDAsMCwwLTYuODksMS4zMywxNS43NywxNS43NywwLDAsMC01LjQyLDMuNzgsMTcuMzgsMTcuMzgsMCwwLDAtMy41NSw1LjksMjIuMjQsMjIuMjQsMCwwLDAtMS4yNiw3LjY3LDIyLjUxLDIyLjUxLDAsMCwwLDEuMjYsNy43MSwxNy4zNywxNy4zNywwLDAsMCwzLjUxLDUuOTMsMTUuOCwxNS44LDAsMCwwLDUuMzksMy44MiwxNy4yNSwxNy4yNSwwLDAsMCw3LDEuMzYsMTcuNTQsMTcuNTQsMCwwLDAsNy0xLjM2LDE1LjY0LDE1LjY0LDAsMCwwLDUuNDItMy44MiwxNywxNywwLDAsMCwzLjQ4LTUuOTMsMjMuMjYsMjMuMjYsMCwwLDAsMS4yMi03LjcxQTIyLjI0LDIyLjI0LDAsMCwwLDI3OS4xOCwyOTEuNDRabS05LjQ4LDE2LjJhOC4wNiw4LjA2LDAsMCwxLTEyLjc1LDBxLTIuMjgtMy4xMy0yLjI4LTguNTN0Mi4yOC04LjQyYTguMSw4LjEsMCwwLDEsMTIuNzUsMHEyLjMsMy4xLDIuMjksOC40MlQyNjkuNywzMDcuNjRaIi8+PHRleHQgY2xhc3M9ImNscy0yIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMjQuNDEgMzE3Ljg0KSI+RjwvdGV4dD48L3N2Zz4=",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.7.6",
                  "provider": {
                    "name": "Sysdig"
                  },
                  "annotations": {
                    "alm-examples": "[{\n  \"apiVersion\": \"falco.org/v1alpha1\",\n  \"kind\": \"Falco\",\n  \"metadata\": {\n    \"name\": \"falco-with-ebpf\"\n  },\n  \"spec\": {\n    \"ebpf\": {\n      \"enabled\": true\n    }\n  }\n},\n{\n  \"apiVersion\": \"falco.org/v1alpha1\",\n  \"kind\": \"Falco\",\n  \"metadata\": {\n    \"name\": \"falco-with-traefik-rules\"\n  },\n  \"spec\": {\n    \"customRules\": {\n      \"rules-traefik.yaml\": \"- macro: traefik_consider_syscalls\\n  condition: (evt.num \u003c 0)\\n\\n- macro: app_traefik\\n  condition: container and container.image startswith \\\"traefik\\\"\\n\\n# Restricting listening ports to selected set\\n\\n- list: traefik_allowed_inbound_ports_tcp\\n  items: [443, 80, 8080]\\n\\n- rule: Unexpected inbound tcp connection traefik\\n  desc: Detect inbound traffic to traefik using tcp on a port outside of expected set\\n  condition: inbound and evt.rawres \u003e= 0 and not fd.sport in (traefik_allowed_inbound_ports_tcp) and app_traefik\\n  output: Inbound network connection to traefik on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)\\n  priority: NOTICE\\n\\n# Restricting spawned processes to selected set\\n\\n- list: traefik_allowed_processes\\n  items: [\\\"traefik\\\"]\\n\\n- rule: Unexpected spawned process traefik\\n  desc: Detect a process started in a traefik container outside of an expected set\\n  condition: spawned_process and not proc.name in (traefik_allowed_processes) and app_traefik\\n  output: Unexpected process spawned in traefik container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)\\n  priority: NOTICE\"\n    }\n  }\n}]",
                    "capabilities": "Basic Install",
                    "categories": "Security",
                    "certified": "false",
                    "containerImage": "docker.io/falcosecurity/falco-operator-helm:0.7.6",
                    "createdAt": "2019-03-12T18:30:00Z",
                    "description": "Falco is a behavioral activity monitor designed to detect anomalous activity in your applications. You can use Falco to monitor run-time security of your Kubernetes applications and internal components.",
                    "repository": "https://github.com/falcosecurity/falco-operator/tree/helm-based-operator",
                    "support": "Sysdig, Inc."
                  },
                  "description": "[Falco](https://falco.org) is a behavioral activity monitor designed to detect anomalous activity in your applications. You can use Falco to monitor run-time security of your Kubernetes applications and internal components.\n\nTo know more about Falco have a look at:\n\n- [Kubernetes security logging with Falco \u0026 Fluentd](https://sysdig.com/blog/kubernetes-security-logging-fluentd-falco/)\n- [Active Kubernetes security with Sysdig Falco, NATS, and kubeless](https://sysdig.com/blog/active-kubernetes-security-falco-nats-kubeless/)\n- [Detecting cryptojacking with Sysdig’s Falco](https://sysdig.com/blog/detecting-cryptojacking-with-sysdigs-falco/)\n\nThis operator adds Falco to all nodes in your cluster using a DaemonSet. It\nalso provides a Deployment for generating Falco alerts. This is useful for\ntesting purposes.\n\n## Settings\n\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/falco), please take a look to\nall the options in the following table:\n\n| Parameter                                       | Description                                                          | Default                                                                                |\n| ---                                             | ---                                                                  | ---                                                                                    |\n| `image.repository`                              | The image repository to pull from                                    | `falcosecurity/falco`                                                                  |\n| `image.tag`                                     | The image tag to pull                                                | `0.15.0`                                                                               |\n| `image.pullPolicy`                              | The image pull policy                                                | `IfNotPresent`                                                                         |\n| `resources`                                     | Specify container resources                                          | `{}`                                                                                   |\n| `extraArgs`                                     | Specify additional container args                                    | `[]`                                                                                   |\n| `rbac.create`                                   | If true, create \u0026 use RBAC resources                                 | `true`                                                                                 |\n| `serviceAccount.create`                         | Create serviceAccount                                                | `true`                                                                                 |\n| `serviceAccount.name`                           | Use this value as serviceAccountName                                 | ` `                                                                                    |\n| `fakeEventGenerator.enabled`                    | Run falco-event-generator for sample events                          | `false`                                                                                |\n| `fakeEventGenerator.replicas`                   | How many replicas of falco-event-generator to run                    | `1`                                                                                    |\n| `proxy.httpProxy`                               | Set the Proxy server if is behind a firewall                         | ``                                                                                     |\n| `proxy.httpsProxy`                              | Set the Proxy server if is behind a firewall                         | ``                                                                                     |\n| `proxy.noProxy`                                 | Set the Proxy server if is behind a firewall                         | ``                                                                                     |\n| `ebpf.enabled`                                  | Enable eBPF support for Falco instead of `falco-probe` kernel module | `false`                                                                                |\n| `ebpf.settings.hostNetwork`                     | Needed to enable eBPF JIT at runtime for performance reasons         | `true`                                                                                 |\n| `ebpf.settings.mountEtcVolume`                  | Needed to detect which kernel version are running in Google COS      | `true`                                                                                 |\n| `falco.rulesFile`                               | The location of the rules files                                      | `[/etc/falco/falco_rules.yaml, /etc/falco/falco_rules.local.yaml, /etc/falco/rules.d]` |\n| `falco.jsonOutput`                              | Output events in json or text                                        | `false`                                                                                |\n| `falco.jsonIncludeOutputProperty`               | Include output property in json output                               | `true`                                                                                 |\n| `falco.logStderr`                               | Send Falco debugging information logs to stderr                      | `true`                                                                                 |\n| `falco.logSyslog`                               | Send Falco debugging information logs to syslog                      | `true`                                                                                 |\n| `falco.logLevel`                                | The minimum level of Falco debugging information to include in logs  | `info`                                                                                 |\n| `falco.priority`                                | The minimum rule priority level to load and run                      | `debug`                                                                                |\n| `falco.bufferedOutputs`                         | Use buffered outputs to channels                                     | `false`                                                                                |\n| `falco.outputs.rate`                            | Number of tokens gained per second                                   | `1`                                                                                    |\n| `falco.outputs.maxBurst`                        | Maximum number of tokens outstanding                                 | `1000`                                                                                 |\n| `falco.syslogOutput.enabled`                    | Enable syslog output for security notifications                      | `true`                                                                                 |\n| `falco.fileOutput.enabled`                      | Enable file output for security notifications                        | `false`                                                                                |\n| `falco.fileOutput.keepAlive`                    | Open file once or every time a new notification arrives              | `false`                                                                                |\n| `falco.fileOutput.filename`                     | The filename for logging notifications                               | `./events.txt`                                                                         |\n| `falco.stdoutOutput.enabled`                    | Enable stdout output for security notifications                      | `true`                                                                                 |\n| `falco.programOutput.enabled`                   | Enable program output for security notifications                     | `false`                                                                                |\n| `falco.programOutput.keepAlive`                 | Start the program once or re-spawn when a notification arrives       | `false`                                                                                |\n| `falco.programOutput.program`                   | Command to execute for program output                                | `mail -s \"Falco Notification\" someone@example.com`                                     |\n| `customRules`                                   | Third party rules enabled for Falco                                  | `{}`                                                                                   |\n| `integrations.gcscc.enabled`                    | Enable Google Cloud Security Command Center integration              | `false`                                                                                |\n| `integrations.gcscc.webhookUrl`                 | The URL where sysdig-gcscc-connector webhook is listening            | `http://sysdig-gcscc-connector.default.svc.cluster.local:8080/events`                  |\n| `integrations.gcscc.webhookAuthenticationToken` | Token used for authentication and webhook                            | `b27511f86e911f20b9e0f9c8104b4ec4`                                                     |\n| `integrations.natsOutput.enabled`               | Enable NATS Output integration                                       | `false`                                                                                |\n| `integrations.natsOutput.natsUrl`               | The NATS' URL where Falco is going to publish security alerts        | `nats://nats.nats-io.svc.cluster.local:4222`                                           |\n| `integrations.snsOutput.enabled`                | Enable Amazon SNS Output integration                                 | `false`                                                                                |\n| `integrations.snsOutput.topic`                  | The SNS topic where Falco is going to publish security alerts        | ` `                                                                                    |\n| `integrations.snsOutput.aws_access_key_id`      | The AWS Access Key Id credentials for access to SNS n                | ` `                                                                                    |\n| `integrations.snsOutput.aws_secret_access_key`  | The AWS Secret Access Key credential to access to SNS                | ` `                                                                                    |\n| `integrations.snsOutput.aws_default_region`     | The AWS region where SNS is deployed                                 | ` `                                                                                    |\n| `tolerations`                                   | The tolerations for scheduling                                       | `node-role.kubernetes.io/master:NoSchedule`                                            |\n\n\nFor example, if you want to deploy a DaemonSet with eBPF enabled:\n\n```yaml\napiVersion: falco.org/v1alpha1\nkind: Falco\nmetadata:\n  name: falco-with-ebpf\nspec:\n  ebpf:\n    enabled: true\n```\n\nAnd you can apply this file with `kubectl apply -f`",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "falcos.falco.org",
                        "version": "v1alpha1",
                        "kind": "Falco",
                        "displayName": "Falco daemonSet",
                        "description": "Represents a Falco running on each node of your cluster."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "federatorai",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/federatorai",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "ProphetStor Data Services, Inc.",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "ProphetStor Data Services, Inc."
            },
            "packageName": "federatorai",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "federatorai.v4.1.20",
                "currentCSVDesc": {
                  "displayName": "Federator.ai",
                  "icon": [
                    {
                      "base64data": "iVBORw0KGgoAAAANSUhEUgAAAMgAAACWCAMAAACsAjcrAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAC91BMVEUAAAD9/v3r78n09PTx8fHu7u719fX29vba2tpiZWLc3Nzf39/b4p/DxMPHx8fLy8zO13zExcTIyMjMzM3G0WjH0mrr78rIx8js8M3a29r19PXd3N329+X5+fn4+Pj6+/L5+vDs8M7s78v4+u3H0Wj///65x0T///25x0X+/f66x0b9/vy3xT7I0mvI0mrI02vU3Ir9/v3K1HHr78nCzlzM1nXM1nbX3pPL1XP09+L19fXz8/Px8fHx8fHx8fHx8fHv8O/t7e3s7Ozs7Ozy8vL9/f3+/v/r6+zm5ubm5ubm5ubw8PD+/v3f39/W1tbQ0NDf4N/x8fHKysrT09P9/f+8vL3MzM34+Pje5ajQ2YHE0GPF0GXF0GTd5KTMzcy9vr3b3Nv////x8fG5ubnu7+6UlJaurrD09PTS24i/y1S+v766urrv7++WlpiwsLH09PXL1XW1wzrM1ne2xT22xD3v8O+6ubqVlZevr7HL1XT19+TMzszc3Nzv7u/X35T19+Tg4ODW19bh4eHy8fLMzMzU09T19PW9vb7Ozs75+fj3+On19+T19+X29+X6+vr4+Pj29vb29vb29vb29vb29vb19fXz9PPz8/P09PT39/f8/Pz9/f3z8/Pw8PDw8PDw8PD29vb+/v76+/Hu8tPq7sXq7sbP2H62xD35+u/s8Mzm67zn673n7L7g5q61wzns8Mzq7sfr78n4+ezDzl22xDy3xD23xT+1wzeltg6mtxCmtxK0wzmltw+mtxGnuBOmuBOnuBXPz8/P0M++vr6/vr+/v7+qqqupqaqys7K1trWzs7OXlpeYl5iZmJl3d3l2dnivvyuwwC2wwCzR2oSztLO2t7a1tLWamZqbmpt5eXt4eHqktQultg2ktg3K1HHL1XO0wziltg+0tLS1wzjR2oPH0mnH0mrR0dHAv8DAwMCrq62rq6zBzVmtvSSuvieuviWouRa7yEi9yk+ouRepuhqpuhnN13jn7MDg5qvh5q3h5qzt8M////9HTZ/9AAAAs3RSTlMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7ArsCuwK7Av7r5+upAfIxCQsLCPEnBWZ9e3cWA2F9e2EDAVp+e31mBQvT/nxD6cgCu9MLFoaOjo6OC9O7AnXIBbvTCyfx08gFu9MLJ/En8fEFyLvT8ScLuwXDFgvThkvtyAW70wuOjpBBBnWPjogaA2+QjpBvAwFokI6PdQYCBQUFK/JY3tvb2+H9ZmZmZjqy/PcAAAABYktHRGGysEyGAAAACXBIWXMAAAGQAAABkABW8NvoAAACuklEQVR42u3cVVQUURzH8RUUA1tssVHADgxs7EbEVhQLC2ywu7s7UbC7WGRRUbAQOxCMtVuxxRefFnc8d/+Mc9T5z/H3fb73nv/nzOudqztw8JDSDhd10PHpSIheaaHFiqs9vVlHwwxKC3d0Unt6QAABBBBA1A4QQAABBBBAAAEEEEAA+Z8gx1hDQsNld9y5hNrTW4boS5YqLbcyZcupPT0BKV+hoovMKlVOofb0BKRKVSu1RwIEEFYBwi1AuAUItwDhFiDcAoRbgHCLgFi7Vqteg6hmrZSiE1PVruNWl8itXn0b0b4GDRs1JmrStFlqhZA0zVuciCBq6Z5WdKJ1K4+Tp4giW7umE+3zbBN1miiqbTtb09L07Tt07GRe5y4UJINX1zNUZ7t5CyHdz52PJrrQo2dGIaRXzEWimN4+mUxLM/fpe+myeVeuUpAsXv2uUV23BLkRfZPoVv8BWYUQ39jbRLF+A7OZltoNGhwXb96du9qEZB8yNEQytuGeViHDpBA9IIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAaBsy/G9A7hslj38Z/wTkAQ3xt/BFAmjICBryUPriWdjIUTmSIKOTgYxR9kX8x+YU7XNIBuLnQ0IePX4iadz4XKbluSdMpK40RjydJJpHl2fylMhnRM+nTssrhEx/8ZJqxkxbCjJrtqQ5c/MlnWw/b/6ChUSLFguvfdosWbpsOdGKlavyi/atXrN2HdH6DRvtKYgmA4RbgHALEG4Bwi1AuAUItwDhFiDcAuRfVCBw0+YgmXkHb+ELKbh12/YdMtu5a7eRLaTQnlev38jt7TsDW4jV3oRf/i38jQABBBBAAAEEEEAAAQQQQAABBBBAAAFEixADI0jhfe8/fFTap89qj/+zIvu/fP2msMTE7z8AofGIUB1IPooAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTktMDMtMTRUMTc6MDA6NTIrMDE6MDCjbINkAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE5LTAzLTE0VDE3OjAwOjUyKzAxOjAw0jE72AAAACB0RVh0cGRmOkhpUmVzQm91bmRpbmdCb3gANDA4eDI2NiswKzDr8x6EAAAAHXRFWHRwZGY6U3BvdENvbG9yLTAAUEFOVE9ORSA0MjEgQx6zNCoAAAAldEVYdHBkZjpTcG90Q29sb3ItMQBQQU5UT05FIENvb2wgR3JheSA3IEOzNDMdAAAAJXRFWHRwZGY6U3BvdENvbG9yLTIAUEFOVE9ORSBDb29sIEdyYXkgOSBDz08nKgAAABR0RVh0cGRmOlZlcnNpb24AUERGLTEuNQ1Ag1dMAAAAAElFTkSuQmCC",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "4.1.20",
                  "provider": {
                    "name": "ProphetStor Data Services, Inc."
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"federatorai.containers.ai/v1alpha1\",\"kind\":\"AlamedaService\",\"metadata\":{\"name\":\"my-alamedaservice\"},\"spec\":{\"selfDriving\":false,\"enableExecution\":true,\"enableGui\":true,\"version\":\"v4.1.39\",\"prometheusService\":\"https://prometheus-k8s.openshift-monitoring:9091\",\"storages\":[{\"usage\":\"log\",\"type\":\"ephemeral\"},{\"usage\":\"data\",\"type\":\"ephemeral\"}]}}]",
                    "capabilities": "Auto Pilot",
                    "categories": "AI/Machine Learning, OpenShift Optional",
                    "certified": "false",
                    "containerImage": "quay.io/prophetstor/federatorai-operator-ubi:v4.1.20",
                    "createdAt": "2019-06-30 10:00:00",
                    "description": "Federator.ai Operator provides easy configuration and management of AI-based Kubernetes resource orchestrator",
                    "repository": "https://quay.io/repository/prophetstor/federatorai-operator-ubi",
                    "support": "ProphetStor Data Services, Inc."
                  },
                  "description": "**Federator.ai**, ProphetStor's Artificial Intelligence for IT Operations (AIOps) platform, provides intelligence to orchestrate container resources on top of VMs (virtual machines) or bare metal, allowing users to operate applications without the need to manage the underlying computing resources. It aims to provide optimal resource planning recommendations that will help enterprises make better decisions. The benefits of **Federator.ai** include:\n- Up to 60% resource savings\n- Increased operational efficiency\n- Reduced manual configuration time with digital intelligence\n\nFor more information, visit our [website](https://www.prophetstor.com/federator-ai/federator-ai-for-openshift/) and [github](https://github.com/containers-ai/federatorai-operator).\n\n**Federator.ai Operator** is an Operator that manages **Federator.ai** components for an OpenShift cluster. Once installed, it provides the following features:\n- **Create/Clean up**: Launch **Federator.ai** components using the Operator.\n- **Easy Configuration**: Easily configure data source of Prometheus and enable/disable add-on components, such as GUI, and predictive autoscaling.\n- **Pod Scaling Recommendation/Autoscaling**: Use provided CRD to setup target pods and desired policies for scaling recommendation and autoscaling.\n\n### Prerequisite\n**Federator.ai** requires a Prometheus datasource to get historical metrics of pods and nodes. When launching **Federator.ai** components, Prometheus connection settings need to be provided.\n\n### Common Configurations\n    apiVersion: federatorai.containers.ai/v1alpha1\n    kind: AlamedaService\n    metadata:\n      name: my-alamedaservice\n    spec:\n      # experimental feature, set true to enable\n      selfDriving: false\n      enableExecution: true\n      enableGui: true\n      version: v4.1.39\n      prometheusService: https://prometheus-k8s.openshift-monitoring:9091\n      # storages is optional. Omit this field if not needed.\n      storages:\n        - usage: log       # the supported usages are log and data\n          type: ephemeral  # the supported types are ephemeral and pvc\n        - usage: data\n          type: ephemeral\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "alamedaservices.federatorai.containers.ai",
                        "version": "v1alpha1",
                        "kind": "AlamedaService",
                        "displayName": "AlamedaService",
                        "description": "An instance of Alameda.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicaSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "conditions",
                            "displayName": "Conditions",
                            "description": "Alameda service condictions",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "selfDriving",
                            "displayName": "Enable self driving",
                            "description": "Apply AlamedaScaler on Alameda itself for autoscaling",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "enableExecution",
                            "displayName": "Enable Execution",
                            "description": "Deploy components to automatically execute Alameda recommendation",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "enableGui",
                            "displayName": "Enable Dashboard",
                            "description": "Deploy Grafana to visualize Alameda prediction and recommendation",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Alameda Version",
                            "description": "Alameda core component image version tag",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "prometheusService",
                            "displayName": "Prometheus Service",
                            "description": "Prometheus database connection settings for metrics retrieval",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "ffdl",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/ffdl",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "IBM",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "IBM"
            },
            "packageName": "ffdl",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "ffdl-operator.v0.0.1",
                "currentCSVDesc": {
                  "displayName": "FfDL Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.0.1",
                  "provider": {
                    "name": "IBM"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"openaihub.ibm.com/v1alpha1\",\n    \"kind\": \"FfDL\",\n    \"metadata\": {\n      \"name\": \"ffdl-cr\"\n    },\n    \"spec\": {\n      \"replicaCount\": 1,\n      \"image\": {\n        \"repository\": \"nginx\",\n        \"tag\": \"stable\",\n        \"pullPolicy\": \"IfNotPresent\"\n      },\n      \"nameOverride\": \"\",\n      \"fullnameOverride\": \"\",\n      \"service\": {\n        \"type\": \"ClusterIP\",\n        \"port\": 80\n      },\n      \"ingress\": {\n        \"enabled\": false,\n        \"annotations\": {},\n        \"hosts\": [\n          {\n            \"host\": \"chart-example.local\",\n            \"paths\": []\n          }\n        ],\n        \"tls\": []\n      },\n      \"resources\": {},\n      \"nodeSelector\": {},\n      \"tolerations\": [],\n      \"affinity\": {}\n    }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "AI/Machine Learning",
                    "certified": "false",
                    "containerImage": "docker.io/ffdlops/ffdl:v0.0.1",
                    "createdAt": "2019-04-24 08:00:00",
                    "description": "Fabric for Deep Learning - an operating system fabric for Deep Learning",
                    "support": "IBM"
                  },
                  "description": "The FfDL Operator allows users to easily install [FfDL](https://github.com/IBM/FfDL/tree/helm-patch) on Kubernetes clusters. FfDL is an operating system fabric for Deep Learning. It is a collaboration platform for\n* Framework-independent training of Deep Learning models on distributed hardware\n\n* Open Deep Learning APIs\n\n* Running Deep Learning hosting in user's private or public cloud\n\nTo know more about the architectural details, please read the [design document](https://github.com/IBM/FfDL/blob/helm-patch/design/design_docs.md). If you are looking for demos, slides, collaterals, blogs, webinars and other materials related to FfDL, please find them [here](https://github.com/IBM/FfDL/tree/helm-patch/demos).\n\n## Parameters\n\n* `FFDL_NAMESPACE` - namespace where to install FfDL\n\n* `FFDL_STORAGECLASS` - storage class for FfDL persistent volume claim\n\n## Supported Deep Learning frameworks\n\n| Framework     | Versions      | Processing Unit |\n| ------------- | ------------- | --------------- |\n| [tensorflow](https://hub.docker.com/r/tensorflow/tensorflow/)    | 1.4.0, 1.4.0-py3, 1.5.0, 1.5.0-py3, 1.5.1, 1.5.1-py3, 1.6.0, 1.6.0-py3, 1.7.0, 1.7.0-py3, 1.8.0, 1.8.0-py3, 1.9.0, 1.9.0-py3, latest, latest-py3 | CPU |\n| [tensorflow](https://hub.docker.com/r/tensorflow/tensorflow/)    | 1.4.0-gpu, 1.4.0-gpu-py3, 1.5.0-gpu, 1.5.0-gpu-py3, 1.5.1-gpu, 1.5.1-gpu-py3, 1.6.0-gpu, 1.6.0-gpu-py3, 1.7.0-gpu, 1.7.0-gpu-py3, 1.8.0-gpu, 1.8.0-gpu-py3, 1.9.0-gpu, 1.9.0-gpu-py3, latest-gpu, latest-gpu-py3 | GPU |\n| [caffe](https://hub.docker.com/r/bvlc/caffe/)         | cpu, intel   | CPU |\n| [caffe](https://hub.docker.com/r/bvlc/caffe/)         | gpu           | GPU |\n| [pytorch](https://hub.docker.com/r/pytorch/pytorch/)       | v0.2, latest | CPU, GPU |\n| [caffe2](https://hub.docker.com/r/caffe2ai/caffe2/)        | c2v0.8.1.cpu.full.ubuntu14.04, c2v0.8.0.cpu.full.ubuntu16.04 | CPU |\n| [caffe2](https://hub.docker.com/r/caffe2ai/caffe2/)        | c2v0.8.1.cuda8.cudnn7.ubuntu16.04, latest | GPU |\n| [h2o3](https://hub.docker.com/r/opsh2oai/h2o3-ffdl/)    | latest | CPU |\n| [horovod](https://hub.docker.com/r/uber/horovod/)       | 0.13.10-tf1.9.0-torch0.4.0-py2.7, 0.13.10-tf1.9.0-torch0.4.0-py3.5 | CPU, GPU |\n\nMore details please refer to [user guide](https://github.com/IBM/FfDL/blob/helm-patch/docs/user-guide.md).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "ffdls.openaihub.ibm.com",
                        "version": "v1alpha1",
                        "kind": "FfDL",
                        "displayName": "FfDL operator",
                        "description": "Fabric for Deep Learning"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "grafana-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/grafana-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Red Hat",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Red Hat"
            },
            "packageName": "grafana-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "grafana-operator.v1.3.0",
                "currentCSVDesc": {
                  "displayName": "Grafana Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "1.3.0",
                  "provider": {
                    "name": "Red Hat"
                  },
                  "annotations": {
                    "alm-examples": "[\n{\n  \"apiVersion\": \"integreatly.org/v1alpha1\",\n  \"kind\": \"Grafana\",\n  \"metadata\": {\n    \"name\": \"example-grafana\"\n  },\n  \"spec\": {\n    \"config\": {\n      \"auth\": {\n        \"disable_signout_menu\": true\n      },\n      \"auth.anonymous\": {\n        \"enabled\": true\n      },\n      \"log\": {\n        \"level\": \"warn\",\n        \"mode\": \"console\"\n      },\n      \"security\": {\n        \"admin_password\": \"secret\",\n        \"admin_user\": \"root\"\n      }\n    },\n    \"dashboardLabelSelector\": [\n    {\n      \"matchExpressions\": [\n      {\n        \"key\": \"app\",\n        \"operator\": \"In\",\n        \"values\": [\n          \"grafana\"\n        ]\n      }\n      ]\n    }\n    ]\n  }\n},\n{\n  \"apiVersion\": \"integreatly.org/v1alpha1\",\n  \"kind\": \"GrafanaDashboard\",\n  \"metadata\": {\n    \"labels\": {\n      \"app\": \"grafana\"\n    },\n    \"name\": \"simple-dashboard\"\n  },\n  \"spec\": {\n    \"json\": \"{\\n  \\\"id\\\": null,\\n  \\\"title\\\": \\\"Simple Dashboard\\\",\\n  \\\"tags\\\": [],\\n  \\\"style\\\": \\\"dark\\\",\\n  \\\"timezone\\\": \\\"browser\\\",\\n  \\\"editable\\\": true,\\n  \\\"hideControls\\\": false,\\n  \\\"graphTooltip\\\": 1,\\n  \\\"panels\\\": [],\\n  \\\"time\\\": {\\n    \\\"from\\\": \\\"now-6h\\\",\\n    \\\"to\\\": \\\"now\\\"\\n  },\\n  \\\"timepicker\\\": {\\n    \\\"time_options\\\": [],\\n    \\\"refresh_intervals\\\": []\\n  },\\n  \\\"templating\\\": {\\n    \\\"list\\\": []\\n  },\\n  \\\"annotations\\\": {\\n    \\\"list\\\": []\\n  },\\n  \\\"refresh\\\": \\\"5s\\\",\\n  \\\"schemaVersion\\\": 17,\\n  \\\"version\\\": 0,\\n  \\\"links\\\": []\\n}\\n\",\n    \"name\": \"simple-dashboard.json\"\n  }\n},\n{\n  \"apiVersion\": \"integreatly.org/v1alpha1\",\n  \"kind\": \"GrafanaDataSource\",\n  \"metadata\": {\n    \"name\": \"example-grafanadatasource\"\n  },\n  \"spec\": {\n    \"datasources\": [\n    {\n      \"access\": \"proxy\",\n      \"editable\": true,\n      \"isDefault\": true,\n      \"jsonData\": {\n        \"timeInterval\": \"5s\"\n      },\n      \"name\": \"Prometheus\",\n      \"type\": \"prometheus\",\n      \"url\": \"http://prometheus-service:9090\",\n      \"version\": 1\n    }\n    ],\n    \"name\": \"example-datasources.yaml\"\n  }\n}\n]",
                    "capabilities": "Basic Install",
                    "categories": "Monitoring",
                    "certified": "False",
                    "containerImage": "quay.io/integreatly/grafana-operator:v1.3.0",
                    "createdAt": "2019-07-23 00:00:00",
                    "description": "An Operator for managing Grafana instances, dashboards and data sources",
                    "repository": "https://github.com/integr8ly/grafana-operator",
                    "support": "Red Hat"
                  },
                  "description": "A Kubernetes Operator based on the Operator SDK for creating and managing Grafana instances.\n\nGrafana is an open platform for beautiful analytics and monitoring. For more information please visit the [Grafana website](https://grafana.com)\n\n# Current status\n\nThe Operator can deploy and manage a Grafana instance on Kubernetes and OpenShift. The following features are supported:\n\n* Install Grafana to a namespace\n* Configure Grafana through the custom resource\n* Import Grafana dashboards from the same or other namespaces\n* Import Grafana data sources from the same namespace\n* Install Plugins (panels)\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "grafanas.integreatly.org",
                        "version": "v1alpha1",
                        "kind": "Grafana",
                        "displayName": "Grafana",
                        "description": "Represents a Grafana Instance"
                      },
                      {
                        "name": "grafanadashboards.integreatly.org",
                        "version": "v1alpha1",
                        "kind": "GrafanaDashboard",
                        "displayName": "Grafana Dashboard",
                        "description": "Represents a Grafana Dashboard"
                      },
                      {
                        "name": "grafanadatasources.integreatly.org",
                        "version": "v1alpha1",
                        "kind": "GrafanaDataSource",
                        "displayName": "Grafana Data Source",
                        "description": "Represents a Grafana Data Source"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "halkyon",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/halkyon",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Snowdrop Team",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Snowdrop Team"
            },
            "packageName": "halkyon",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "halkyon.v0.1.3",
                "currentCSVDesc": {
                  "displayName": "Halkyon Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.3",
                  "provider": {
                    "name": "Snowdrop Team"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\" : \"halkyon.io/v1beta1\",\n    \"kind\" : \"Capability\",\n    \"metadata\" : {\n      \"name\" : \"postgres-db\"\n    },\n    \"spec\" : {\n      \"category\" : \"database\",\n      \"kind\" : \"postgres\",\n      \"version\" : \"10\",\n      \"parameters\" : [\n        {\n          \"name\" : \"DB_USER\",\n          \"value\" : \"admin\"\n        }, {\n          \"name\" : \"DB_PASSWORD\",\n          \"value\" : \"admin\"\n        }, {\n          \"name\" : \"DB_NAME\",\n          \"value\" : \"sample-db\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\" : \"halkyon.io/v1beta1\",\n    \"kind\" : \"Component\",\n    \"metadata\" : {\n      \"labels\" : {\n        \"app\" : \"fruit-backend-sb\"\n      },\n      \"name\" : \"fruit-backend-sb\"\n    },\n    \"spec\" : {\n      \"deploymentMode\" : \"build\",\n      \"runtime\" : \"spring-boot\",\n      \"version\" : \"2.1.6.RELEASE\",\n      \"exposeService\" : true,\n      \"buildConfig\" : {\n        \"type\" : \"s2i\",\n        \"url\" : \"https://github.com/halkyonio/operator.git\",\n        \"ref\" : \"master\",\n        \"contextPath\" : \"demo/\",\n        \"moduleDirName\" : \"fruit-backend-sb\"\n      },\n      \"port\" : 8080\n    }\n  },\n  {\n    \"apiVersion\" : \"halkyon.io/v1beta1\",\n    \"kind\" : \"Link\",\n    \"metadata\" : {\n      \"name\" : \"link-to-database\"\n    },\n    \"spec\" : {\n      \"componentName\" : \"fruit-backend-sb\",\n      \"kind\" : \"Secret\",\n      \"ref\" : \"postgres-db-config\"\n    }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "Developer Tools",
                    "certified": "false",
                    "containerImage": "quay.io/halkyonio/operator:v0.1.3",
                    "createdAt": "2019-08-21",
                    "description": "Halkyon: To get back to the halcyon days of local development in a modern kubernetes setting of microservices!",
                    "repository": "https://github.com/halkyonio/operator",
                    "support": "Halkyon community"
                  },
                  "description": "### Introduction\n\nDeploying modern micro-services applications that comply with the [12-factor](https://12factor.net/) guidelines to Kubernetes is difficult, mainly due to the host\nof different and complex Kubernetes Resources involved. In such scenarios developer experience becomes very important.\n\nThis projects aims to tackle said complexity and vastly **simplify** the process of deploying micro-service applications to Kubernetes and get back to\nthe halcyon days of local development! :sunglasses:\n\nBy providing several, easy-to-use Kubernetes [Custom Resources (CRs)](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/) and\nan [Operator](https://enterprisersproject.com/article/2019/2/kubernetes-operators-plain-english) to handle them, the Halkyon project provides the following features:\n- Install micro-services (`components` in Halkyon's parlance) utilizing `runtimes` such as Spring Boot, Vert.x, Thorntail, Quarkus or Nodejs, serving as base building blocks for your application\n- Manage the relations between the different components using `link` CR allowing one micro-service for example to consume a REST endpoint provided by another\n- Deploy various infrastructure services like a database which are bound to a `component` via the `capability` CR.\n\nThe Halkyon Operator requires `Kubernetes \u003e= 1.13` or `OpenShift \u003e= 3.11`.\n\n### Prerequisite\n\nIn order to use the Halkyon Operator and the CRs, it is mandatory to install [Tekton Pipelines](https://tekton.dev/) and [KubeDB](http://kubedb.com) Operators\nand their Custom Resources. Otherwise, it will fail to start or to be deployed from the Operatorhub UI screen of the console.\nSee [prerequisite](https://github.com/halkyonio/operator/blob/master/README.md#prerequisites) section of the Halkyon documentation.\n\n### How to use it\n\nDeploy the operator as defined within the [Operator Doc](https://github.com/halkyonio/operator#installing-the-halkyon-operator)\nor use the operator bundle promoted on [operatorhub.io](https://operatorhub.io/operator/halkyon).\n\nFirst create a namespace:\n```\nkubectl create ns demo\n```\nNext, create a component yml file with the following information within your maven java project:\n```\napiVersion: halkyon.io/v1beta1\nkind: Component\nmetadata:\n  name: spring-boot\nspec:\n  runtime: spring-boot\n  version: 2.1.6.RELEASE\n  deploymentMode: dev\n```\nDeploy it:\n```\nkubectl apply -n demo -f my-component.yml\n```\nVerify if the component has been deployed properly:\n```\nkubectl get components -n demo\nNAME          RUNTIME       VERSION           AGE     MODE   STATUS   MESSAGE   REVISION\nspring-boot   spring-boot   2.1.6.RELEASE   2m19s      dev   Ready\n```\n\nPackage your Java Application \"mvn package\" and push the uber java file.\n```\nkubectl cp target/my-component-1.0-SNAPSHOT.jar POD_NAME:/deployments/my-component-1.0-SNAPSHOT -n demo\n```\n\nStart your application within the pod\n```\nkubectl exec POD_NAME -n demo /var/lib/supervisord/bin/supervisord ctl start run-cmd\n```\n\nEnrich your application with additional `Component`, `Link` them or deploy a `Capability` database using the supported CRs for your different microservices.\n\nTo simplify your life even more when developing Java applications, add [Dekorate]( https://dekorate.io) to your project to automatically generate the YAML resources for your favorite runtime !\n\n### A Real demo\n\nTo play with a more [real-world example](https://github.com/halkyonio/operator/#key-concepts) and discover the different features currently supported, use the following [demo](https://github.com/halkyonio/operator/tree/master/demo)\nproject. So jump there to see in action how Halkyon enhances the Developer Experience on Kubernetes ;-)\n\n### More info\n\n[Custom Resources and their fields](https://github.com/halkyonio/api)\n\n[Project documentation - https://github.com/halkyonio/operator](https://github.com/halkyonio/operator#how-to-play-with-it)\n\n[Zulip Community](https://snowdrop.zulipchat.com/#narrow/stream/207165-halkyon)\n\nFollow us on [https://twitter.com/halkyonio](https://twitter.com/halkyonio)\n\n### Contributing\n\nIf you've got some great features, use cases for the Halkyon operator and project, open a ticket on [GitHub](https://github.com/halkyonio/operator/issues) !\n\n### License\n\nHalkyon is licensed under the [Apache License, Version 2.0](https://github.com/halkyonio/operator/blob/master/LICENSE) license.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "components.halkyon.io",
                        "version": "v1beta1",
                        "kind": "Component",
                        "displayName": "Component",
                        "description": "A component describing your microservice",
                        "specDescriptors": [
                          {
                            "path": "deploymentMode",
                            "displayName": "DeploymentMode",
                            "description": "How the application is deployed: dev or build mode",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "runtime",
                            "displayName": "Runtime",
                            "description": "The type of the runtime application installed: Spring Boot, Vert.x, Tornthail, NodeJS, Quarkus",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "The version of the runtime or its framework. Example. Spring Boot : 2.1.6.RELEASE",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Expose Service",
                            "description": "Allow to specify if the service should be exposed as Ingress or Openshift Route",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "capabilities.halkyon.io",
                        "version": "v1beta1",
                        "kind": "Capability",
                        "displayName": "Capability",
                        "description": "A capability or service to be deployed",
                        "specDescriptors": [
                          {
                            "path": "category",
                            "displayName": "Category",
                            "description": "The category of the capability to be installed: database, ...",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "type",
                            "displayName": "Type",
                            "description": "According to the `category`, this field represents by example the type of the database to be deployed. `PostgreSQL` is only supported for the moment.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "Identify the version of the `type` to be installed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "parameters",
                            "displayName": "Parameters",
                            "description": "List of name and value pairs used to create the secret of the service",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "links.halkyon.io",
                        "version": "v1beta1",
                        "kind": "Link",
                        "displayName": "Link",
                        "description": "To link the microservices or access secrets",
                        "specDescriptors": [
                          {
                            "path": "componentName",
                            "displayName": "Component Name",
                            "description": "Name of the target component/deployment to enrich with Env Variables",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "type",
                            "displayName": "Type",
                            "description": "The type of the resource to search for to create the env vars: Secret or Env",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "ref",
                            "displayName": "Type",
                            "description": "The reference of the secret to search for when the type selected is Secret",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "envs",
                            "displayName": "Envs",
                            "description": "List of env variables defined as name and value pairs",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "hazelcast-enterprise",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/hazelcast-enterprise",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Hazelcast, Inc",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Hazelcast, Inc"
            },
            "packageName": "hazelcast-enterprise",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "hazelcast-operator.v0.0.1",
                "currentCSVDesc": {
                  "displayName": "Hazelcast Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.0.1",
                  "provider": {
                    "name": "Hazelcast, Inc"
                  },
                  "annotations": {
                    "alm-examples": "[{\n \"apiVersion\": \"hazelcast.com/v1alpha1\",\n \"kind\": \"Hazelcast\",\n \"metadata\": {\n    \"name\": \"hz\"\n },\n \"spec\": {\n    \"image\": {\n      \"tag\": \"3.11.2\"\n    },\n    \"mancenter\": {\n      \"image\": {\n        \"tag\": \"3.11.3\"\n      }\n    },\n    \"hazelcast\": {\n      \"licenseKeySecretName\": \"hz-license-key-secret\"\n    },\n    \"serviceAccount\": {\n      \"create\": false,\n      \"name\": \"hazelcast\"\n    }\n }\n}]",
                    "capabilities": "Basic Install",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "hazelcast/hazelcast-enterprise-operator:0.0.1",
                    "createdAt": "2019-03-14 09:58:52",
                    "description": "Install Hazelcast Enterprise cluster.",
                    "repository": "https://github.com/hazelcast/hazelcast-operator",
                    "support": "Hazelcast, Inc"
                  },
                  "description": "Hazelcast IMDG Enterprise is the most widely used in-memory data grid with hundreds of thousands of installed clusters around the world. It offers caching solutions ensuring that data is in the right place when it’s needed for optimal performance.\n\n### Before Your Start\n\nAdd a Secret within the Project that contains the Hazelcast License Key. If you don't have one, get a trial key from this [link](https://hazelcast.com/hazelcast-enterprise-download/trial/).\n\n    $ kubectl create secret generic hz-license-key-secret --from-literal=key=LICENSE-KEY-HERE\n\n### Configuration\n\nFor the complete configuration options, please refer to the [Hazelcast Enterprise Helm Chart](https://github.com/hazelcast/charts/tree/master/stable/hazelcast-enterprise) description.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "hazelcasts.hazelcast.com",
                        "version": "v1alpha1",
                        "kind": "Hazelcast",
                        "displayName": "Hazelcast Enterprise",
                        "description": "Hazelcast Enterprise cluster.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "ibmcloud-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/ibmcloud-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "IBM",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "IBM"
            },
            "packageName": "ibmcloud-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "ibmcloud-operator.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "IBM Cloud Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "IBM"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\": \"ibmcloud.ibm.com/v1alpha1\", \"kind\": \"Service\", \"metadata\": {\"name\": \"mytranslator\"}, \"spec\": {\"serviceClass\": \"language-translator\", \"plan\": \"lite\"}}, {\"apiVersion\": \"ibmcloud.ibm.com/v1alpha1\", \"kind\": \"Binding\", \"metadata\": {\"name\": \"mytranslator-binding\"}, \"spec\": {\"serviceName\": \"mytranslator\"}}]",
                    "capabilities": "Basic Install",
                    "categories": "Cloud Provider",
                    "certified": "false",
                    "containerImage": "cloudoperators/ibmcloud-operator:0.1.0",
                    "createdAt": "2019-06-28T11:56:22Z",
                    "description": "The IBM Cloud Operator provides a Kubernetes CRD-Based API to manage the lifecycle of IBM public cloud services.",
                    "repository": "https://github.com/IBM/cloud-operators",
                    "support": "IBM"
                  },
                  "description": "The IBM Cloud Operator provides a simple Kubernetes CRD-Based API to provision and bind  IBM public cloud services on your Kubernetes cluster. With this operator,  you can simply provide service and binding custom resources as part of your Kubernetes  application templates and let the operator reconciliation logic ensure that the required  services and credentials are automatically created and available for your application.\nThe IBM Cloud Operator is currently in preview. It will get updated as we release new versions of the [upstream repository](https://github.com/IBM/cloud-operators).\n## Features\n* **Service Provisioning** - supports provisioning for any service and plan available in the IBM Cloud catalog.\n* **Bindings Management** - automatically creates secrets with the credentials to bind to any provisioned service.\n## Requirements\nThe operator can be installed on any OLM-enabled Kubernetes cluster with version \u003e= 1.11.  You need an [IBM Cloud account](https://cloud.ibm.com/registration) and the  [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started). You need also to have the [kubectl CLI](https://kubernetes.io/docs/tasks/tools/install-kubectl/)   already configured to access your cluster. Before installing the operator, you need to login to  your IBM cloud account with the IBM Cloud CLI:\n\n    ibmcloud login\n\nand set a default target environment for your resources with the command:\n\n    ibmcloud target --cf\n  \nyou can then configure the operator running the following script:\n\n    curl -sL https://raw.githubusercontent.com/IBM/cloud-operators/master/hack/config-operator.sh | bash \n\nThe script above creates an IBM Cloud API Key and stores it in a Kubernetes secret that can be accessed by the operator, and it sets defaults such as the resource group and region  used to provision IBM Cloud Services. You can always override the defaults in the `Service` custom resource. If you prefer to create the secret and the defaults manually, consult the [IBM Cloud Operator documentation](https://github.com/IBM/cloud-operators).\n## Using the IBM Cloud Operator\nYou can create an instance of an IBM public cloud service using the following custom resource:\n\n    apiVersion: ibmcloud.ibm.com/v1alpha1\n    kind: Service\n    metadata:\n      name: myservice\n    spec:\n      plan: \u003cPLAN\u003e\n      serviceClass: \u003cSERVICE_CLASS\u003e\n\nto find the value for `\u003cSERVICE_CLASS\u003e`, you can list the names of all IBM public cloud  services with the command:\n\n    ibmcloud catalog service-marketplace\n\nonce you find the `\u003cSERVICE_CLASS\u003e` name, you can list the available plans to select a `\u003cPLAN\u003e` with the command:\n\n    ibmcloud catalog service \u003cSERVICE_CLASS\u003e | grep plan\n\nAfter creating a service, you can find its status with:\n\n    kubectl get services.ibmcloud \n    NAME           STATUS   AGE\n    myservice      Online   12s\n\nYou can bind to a service with name `myservice` using the following custom resource:\n\n    apiVersion: ibmcloud.ibm.com/v1alpha1\n    kind: Binding\n    metadata:\n      name: mybinding\n    spec:\n      serviceName: myservice\n\nTo find the status of your binding, you can run the command:\n\n    kubectl get bindings.ibmcloud \n    NAME                 STATUS   AGE\n    mybinding            Online   25s\n\nA `Binding` generates a secret with the same name as the binding resource and  contains service credentials that can be consumed by your application.\n\n    kubectl get secrets\n    NAME                       TYPE                                  DATA   AGE\n    mybinding                  Opaque                                6      102s\n\nFor additional configuration options, samples and more information on using the operator, consult  the [IBM Cloud Operator documentation](https://github.com/IBM/cloud-operators).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "services.ibmcloud.ibm.com",
                        "version": "v1alpha1",
                        "kind": "Service",
                        "displayName": "Service",
                        "description": "Represents an instance of a Service resource on IBM Cloud.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Binding",
                            "version": "v1alpha1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1alpha1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "message",
                            "displayName": "Message",
                            "description": "Detailed message on current status",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "plan",
                            "displayName": "Plan",
                            "description": "Current plan for service",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "serviceClass",
                            "displayName": "Service Class",
                            "description": "Current service class",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "serviceClassType",
                            "displayName": "Service Class Type",
                            "description": "Indicates if IAM type or legacy",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "state",
                            "displayName": "State",
                            "description": "Current state for the service",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "context",
                            "displayName": "Context",
                            "description": "Current context for the service (resorce group, region, org, space)",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "instanceId",
                            "displayName": "Instance ID",
                            "description": "Instance ID for the service",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "serviceClass",
                            "displayName": "Service Class",
                            "description": "Service class is the name of the service from the IBM Cloud Catalog",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "plan",
                            "displayName": "Plan",
                            "description": "Plan for the service from the IBM Cloud Catalog",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "bindings.ibmcloud.ibm.com",
                        "version": "v1alpha1",
                        "kind": "Binding",
                        "displayName": "Binding",
                        "description": "Represents an instance of a service binding resource on IBM Cloud. A Binding creates a secret with the service instance credentials.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Binding",
                            "version": "v1alpha1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1alpha1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "message",
                            "displayName": "Message",
                            "description": "Detailed message on current status",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "state",
                            "displayName": "State",
                            "description": "Current state for the binding",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "serviceName",
                            "displayName": "Service Name",
                            "description": "Name of the service resource to bind",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "infinispan",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/infinispan",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Infinispan",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Infinispan"
            },
            "packageName": "infinispan",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "infinispan-operator.v0.3.2",
                "currentCSVDesc": {
                  "displayName": "infinispan",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.3.2",
                  "provider": {
                    "name": "Infinispan"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  }\n]\n",
                    "capabilities": "Basic Install",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "docker.io/jboss/infinispan-operator:0.3.2",
                    "createdAt": "2019-07-16 10:30:00",
                    "description": "Create and manage Infinispan clusters.",
                    "repository": "https://github.com/infinispan/infinispan-operator",
                    "support": "Infinispan",
                    "tectonic-visibility": "ocs"
                  },
                  "description": "Infinispan is a distributed, in-memory data store that increases application performance and delivers open-source capabilites to handle demanding use cases.\n\nThe Infinispan Operator provides operational intelligence to simplify deploying Infinispan on Kubernetes clusters.\n\n### Core Capabilities\n* **Schemaless data structure:** Store different objects as key-value pairs.\n* **Grid-based data storage:** Distribute and replicate data across clusters.\n* **Elastic scaling:** Dynamically adjust the number of nodes to meet demand without service disruption.\n* **Data interoperability:** Store, retrieve, and query data in the grid from different endpoints.\n* **High availability:** Always have access to data.\n\n### Infinispan Operator Features\n* HTTP endpoint at `8080`.\n* HotRod endpoint at `11222`.\n* Supports custom configuration for different use cases.\n\nThe default user for accessing data is `developer`.\nThe Infinispan Operator generates a password for the default user and stores it in a Secret on startup.\n\nEach Infinispan pod requests `0.5` CPUs and 512MiB of memory.\nYou can adjust resource allocation with the `.spec.container.cpu` and `.spec.container.memory` fields.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "infinispans.infinispan.org",
                        "version": "v1",
                        "kind": "Infinispan",
                        "displayName": "Infinispan",
                        "description": "An Infinispan cluster instance.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "replicas",
                            "displayName": "Replicas",
                            "description": "Sets the number of nodes in the cluster."
                          },
                          {
                            "path": "image",
                            "displayName": "Image",
                            "description": "Sets an image to bootstrap the Infinispan nodes."
                          },
                          {
                            "path": "container.cpu",
                            "displayName": "CPU",
                            "description": "Sets the CPU limits for each Infinispan node."
                          },
                          {
                            "path": "container.memory",
                            "displayName": "Memory",
                            "description": "Sets the memory limits for each Infinispan node."
                          },
                          {
                            "path": "container.jvmOptionsAppend",
                            "displayName": "Extra JVM Options",
                            "description": "Appends JVM options to each Infinispan node."
                          },
                          {
                            "path": "connector.authentication.type",
                            "displayName": "Connector Authentication Type",
                            "description": "Specifies the Connector authentication method, either `Credentials` or `Keystore`."
                          },
                          {
                            "path": "connector.authentication.secretName",
                            "displayName": "Connector Authentication Secret Name",
                            "description": "Specifies the name of the Connector authentication secret."
                          },
                          {
                            "path": "management.authentication.type",
                            "displayName": "Management Authentication Type",
                            "description": "Specifies the Management authentication method, either `Credentials` or `Keystore`."
                          },
                          {
                            "path": "management.authentication.secretName",
                            "displayName": "Management Authentication Secret Name",
                            "description": "Specifies the name of the Management authentication secret."
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "instana-agent",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/instana-agent",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Instana",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Instana"
            },
            "packageName": "instana-agent",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "instana-agent-operator.v0.0.5",
                "currentCSVDesc": {
                  "displayName": "Instana Agent Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.0.5",
                  "provider": {
                    "name": "Instana"
                  },
                  "annotations": {
                    "alm-examples": "[{\n \"apiVersion\": \"instana.io/v1alpha1\",\n \"kind\": \"InstanaAgent\",\n \"metadata\": {\n    \"name\": \"instana-agent\",\n    \"namespace\": \"instana-agent\"\n },\n \"spec\": {\n    \"agent.zone.name\": \"my-k8s-cluster\",\n    \"agent.key\": \"_PUT_YOUR_AGENT_KEY_HERE_\",\n    \"agent.endpoint.host\": \"saas-us-west-2.instana.io\",\n    \"agent.endpoint.port\": 443,\n    \"config.files\": {\n      \"configuration.yaml\": \"# See https://docs.instana.io/quick_start/agent_setup/container/kubernetes/\"\n    }\n }\n}]",
                    "capabilities": "Basic Install",
                    "categories": "Monitoring,OpenShift Optional",
                    "certified": "false",
                    "containerImage": "instana/instana-agent-operator:0.0.5",
                    "createdAt": "2019-04-23 14:17:43",
                    "description": "Fully automated Application Performance Monitoring (APM) for microservices.",
                    "repository": "https://github.com/instana/instana-agent-operator",
                    "support": "Instana"
                  },
                  "description": "# Kubernetes Operator for the Instana APM Agent\n\nInstana is a fully automated Application Performance Monitoring (APM) tool for microservices.\n\nThis is the Kubernetes Operator for installing the [Instana APM Agent](https://www.instana.com) on Kubernetes or OpenShift.\n\n## Configuration and Installation\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1alpha1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: '{{ (optional) name of the zone of the host }}'\n  agent.key: '{{ put your Instana agent key here }}'\n  agent.endpoint.host: '{{ the monitoring ingress endpoint }}'\n  agent.endpoint.port: '{{ the monitoring ingress endpoint port, wrapped in quotes }}'\nconfig.files:\n  configuration.yaml: |\n    # You can leave this empty, or use this to configure your instana agent.\n    # See https://docs.instana.io/quick_start/agent_setup/container/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation here: [https://docs.instana.io/quick_start/agent_setup/container/kubernetes/](https://docs.instana.io/quick_start/agent_setup/container/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "agents.instana.io",
                        "version": "v1alpha1",
                        "kind": "InstanaAgent",
                        "displayName": "Instana Agent",
                        "description": "Instana Agent",
                        "statusDescriptors": [
                          {
                            "path": "agent.zone.name",
                            "displayName": "zone",
                            "description": "Name of the Kubernetes Cluster"
                          },
                          {
                            "path": "agent.key",
                            "displayName": "key",
                            "description": "Your Instana API key"
                          },
                          {
                            "path": "agent.endpoint.host",
                            "displayName": "endpoint.host",
                            "description": "Endpoint hostname the Instana agent should connect to. Might be adjusted depending on your deployment type (SaaS or On-Premises) and region."
                          },
                          {
                            "path": "agent.endpoint.port",
                            "displayName": "endpoint.port",
                            "description": "Endpoint port the Instana agent should connect to. Might be adjusted depending on your deployment type (SaaS or On-Premises) and region."
                          },
                          {
                            "path": "config.files.configuration.yaml",
                            "displayName": "configuration.yaml",
                            "description": "configuration.yaml file that will be copied into the Instana agent instances."
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "iot-simulator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/iot-simulator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Jens Reimann",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Jens Reimann"
            },
            "packageName": "iot-simulator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "iot-simulator.0.1.0",
                "currentCSVDesc": {
                  "displayName": "IoT simulator",
                  "icon": [
                    {
                      "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+PCFET0NUWVBFIHN2ZyBQVUJMSUMgIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkIj48c3ZnIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIHZpZXdCb3g9IjAgMCAyNDgxIDM1MDgiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgeG1sbnM6c2VyaWY9Imh0dHA6Ly93d3cuc2VyaWYuY29tLyIgc3R5bGU9ImZpbGwtcnVsZTpldmVub2RkO2NsaXAtcnVsZTpldmVub2RkO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDoxLjQxNDIxOyI+PHBhdGggZD0iTTEyMTUuMjYsMTc0Ny4xM2w4MjcuNjQ4LC04MjcuNjQ4YzY5LC02OSAxODEuMDM4LC02OSAyNTAuMDM4LDBsNDcuNjI2LDQ3LjYyNmM2OC45OTksNjguOTk5IDY4Ljk5OSwxODEuMDM3IDAsMjUwLjAzN2wtOTk0LjczNyw5OTQuNzM3Yy01OS42NjgsNTkuNjY4IC0xNTEuNTIsNjcuNzM3IC0yMTkuODkyLDI0LjIwNmMtMTkuNTg5LC04LjU3OSAtMzcuOTM0LC0yMC44ODIgLTUzLjk1OCwtMzYuOTA2bC01MDIuOTI1LC01MDIuOTI1Yy02OSwtNjkgLTY5LC0xODEuMDM3IDAsLTI1MC4wMzdsNDcuNjI2LC00Ny42MjZjNjguOTk5LC02OSAxODEuMDM3LC02OSAyNTAuMDM3LDBsMzQ4LjUzNywzNDguNTM2WiIgc3R5bGU9ImZpbGw6dXJsKCNfTGluZWFyMSk7Ii8+PHBhdGggZD0iTTIzMzIuNTksMTM4My42N2M3NS41NTksMjI1LjI2MyA4My4yNTIsNDc0LjMxOSAxNC4wMTcsNzA0LjI0MWMtOTguMzA3LDMyNi40NyAtMzQ4LjM3Miw2MDIuNjU1IC02NjIuOTczLDczMy41MzNjLTM0NS4yMDYsMTQzLjYxIC03NjAuODk1LDEwNi40NDQgLTEwNzYuNzcsLTEwMS41MjljLTMxNS4xNjUsLTIwNy41MDUgLTUxOS41MDMsLTU3My44MzQgLTUyMC43MzMsLTk2MS4yODhjLTEuMTk2LC0zNzcuMDMzIDE5NC4wNTYsLTc0OS40NjUgNTEyLjA1LC05NjIuOTY3YzE4Mi40NjYsLTEyMi41MDggNDAxLjQ4NywtMTkxLjA0MyA2MjAuMjg2LC0xOTUuMjEzYzguNjgsLTAuMTY1IDE3LjM2LC0wLjIxOCAyNi4wNTMsLTAuMjA3YzI1NC4yNTgsMS4zMDMgNTA3LjYxNCw5MS4zMTkgNzEwLjI4MiwyNDkuMjdjLTQ3LjIzMyw0Ni45OTIgLTk0LjQxOSw5NC4wMzEgLTE0MS41NjksMTQxLjEwM2MtNTUuODQ1LC00Mi41OTkgLTExNi43MjIsLTc5LjE5NiAtMTgxLjg5OSwtMTA4LjQ0N2MtMTIxLjIwNSwtNTQuMzk0IC0yNTQuMDU1LC04Mi41NyAtMzg3LjQ1LC04My4yNTRsLTYuMTg3LDBjLTM0Ny41NDcsMS43ODIgLTY4NC41MTEsMjAzLjc4OSAtODQ2Ljk4NCw1MTguNDUzYy0xMzQuMjMyLDI1OS45NjkgLTE0MC41NTMsNTgyLjMyNiAtMTIuODk2LDg0OS4xMzRjMTI4LjEyOSwyNjcuNzk1IDM4Ni44NTQsNDY5LjY5OCA2NzkuMDk0LDUyNi43MWMyOTkuMzA5LDU4LjM5MiA2MjMuNzQ3LC0zNS43ODIgODQ1LjM2LC0yNDguNGMxODUuMDQ5LC0xNzcuNTM3IDI5NC41MTIsLTQzMS40MjMgMjk0LjUxMiwtNjg5LjkwOWMwLC03MC44MzMgLTguNDc4LC0xNDEuMzU1IC0yNC42NTgsLTIxMC4xMzZjNTMuNTE4LC01My42NjkgMTA3LjAwOCwtMTA3LjM2NiAxNjAuNDY3LC0xNjEuMDk0WiIgc3R5bGU9ImZpbGw6dXJsKCNfUmFkaWFsMik7ZmlsbC1ydWxlOm5vbnplcm87Ii8+PGRlZnM+PGxpbmVhckdyYWRpZW50IGlkPSJfTGluZWFyMSIgeDE9IjAiIHkxPSIwIiB4Mj0iMSIgeTI9IjAiIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDE4NzUuMDEsMCwwLDEzOTUuOSw1MTcuMzA3LDE1NjUuNjgpIj48c3RvcCBvZmZzZXQ9IjAiIHN0eWxlPSJzdG9wLWNvbG9yOiNjM2RiOWE7c3RvcC1vcGFjaXR5OjEiLz48c3RvcCBvZmZzZXQ9IjEiIHN0eWxlPSJzdG9wLWNvbG9yOiMxN2E3Mzc7c3RvcC1vcGFjaXR5OjEiLz48L2xpbmVhckdyYWRpZW50PjxyYWRpYWxHcmFkaWVudCBpZD0iX1JhZGlhbDIiIGN4PSIwIiBjeT0iMCIgcj0iMSIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMjMwOC4wOCwwLDAsMjMwNy40LDg2LjExODksMTc1My45NCkiPjxzdG9wIG9mZnNldD0iMCIgc3R5bGU9InN0b3AtY29sb3I6IzlkOWM5YztzdG9wLW9wYWNpdHk6MSIvPjxzdG9wIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6I2Q4ZDhkODtzdG9wLW9wYWNpdHk6MSIvPjwvcmFkaWFsR3JhZGllbnQ+PC9kZWZzPjwvc3ZnPg==",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "Jens Reimann"
                  },
                  "annotations": {
                    "alm-examples": "[{\n    \"apiVersion\": \"iot.dentrassi.de/v1alpha1\",\n    \"kind\": \"Simulator\",\n    \"metadata\": {\n      \"name\": \"hono1\",\n        \"namespace\": \"iot-simulator\"\n    },\n    \"spec\": {\n        \"endpoint\": {\n            \"messaging\": {\n                \"user\": \"foo\",\n                \"password\": \"bar\",\n                \"host\": \"messaging.host.hono.svc\",\n                \"port\": 5671,\n                \"caCertificate\": \"\"\n            },\n            \"registry\": {\n                \"url\": \"https://your-device-registry\"\n            },\n            \"adapters\": {\n                \"mqtt\": {\n                    \"host\": \"mqtt-adapter.hono.svc\",\n                    \"port\": 8883\n                },\n                \"http\": {\n                    \"url\": \"https://http-adapter.hono.svc\"\n                }\n            }\n        }\n    }\n},\n{\n  \"apiVersion\": \"iot.dentrassi.de/v1alpha1\",\n  \"kind\": \"SimulatorConsumer\",\n  \"metadata\": {\n    \"name\": \"consumer1\",\n    \"namespace\": \"iot-simulator\"\n  },\n  \"spec\": {\n    \"simulator\": \"hono1\",\n    \"tenant\": \"myapp1.iot\",\n    \"type\": \"telemetry\",\n    \"replicas\": 1\n  }\n},\n{\n  \"apiVersion\": \"iot.dentrassi.de/v1alpha1\",\n  \"kind\": \"SimulatorProducer\",\n  \"metadata\": {\n    \"name\": \"producer1\",\n    \"namespace\": \"iot-simulator\"\n  },\n  \"spec\": {\n    \"simulator\": \"hono1\",\n    \"tenant\": \"myapp1.iot\",\n    \"type\": \"telemetry\",\n    \"protocol\": \"http\",\n    \"replicas\": 1,\n    \"numberOfDevices\": 10\n  }\n}\n]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Streaming \u0026 Messaging",
                    "certified": "false",
                    "containerImage": "ctron/iot-simulator-operator:0.1",
                    "createdAt": "2019-03-19 00:00:00",
                    "description": "An IoT device simulator, simulating producers and consumers using the Eclipse Hono API",
                    "repository": "https://github.com/ctron/iot-simulator-operator",
                    "support": "none"
                  },
                  "description": "A scalable IoT simulator, which simulates producers (MQTT or HTTP) and consumers.\n\n## Pre-requisites\n\nYou will need to have access to a Hono instance, including the messaging backend\nand the HTTP endpoint of the device registry.\n\nAs metrics information is stored in a Prometheus instance, this operator also\nrequires the Prometheus operator to be installed.\n\n## Creating an instance\n\nOnce you have the operator deployed, you need to set up at least one `Simulator` resource.\nThis will trigger the creation of the web console and deploy a Prometheus instance for\ngathering metrics. The `Simulator` instance also contains the endpoint information for the\nHono instance.\n\n## Producers \u0026 Consumer\n\nAfter a `Simulator` instance has been created, you can create `SimulatorProducer` and\n`SimulatorConsumer` instances as necessary. You will need to reference the `Simulator`\ninstance.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "simulators.iot.dentrassi.de",
                        "version": "v1alpha1",
                        "kind": "Simulator",
                        "displayName": "Simulator",
                        "description": "A new simulator instance",
                        "resources": [
                          {
                            "name": "",
                            "kind": "DeploymentConfig",
                            "version": "apps.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "BuildConfig",
                            "version": "build.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "Route",
                            "version": "route.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "ImageStream",
                            "version": "imagestream.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "apps/v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "apps/v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "endpoint.messaging.user",
                            "displayName": "Messaging Endpoint User",
                            "description": "The name of the user for the AMQP messaging endpoint",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "endpoint.messaging.password",
                            "displayName": "Messaging Endpoint Password",
                            "description": "The password of the user for the AMQP messaging endpoint",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "endpoint.messaging.caCertificate",
                            "displayName": "Messaging Endpoint CA Certificate",
                            "description": "A CA certificate to validate the AMQP messaging endpoint",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "endpoint.messaging.host",
                            "displayName": "Messaging Endpoint Host",
                            "description": "The hostname of the AMQP messaging endpoint",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "endpoint.messaging.port",
                            "displayName": "Messaging Endpoint Port",
                            "description": "The port of the AMQP messaging endpoint",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "endpoint.registry.url",
                            "displayName": "Device Registry URL",
                            "description": "The URL of the device registry instance",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "endpoint.adapters.mqtt.host",
                            "displayName": "MQTT Protocol Adapter Hostname",
                            "description": "The hostname of the MQTT protocol adapter",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "endpoint.adapters.mqtt.port",
                            "displayName": "MQTT Protocol Adapter Port",
                            "description": "The port of the MQTT protocol adapter",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "endpoint.adapters.http.url",
                            "displayName": "HTTP Protocol Adapter URL",
                            "description": "The URL of the HTTP protocol adapter",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "simulatorconsumers.iot.dentrassi.de",
                        "version": "v1alpha1",
                        "kind": "SimulatorConsumer",
                        "displayName": "Simulator Consumer",
                        "description": "A new consumer for an existing simulator instance",
                        "resources": [
                          {
                            "name": "",
                            "kind": "DeploymentConfig",
                            "version": "apps.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "apps/v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "simulator",
                            "displayName": "Simulator ID",
                            "description": "The ID of the simulator instance",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:iot.dentrassi.de:v1alpha1:Simulator"
                            ]
                          },
                          {
                            "path": "tenant",
                            "displayName": "Tenant Name",
                            "description": "The name of the Hono tenant",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "type",
                            "displayName": "Message Type",
                            "description": "The type of messages being consumed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "replicas",
                            "displayName": "Replicas",
                            "description": "The number of replicas",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "simulatorproducers.iot.dentrassi.de",
                        "version": "v1alpha1",
                        "kind": "SimulatorProducer",
                        "displayName": "Simulator Producer",
                        "description": "A new producer for an existing simulator instance",
                        "resources": [
                          {
                            "name": "",
                            "kind": "DeploymentConfig",
                            "version": "apps.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "apps/v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "simulator",
                            "displayName": "Simulator ID",
                            "description": "The ID of the simulator instance",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:iot.dentrassi.de:v1alpha1:Simulator"
                            ]
                          },
                          {
                            "path": "tenant",
                            "displayName": "Tenant Name",
                            "description": "The name of the Hono tenant",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "type",
                            "displayName": "Message Type",
                            "description": "The type of messages being produces",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "replicas",
                            "displayName": "Replicas",
                            "description": "The number of replicas",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "protocol",
                            "displayName": "Protocol Type",
                            "description": "The type of the protocol",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "numberOfDevices",
                            "displayName": "Number of devices per pod",
                            "description": "The number of devices simulated per pod",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      }
                    ],
                    "required": [
                      {
                        "name": "prometheuses.monitoring.coreos.com",
                        "version": "v1",
                        "kind": "Prometheus",
                        "displayName": "Prometheus",
                        "description": "A prometheus instance"
                      },
                      {
                        "name": "servicemonitors.monitoring.coreos.com",
                        "version": "v1",
                        "kind": "ServiceMonitor",
                        "displayName": "ServiceMonitor",
                        "description": "A prometheus service monitor"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "istio",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/istio",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Banzai Cloud",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Banzai Cloud"
            },
            "packageName": "istio",
            "channels": [
              {
                "name": "beta",
                "currentCSV": "istio-operator.0.1.6",
                "currentCSVDesc": {
                  "displayName": "Istio",
                  "icon": [
                    {
                      "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHN2ZyB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDMyMCAzMjAiPgogIDxnIGlkPSJsb2dvIiBmaWxsPSIjZmZmIj4KICAgIDxyZWN0IGlkPSJiYWNrZ3JvdW5kIiBmaWxsPSIjNDY2QkIwIiB3aWR0aD0iMzIwIiBoZWlnaHQ9IjMyMCIgLz4KICAgIDxwb2x5Z29uIGlkPSJodWxsIiBwb2ludHM9IjgwIDI1MCAyNDAgMjUwIDE0MCAyODAgODAgMjUwIi8+CiAgICA8cG9seWdvbiBpZD0ibWFpbnNhaWwiIHBvaW50cz0iODAgMjQwIDE0MCAyMzAgMTQwIDEyMCA4MCAyNDAiLz4KICAgIDxwb2x5Z29uIGlkPSJoZWFkc2FpbCIgcG9pbnRzPSIxNTAgMjMwIDI0MCAyNDAgMTUwIDQwIDE1MCAyMzAiLz4KICA8L2c+Cjwvc3ZnPgo=",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.1.6",
                  "provider": {
                    "name": "Banzai Cloud"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n      \"apiVersion\": \"istio.banzaicloud.io/v1beta1\",\n      \"kind\": \"Istio\",\n      \"metadata\": {\n          \"name\": \"istio-sample\"\n      },\n      \"spec\": {\n          \"autoInjectionNamespaces\": [\n              \"default\"\n          ],\n          \"citadel\": {\n              \"image\": \"docker.io/istio/citadel:1.1.2\",\n              \"replicaCount\": 1\n          },\n          \"defaultPodDisruptionBudget\": {\n              \"enabled\": true\n          },\n          \"galley\": {\n              \"image\": \"docker.io/istio/galley:1.1.2\",\n              \"replicaCount\": 1\n          },\n          \"gateways\": {\n              \"egress\": {\n                  \"maxReplicas\": 5,\n                  \"minReplicas\": 1,\n                  \"replicaCount\": 1,\n                  \"sds\": {\n                      \"image\": \"node-agent-k8s\"\n                  }\n              },\n              \"ingress\": {\n                  \"maxReplicas\": 5,\n                  \"minReplicas\": 1,\n                  \"replicaCount\": 1,\n                  \"sds\": {\n                      \"image\": \"node-agent-k8s\"\n                  }\n              },\n              \"k8singress\": {}\n          },\n          \"imageHub\": \"docker.io/istio\",\n          \"imageTag\": \"1.1.0\",\n          \"includeIPRanges\": \"*\",\n          \"mixer\": {\n              \"image\": \"docker.io/istio/mixer:1.1.2\",\n              \"maxReplicas\": 5,\n              \"minReplicas\": 1,\n              \"replicaCount\": 1\n          },\n          \"mtls\": false,\n          \"nodeAgent\": {\n              \"image\": \"docker.io/istio/node-agent-k8s:1.1.2\"\n          },\n          \"outboundTrafficPolicy\": {\n              \"mode\": \"ALLOW_ANY\"\n          },\n          \"pilot\": {\n              \"image\": \"docker.io/istio/pilot:1.1.2\",\n              \"maxReplicas\": 5,\n              \"minReplicas\": 1,\n              \"replicaCount\": 1,\n              \"traceSampling\": 1\n          },\n          \"proxy\": {\n              \"image\": \"docker.io/istio/proxyv2:1.1.2\"\n          },\n          \"proxyInit\": {\n              \"image\": \"docker.io/istio/proxy_init:1.1.2\"\n          },\n          \"sds\": {},\n          \"sidecarInjector\": {\n              \"image\": \"docker.io/istio/sidecar_injector:1.1.2\",\n              \"replicaCount\": 1,\n              \"rewriteAppHTTPProbe\": true\n          },\n          \"tracing\": {\n              \"zipkin\": {\n                  \"address\": \"zipkin.istio-system:9411\"\n              }\n          },\n          \"version\": \"1.1.2\"\n      }\n  },\n  {\n      \"apiVersion\": \"istio.banzaicloud.io/v1beta1\",\n      \"kind\": \"RemoteIstio\",\n      \"metadata\": {\n          \"name\": \"remoteistio-sample\"\n      },\n      \"spec\": {\n          \"autoInjectionNamespaces\": [\n              \"default\"\n          ],\n          \"citadel\": {\n              \"enabled\": true,\n              \"replicaCount\": 1\n          },\n          \"enabledServices\": [\n              {\n                  \"labelSelector\": \"istio=pilot\",\n                  \"name\": \"istio-pilot\"\n              },\n              {\n                  \"labelSelector\": \"istio-mixer-type=policy\",\n                  \"name\": \"istio-policy\"\n              },\n              {\n                  \"labelSelector\": \"statsd-prom-bridge\",\n                  \"name\": \"istio-statsd\"\n              },\n              {\n                  \"labelSelector\": \"istio-mixer-type=telemetry\",\n                  \"name\": \"istio-telemetry\"\n              },\n              {\n                  \"labelSelector\": \"app=jaeger\",\n                  \"name\": \"zipkin\"\n              }\n          ],\n          \"includeIPRanges\": \"*\",\n          \"proxy\": {},\n          \"proxyInit\": {},\n          \"sidecarInjector\": {\n              \"enabled\": true,\n              \"initCNIConfiguration\": {},\n              \"replicaCount\": 1\n          }\n      }\n  }\n]\n",
                    "capabilities": "Full Lifecycle",
                    "categories": "Monitoring, Logging \u0026 Tracing, Security",
                    "certified": "false",
                    "containerImage": "banzaicloud/istio-operator:0.1.6",
                    "createdAt": "2019-04-01T08:00:00Z",
                    "description": "Installs and maintain Istio service mesh",
                    "repository": "https://github.com/banzaicloud/istio-operator/tree/release-1.1",
                    "support": "Banzai Cloud"
                  },
                  "description": "Istio-operator is a Kubernetes operator to deploy and manage [Istio](https://istio.io/) resources for a Kubernetes cluster.\n\n## Overview\n\n[Istio](https://istio.io/) is an open platform to connect, manage, and secure microservices and it is emerging as the `standard` for building service meshes on Kubernetes. It is built out on multiple components and a rather complex deployment scheme (around 14 Helm subcharts and 50+ CRDs). Installing, upgrading and operating these components requires deep understanding of Istio and Helm (the standard/supported way of deploying [Istio](https://istio.io/)).\n\nThe goal of the **Istio-operator** is to automate and simplify these and enable popular service mesh use cases (multi cluster federation, canary releases, resource reconciliation, etc) by introducing easy higher level abstractions.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "istios.istio.banzaicloud.io",
                        "version": "v1beta1",
                        "kind": "Istio",
                        "displayName": "Istio service mesh",
                        "description": "Represents an Istio service mesh"
                      },
                      {
                        "name": "remoteistios.istio.banzaicloud.io",
                        "version": "v1beta1",
                        "kind": "RemoteIstio",
                        "displayName": "Remote member cluster",
                        "description": "Represents a Remote Cluster of an Istio service mesh"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "beta"
          }
        },
        {
          "metadata": {
            "name": "jaeger",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/jaeger",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "CNCF",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "CNCF"
            },
            "packageName": "jaeger",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "jaeger-operator.v1.13.1",
                "currentCSVDesc": {
                  "displayName": "Community Jaeger Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "1.13.1",
                  "provider": {
                    "name": "CNCF"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"jaegertracing.io/v1\",\n    \"kind\": \"Jaeger\",\n    \"metadata\": {\n      \"name\": \"my-jaeger\"\n    },\n    \"spec\": {\n      \"strategy\": \"allInOne\",\n      \"allInOne\": {\n        \"image\": \"jaegertracing/all-in-one:1.13\",\n        \"options\": {\n          \"log-level\": \"debug\",\n          \"query\": {\n            \"base-path\": \"/jaeger\"\n          }\n        }\n      },\n      \"ui\": {\n        \"options\": {\n          \"dependencies\": {\n            \"menuEnabled\": false\n          },\n          \"tracking\": {\n            \"gaID\": \"UA-000000-2\"\n          },\n          \"menu\": [\n            {\n              \"label\": \"About Jaeger\",\n              \"items\": [\n                {\n                  \"label\": \"Documentation\",\n                  \"url\": \"https://www.jaegertracing.io/docs/latest\"\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"storage\": {\n        \"options\": {\n          \"memory\": {\n            \"max-traces\": 100000\n          }\n        }\n      }\n    }\n  }\n]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Logging \u0026 Tracing",
                    "certified": "false",
                    "containerImage": "docker.io/jaegertracing/jaeger-operator:1.13.1",
                    "createdAt": "2019-07-05T11:16:15+00:00",
                    "description": "Provides tracing, monitoring and troubleshooting microservices-based distributed systems",
                    "repository": "https://github.com/jaegertracing/jaeger-operator",
                    "support": "Jaeger"
                  },
                  "description": "Jaeger, inspired by [Dapper](https://research.google.com/pubs/pub36356.html) and [OpenZipkin](http://zipkin.io/), is a distributed tracing system released as open source by Uber Technologies. It is used for monitoring and troubleshooting microservices-based distributed systems.\n\n### Core capabilities\n\nJaeger is used for monitoring and troubleshooting microservices-based distributed systems, including:\n\n* Distributed context propagation\n* Distributed transaction monitoring\n* Root cause analysis\n* Service dependency analysis\n* Performance / latency optimization\n* OpenTracing compatible data model\n* Multiple storage backends: Cassandra, Elasticsearch, memory.\n\n### Operator features\n\n* **Multiple modes** - Supports `allInOne`, `production`, and `streaming` [modes of deployment](https://github.com/jaegertracing/jaeger-operator#strategies).\n\n* **Configuration** - Directly pass down all supported Jaeger configuration through the Operator.\n\n* **Storage** - Configure storage used by Jaeger. By default, `memory` is used. Other options include `elasticsearch` or `cassandra`. On OpenShift, the operator can delegate creation of an Elasticsearch cluster to the Elasticsearch Operator if deployed.\n\n* **Agent** - can be deployed as sidecar and/or daemonset.\n\n* **UI** - Optionally setup ingress (Kubernetes) or secure route (OpenShift) to provide [access to the Jaeger UI](https://github.com/jaegertracing/jaeger-operator#accessing-the-ui).\n\n### Before you start\n\n1. Ensure that the appropriate storage solution, that will be used by the Jaeger instance, is available and configured.\n2. If intending to deploy an Elasticsearch cluster via the Jaeger custom resource, then the Elasticsearch Operator must first be installed.\n\n### Troubleshooting\n\n* https://www.jaegertracing.io/docs/latest/troubleshooting/\n\n### Example Configuration\n\nA more complex Jaeger instance taken from the [documentation](https://github.com/jaegertracing/jaeger-operator#creating-a-new-jaeger-instance):\n\n    apiVersion: jaegertracing.io/v1\n    kind: Jaeger\n    metadata:\n      name: my-jaeger\n    spec:\n      strategy: allInOne\n      allInOne:\n        image: jaegertracing/all-in-one:latest\n        options:\n          log-level: debug\n      storage:\n        type: memory\n        options:\n          memory:\n            max-traces: 100000\n      ingress:\n        enabled: false\n      agent:\n        strategy: DaemonSet\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "jaegers.jaegertracing.io",
                        "version": "v1",
                        "kind": "Jaeger",
                        "displayName": "Jaeger",
                        "description": "A configuration file for a Jaeger custom resource."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "kiali",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/kiali",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Kiali",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Kiali"
            },
            "packageName": "kiali",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "kiali-operator.v1.3.1",
                "currentCSVDesc": {
                  "displayName": "Kiali Operator",
                  "icon": [
                    {
                      "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCAxMjgwIDEyODAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDEyODAgMTI4MDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOiMwMTMxNDQ7fQoJLnN0MXtmaWxsOiMwMDkzREQ7fQo8L3N0eWxlPgo8Zz4KCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik04MTAuOSwxODAuOWMtMjUzLjYsMC00NTkuMSwyMDUuNS00NTkuMSw0NTkuMXMyMDUuNSw0NTkuMSw0NTkuMSw0NTkuMVMxMjcwLDg5My42LDEyNzAsNjQwCgkJUzEwNjQuNSwxODAuOSw4MTAuOSwxODAuOXogTTgxMC45LDEwMjkuMmMtMjE1LDAtMzg5LjItMTc0LjMtMzg5LjItMzg5LjJjMC0yMTUsMTc0LjMtMzg5LjIsMzg5LjItMzg5LjJTMTIwMC4xLDQyNSwxMjAwLjEsNjQwCgkJUzEwMjUuOSwxMDI5LjIsODEwLjksMTAyOS4yeiIvPgoJPHBhdGggY2xhc3M9InN0MSIgZD0iTTY1My4zLDI4NGMtMTM2LjQsNjAuNS0yMzEuNiwxOTcuMS0yMzEuNiwzNTZjMCwxNTguOCw5NS4yLDI5NS41LDIzMS42LDM1NmM5OC40LTg3LjEsMTYwLjQtMjE0LjMsMTYwLjQtMzU2CgkJQzgxMy43LDQ5OC4zLDc1MS42LDM3MS4xLDY1My4zLDI4NHoiLz4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0zNTEuOCw2NDBjMC0xMDkuOCwzOC42LTIxMC41LDEwMi44LTI4OS41Yy0zOS42LTE4LjItODMuNi0yOC4zLTEzMC0yOC4zQzE1MC45LDMyMi4yLDEwLDQ2NC41LDEwLDY0MAoJCXMxNDAuOSwzMTcuOCwzMTQuNiwzMTcuOGM0Ni4zLDAsOTAuNC0xMC4xLDEzMC0yOC4zQzM5MC4zLDg1MC41LDM1MS44LDc0OS44LDM1MS44LDY0MHoiLz4KPC9nPgo8L3N2Zz4K",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "1.3.1",
                  "provider": {
                    "name": "Kiali"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"kiali.io/v1alpha1\",\n    \"kind\": \"Kiali\",\n    \"metadata\": {\n      \"name\": \"kiali\"\n    },\n    \"spec\": {\n      \"installation_tag\": \"My Kiali\",\n      \"istio_namespace\": \"istio-system\",\n      \"deployment\": {\n        \"namespace\": \"default\",\n        \"verbose_mode\": \"4\",\n        \"view_only_mode\": false\n      },\n      \"external_services\": {\n        \"grafana\": {\n          \"url\": \"\"\n        },\n        \"prometheus\": {\n          \"url\": \"\"\n        },\n        \"tracing\": {\n          \"url\": \"\"\n        }\n      },\n      \"server\": {\n        \"web_root\": \"/mykiali\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"monitoring.kiali.io/v1alpha1\",\n    \"kind\": \"MonitoringDashboard\",\n    \"metadata\": {\n      \"name\": \"myappdashboard\"\n    },\n    \"spec\": {\n      \"title\": \"My App Dashboard\",\n      \"items\": [\n        {\n          \"chart\": {\n            \"name\": \"My App Processing Duration\",\n            \"unit\": \"seconds\",\n            \"spans\": 6,\n            \"metricName\": \"my_app_duration_seconds\",\n            \"dataType\": \"histogram\",\n            \"aggregations\": [\n              {\n                \"label\": \"id\",\n                \"displayName\": \"ID\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "Monitoring,Logging \u0026 Tracing",
                    "certified": "false",
                    "containerImage": "quay.io/kiali/kiali-operator:v1.3.1",
                    "createdAt": "2019-08-12 00:00:00",
                    "description": "Kiali project provides answers to the questions: What microservices are part of my Istio service mesh and how are they connected?",
                    "repository": "https://github.com/kiali/kiali",
                    "support": "Kiali"
                  },
                  "description": "A Microservice Architecture breaks up the monolith into many smaller pieces that are composed together. Patterns to secure the communication between services like fault tolerance (via timeout, retry, circuit breaking, etc.) have come up as well as distributed tracing to be able to see where calls are going.\n\nA service mesh can now provide these services on a platform level and frees the application writers from those tasks. Routing decisions are done at the mesh level.\n\nKiali works with Istio, in OpenShift or Kubernetes, to visualize the service mesh topology, to provide visibility into features like circuit breakers, request rates and more. It offers insights about the mesh components at different levels, from abstract Applications to Services and Workloads.\n\nSee [https://www.kiali.io](https://www.kiali.io) to read more.\n\n### Prerequisites\n\nToday Kiali works with Istio. So before you install Kiali, you must have already installed Istio. Note that Istio can come pre-bundled with Kiali (specifically if you installed the Istio demo helm profile or if you installed Istio with the helm option '--set kiali.enabled=true'). If you already have the pre-bundled Kiali in your Istio environment and you want to install Kiali via the Kiali Operator, uninstall the pre-bundled Kiali first. You can do this via this command:\n\n    kubectl delete --ignore-not-found=true all,secrets,sa,templates,configmaps,deployments,clusterroles,clusterrolebindings,ingresses,customresourcedefinitions --selector=\"app=kiali\" -n istio-system\n\nWhen you install Kiali in a non-OpenShift Kubernetes environment, the authentication strategy will default to `login`. When using the authentication strategy of `login`, you are required to create a Kubernetes Secret with a `username` and `passphrase` that you want users to provide in order to successfully log into Kiali. Here is an example command you can execute to create such a secret (with a username of `admin` and a passphrase of `admin`):\n\n    kubectl create secret generic kiali -n istio-system --from-literal \"username=admin\" --from-literal \"passphrase=admin\"\n\n### Kiali Custom Resource Configuration Settings\n\nFor quick descriptions of all the settings you can configure in the Kiali Custom Resource (CR), see the file [kiali_cr.yaml](https://github.com/kiali/kiali/blob/v1.3.1/operator/deploy/kiali/kiali_cr.yaml)\n\n### Accessing the UI\n\nBy default, the Kiali operator exposes the Kiali UI as a Route on OpenShift or Ingress on Kubernetes.\nOn OpenShift, the default root context path is '/' and on Kubernetes it is '/kiali' though you can change this by configuring the 'web_root' setting in the Kiali CR.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "kialis.kiali.io",
                        "version": "v1alpha1",
                        "kind": "Kiali",
                        "displayName": "Kiali",
                        "description": "A configuration file for a Kiali installation.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "apps/v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "OAuthClient",
                            "version": "oauth.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "Route",
                            "version": "route.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "Ingress",
                            "version": "extensions/v1beta1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "auth.strategy",
                            "displayName": "Authentication Strategy",
                            "description": "Determines how a user is to log into Kiali. Choose 'login' to use a username and passphrase as defined in a Secret. Choose 'anonymous' to allow full access to Kiali without requiring credentials (use this at your own risk). Choose 'openshift' if on OpenShift to use the OpenShift OAuth login which controls access based on the individual's OpenShift RBAC roles. Default: openshift (when deployed in OpenShift); login (when deployed in Kubernetes)",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "deployment.namespace",
                            "displayName": "Kiali Namespace",
                            "description": "The namespace where Kiali and its associated resources will be created. Default: istio-system",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "deployment.secret_name",
                            "displayName": "Secret Name",
                            "description": "If Kiali is configured with auth.strategy 'login', an admin must create a Secret with credentials ('username' and 'passphrase') which will be used to authenticate users logging into Kiali. This setting defines the name of that secret. Default: kiali",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret"
                            ]
                          },
                          {
                            "path": "deployment.verbose_mode",
                            "displayName": "Verbose Mode",
                            "description": "Determines the priority levels of log messages Kiali will output. Typical values are '3' for INFO and higher priority messages, '4' for DEBUG and higher priority messages (this makes the logs more noisy). Default: 3",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "deployment.view_only_mode",
                            "displayName": "View Only Mode",
                            "description": "When true, Kiali will be in 'view only' mode, allowing the user to view and retrieve management and monitoring data for the service mesh, but not allow the user to modify the service mesh. Default: false",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "server.web_root",
                            "displayName": "Web Root",
                            "description": "Defines the root context path for the Kiali console, API endpoints and readiness/liveness probes. Default: / (when deployed on OpenShift; /kiali (when deployed on Kubernetes)",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "monitoringdashboards.monitoring.kiali.io",
                        "version": "v1alpha1",
                        "kind": "MonitoringDashboard",
                        "displayName": "Monitoring Dashboard",
                        "description": "A configuration file for defining an individual metric dashboard.",
                        "specDescriptors": [
                          {
                            "path": "title",
                            "displayName": "Title",
                            "description": "The title of the dashboard.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              },
              {
                "name": "stable",
                "currentCSV": "kiali-operator.v1.3.1",
                "currentCSVDesc": {
                  "displayName": "Kiali Operator",
                  "icon": [
                    {
                      "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCAxMjgwIDEyODAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDEyODAgMTI4MDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOiMwMTMxNDQ7fQoJLnN0MXtmaWxsOiMwMDkzREQ7fQo8L3N0eWxlPgo8Zz4KCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik04MTAuOSwxODAuOWMtMjUzLjYsMC00NTkuMSwyMDUuNS00NTkuMSw0NTkuMXMyMDUuNSw0NTkuMSw0NTkuMSw0NTkuMVMxMjcwLDg5My42LDEyNzAsNjQwCgkJUzEwNjQuNSwxODAuOSw4MTAuOSwxODAuOXogTTgxMC45LDEwMjkuMmMtMjE1LDAtMzg5LjItMTc0LjMtMzg5LjItMzg5LjJjMC0yMTUsMTc0LjMtMzg5LjIsMzg5LjItMzg5LjJTMTIwMC4xLDQyNSwxMjAwLjEsNjQwCgkJUzEwMjUuOSwxMDI5LjIsODEwLjksMTAyOS4yeiIvPgoJPHBhdGggY2xhc3M9InN0MSIgZD0iTTY1My4zLDI4NGMtMTM2LjQsNjAuNS0yMzEuNiwxOTcuMS0yMzEuNiwzNTZjMCwxNTguOCw5NS4yLDI5NS41LDIzMS42LDM1NmM5OC40LTg3LjEsMTYwLjQtMjE0LjMsMTYwLjQtMzU2CgkJQzgxMy43LDQ5OC4zLDc1MS42LDM3MS4xLDY1My4zLDI4NHoiLz4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0zNTEuOCw2NDBjMC0xMDkuOCwzOC42LTIxMC41LDEwMi44LTI4OS41Yy0zOS42LTE4LjItODMuNi0yOC4zLTEzMC0yOC4zQzE1MC45LDMyMi4yLDEwLDQ2NC41LDEwLDY0MAoJCXMxNDAuOSwzMTcuOCwzMTQuNiwzMTcuOGM0Ni4zLDAsOTAuNC0xMC4xLDEzMC0yOC4zQzM5MC4zLDg1MC41LDM1MS44LDc0OS44LDM1MS44LDY0MHoiLz4KPC9nPgo8L3N2Zz4K",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "1.3.1",
                  "provider": {
                    "name": "Kiali"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"kiali.io/v1alpha1\",\n    \"kind\": \"Kiali\",\n    \"metadata\": {\n      \"name\": \"kiali\"\n    },\n    \"spec\": {\n      \"installation_tag\": \"My Kiali\",\n      \"istio_namespace\": \"istio-system\",\n      \"deployment\": {\n        \"namespace\": \"default\",\n        \"verbose_mode\": \"4\",\n        \"view_only_mode\": false\n      },\n      \"external_services\": {\n        \"grafana\": {\n          \"url\": \"\"\n        },\n        \"prometheus\": {\n          \"url\": \"\"\n        },\n        \"tracing\": {\n          \"url\": \"\"\n        }\n      },\n      \"server\": {\n        \"web_root\": \"/mykiali\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"monitoring.kiali.io/v1alpha1\",\n    \"kind\": \"MonitoringDashboard\",\n    \"metadata\": {\n      \"name\": \"myappdashboard\"\n    },\n    \"spec\": {\n      \"title\": \"My App Dashboard\",\n      \"items\": [\n        {\n          \"chart\": {\n            \"name\": \"My App Processing Duration\",\n            \"unit\": \"seconds\",\n            \"spans\": 6,\n            \"metricName\": \"my_app_duration_seconds\",\n            \"dataType\": \"histogram\",\n            \"aggregations\": [\n              {\n                \"label\": \"id\",\n                \"displayName\": \"ID\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "Monitoring,Logging \u0026 Tracing",
                    "certified": "false",
                    "containerImage": "quay.io/kiali/kiali-operator:v1.3.1",
                    "createdAt": "2019-08-12 00:00:00",
                    "description": "Kiali project provides answers to the questions: What microservices are part of my Istio service mesh and how are they connected?",
                    "repository": "https://github.com/kiali/kiali",
                    "support": "Kiali"
                  },
                  "description": "A Microservice Architecture breaks up the monolith into many smaller pieces that are composed together. Patterns to secure the communication between services like fault tolerance (via timeout, retry, circuit breaking, etc.) have come up as well as distributed tracing to be able to see where calls are going.\n\nA service mesh can now provide these services on a platform level and frees the application writers from those tasks. Routing decisions are done at the mesh level.\n\nKiali works with Istio, in OpenShift or Kubernetes, to visualize the service mesh topology, to provide visibility into features like circuit breakers, request rates and more. It offers insights about the mesh components at different levels, from abstract Applications to Services and Workloads.\n\nSee [https://www.kiali.io](https://www.kiali.io) to read more.\n\n### Prerequisites\n\nToday Kiali works with Istio. So before you install Kiali, you must have already installed Istio. Note that Istio can come pre-bundled with Kiali (specifically if you installed the Istio demo helm profile or if you installed Istio with the helm option '--set kiali.enabled=true'). If you already have the pre-bundled Kiali in your Istio environment and you want to install Kiali via the Kiali Operator, uninstall the pre-bundled Kiali first. You can do this via this command:\n\n    kubectl delete --ignore-not-found=true all,secrets,sa,templates,configmaps,deployments,clusterroles,clusterrolebindings,ingresses,customresourcedefinitions --selector=\"app=kiali\" -n istio-system\n\nWhen you install Kiali in a non-OpenShift Kubernetes environment, the authentication strategy will default to `login`. When using the authentication strategy of `login`, you are required to create a Kubernetes Secret with a `username` and `passphrase` that you want users to provide in order to successfully log into Kiali. Here is an example command you can execute to create such a secret (with a username of `admin` and a passphrase of `admin`):\n\n    kubectl create secret generic kiali -n istio-system --from-literal \"username=admin\" --from-literal \"passphrase=admin\"\n\n### Kiali Custom Resource Configuration Settings\n\nFor quick descriptions of all the settings you can configure in the Kiali Custom Resource (CR), see the file [kiali_cr.yaml](https://github.com/kiali/kiali/blob/v1.3.1/operator/deploy/kiali/kiali_cr.yaml)\n\n### Accessing the UI\n\nBy default, the Kiali operator exposes the Kiali UI as a Route on OpenShift or Ingress on Kubernetes.\nOn OpenShift, the default root context path is '/' and on Kubernetes it is '/kiali' though you can change this by configuring the 'web_root' setting in the Kiali CR.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "kialis.kiali.io",
                        "version": "v1alpha1",
                        "kind": "Kiali",
                        "displayName": "Kiali",
                        "description": "A configuration file for a Kiali installation.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "apps/v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "OAuthClient",
                            "version": "oauth.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "Route",
                            "version": "route.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "Ingress",
                            "version": "extensions/v1beta1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "auth.strategy",
                            "displayName": "Authentication Strategy",
                            "description": "Determines how a user is to log into Kiali. Choose 'login' to use a username and passphrase as defined in a Secret. Choose 'anonymous' to allow full access to Kiali without requiring credentials (use this at your own risk). Choose 'openshift' if on OpenShift to use the OpenShift OAuth login which controls access based on the individual's OpenShift RBAC roles. Default: openshift (when deployed in OpenShift); login (when deployed in Kubernetes)",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "deployment.namespace",
                            "displayName": "Kiali Namespace",
                            "description": "The namespace where Kiali and its associated resources will be created. Default: istio-system",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "deployment.secret_name",
                            "displayName": "Secret Name",
                            "description": "If Kiali is configured with auth.strategy 'login', an admin must create a Secret with credentials ('username' and 'passphrase') which will be used to authenticate users logging into Kiali. This setting defines the name of that secret. Default: kiali",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Secret"
                            ]
                          },
                          {
                            "path": "deployment.verbose_mode",
                            "displayName": "Verbose Mode",
                            "description": "Determines the priority levels of log messages Kiali will output. Typical values are '3' for INFO and higher priority messages, '4' for DEBUG and higher priority messages (this makes the logs more noisy). Default: 3",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "deployment.view_only_mode",
                            "displayName": "View Only Mode",
                            "description": "When true, Kiali will be in 'view only' mode, allowing the user to view and retrieve management and monitoring data for the service mesh, but not allow the user to modify the service mesh. Default: false",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "server.web_root",
                            "displayName": "Web Root",
                            "description": "Defines the root context path for the Kiali console, API endpoints and readiness/liveness probes. Default: / (when deployed on OpenShift; /kiali (when deployed on Kubernetes)",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "monitoringdashboards.monitoring.kiali.io",
                        "version": "v1alpha1",
                        "kind": "MonitoringDashboard",
                        "displayName": "Monitoring Dashboard",
                        "description": "A configuration file for defining an individual metric dashboard.",
                        "specDescriptors": [
                          {
                            "path": "title",
                            "displayName": "Title",
                            "description": "The title of the dashboard.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "kong",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/kong",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Kong Inc",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Kong Inc"
            },
            "packageName": "kong",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "kong.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "Kong Operator",
                  "icon": [
                    {
                      "base64data": "iVBORw0KGgoAAAANSUhEUgAAAI4AAACACAMAAADqKaFKAAAAnFBMVEUAAAAANFoAUnIANl0ANFkANFkAOWEANFkANFkAOl8ANFoANFoAOF0AQGMANFoANVoANFkANVoANFkANFkANVoANlwANFkANVoANVoANVoANFoANloAN1sANlsAQ2oANFoANFoANVoAOF0ANFkANVoANVoANFoANVoANlsAQGIANVkANVkANVkANVoANVkANVoANlsANVoANFoANFnuMUUSAAAAM3RSTlMA0AUt+lIYkbMT9u8hDOJ23KOM5loz84Bk68A5J0kJ17qHHMStbJVOQg/MPp57qXBUmslOI9JhAAAEs0lEQVR42szZ226qUBSF4eESFVQqFs/nc7Vat+14/3fbCSVGUVirCWvid+vNTID8mVPYok41hZdR/SHXVbyIcUiS4REvYeAw4mxRPFXjVXuGgnkL3ig1UahywDuNKQpU6TGpj8L0+YR7QCF8l08FZRSgOWeKegfipg2mE09Gy2E66WSoNjXCMeT8o4ZoMg5DaogmY0kN0WSs6tQQTcaJGqLJKFNDNhkuNUSTsaeGbDI+qSGajA7/bAd7xpVbfeqdIOedOm1IcpnNVZDkl5gp8CFqFb7SwwK6moR1YE2/drXb7eJCXjQhbcKSCu/Uu4h8MdNawQoV8F5YRaRdSNdbTPqc/c45YhZnDAu8Bh9s4p8CZmnBgm8+sURk0pAep+xkfcd7R3icRfaLMZAdZ8oUw2ZcU8lx1JxpSj4iruA4W6ZzrzWVGscbMsN7dk3re+SsxkyDrJq+dZGzicNMzvEatQejKmJyu9WwmVbTb4WY5G41PyByErirlKi3UE9qOjwif4O/rFNeYPmk4oc0sk3WdOPDgiXNONP7mn7BhmadhhqTm4fb+4AVNRoLvLimFg8pq5DGRgoRd+Ehydoipb8PzBTs6dBcC/aoGSJ9mvuALYfFBr/ONNaz9g6Xrhvb7IfG3qqwoRveLArVNyYIL8HTXryHaz4vmRvKwEns4RWasJSH5cMejhbNXZAndeaNM0zuFMlTS3689dODiFrTWLiy+B/wRXunSDm15GD8v3YzW0oYCKJoJwyLYqIgpFgECQoquJT0//+bD1CWVePkzk0n55WXLDOd26eHefDZdwqN5rkh4XZdUdpWGk/Z4tT1tA783KoyTfegtHnOqU0Hlw1AafM0IOoFLfQOWkGX315JZmnEc62imHoaEDIwdL5DmBw8DQgZ02VmfGbvopPDTOOZkevlXuMZ8b2OOwpBYKOAYJ5umO3FDg/5YP7mi0ugWgBg9oOC+c1cPYBqwTwUypJf2suja3xynRGP3LS94hTYp9bh3c+vWLXQH2++7x2oEqoFsXRak5Vv2bFqYeofv7141cLWP/5el4xqoesfc6/Nqpau2viW5lQLziyYL4NqgfWP507OrA921TJSMysRXrWcUm5yxzsTu2pZOrUyP+90u2rBT5fv6D4Y1ULUP7pBsKuWUs0UW/nFqFpe1M7OtAAOa1D/SJ7Eo6ZqWSdqxnnZhX3qJV5zhjPItVXLTu0koeDyTqsWR9xAJ0Aw1vGqpdVT4bxq0Vg2wsOrFqK34+FVS+tSb0epFi7p9ZMQi6sGxspDoarmjFtbtGpZSFzsPAuQqSMdNqtaSiESwFVOj4hI1dIVQuY912gLONWyFSLNTvA7tZ2vyUUU8pjJhU19ZzyO3DCKKB4CB1O4D8kgrkemIvltnS43XrUcRSiJlyaERKK3l8vg5RxS+cuUWGl0L5eICHlkv2+YME4iFAi5FLLcMMAvcXljhysvcerABxfSjogAXwxUL/GnDKhaChBO571/feYwKmbyMnQBLue1dsH/DIdDkAj4CpsqphcUkGCwysepG8u8cw9ugY/qK4sQDSexXCouxx0NWTxPJcAWlU9eQPcNDeIEKW/48vmo4LYSYlT5ORf5AWrXrLl1P4wQAAAAAElFTkSuQmCC",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "Kong Inc"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"charts.helm.k8s.io/v1alpha1\",\"kind\":\"Kong\",\"metadata\":{\"name\":\"example-kong\"},\"spec\":{\"admin\":{\"annotations\":{},\"containerPort\":8444,\"ingress\":{\"annotations\":{},\"enabled\":false,\"hosts\":[],\"path\":\"/\"},\"servicePort\":8444,\"type\":\"NodePort\",\"useTLS\":true},\"cassandra\":{\"enabled\":false},\"env\":{\"database\":\"postgres\"},\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"kong\",\"tag\":1.1},\"ingressController\":{\"enabled\":false,\"image\":{\"repository\":\"kong-docker-kubernetes-ingress-controller.bintray.io/kong-ingress-controller\",\"tag\":\"0.3.0\"},\"ingressClass\":\"kong\",\"installCRDs\":true,\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"rbac\":{\"create\":true},\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"initialDelaySeconds\":30,\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"replicaCount\":1,\"serviceAccount\":{\"create\":true,\"name\":null}},\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/status\",\"port\":\"admin\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"successThreshold\":1,\"timeoutSeconds\":5},\"nodeSelector\":{},\"podAnnotations\":{},\"postgresql\":{\"enabled\":true,\"postgresqlDatabase\":\"kong\",\"postgresqlPassword\":\"imnotwhatyouarelookingfor\",\"postgresqlUsername\":\"kong\",\"service\":{\"port\":5432}},\"proxy\":{\"annotations\":{},\"externalIPs\":[],\"http\":{\"containerPort\":8000,\"enabled\":true,\"servicePort\":80},\"ingress\":{\"annotations\":{},\"enabled\":false,\"hosts\":[],\"path\":\"/\"},\"tls\":{\"containerPort\":8443,\"enabled\":true,\"servicePort\":443},\"type\":\"NodePort\"},\"readinessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/status\",\"port\":\"admin\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"replicaCount\":1,\"resources\":{},\"runMigrations\":true,\"tolerations\":[],\"waitImage\":{\"repository\":\"busybox\",\"tag\":\"latest\"}}}]",
                    "capabilities": "Basic Install",
                    "categories": "Networking",
                    "certified": "false",
                    "containerImage": "kong-docker-kong-operator.bintray.io/kong-operator:v0.1.0",
                    "createdAt": "2019-05-03T12:00:00Z",
                    "description": "Install and manage Kong clusters.",
                    "repository": "https://github.com/kong/kong-operator",
                    "support": "Harry Bagdi"
                  },
                  "description": "Install and manage Kong clusters.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "kongs.charts.helm.k8s.io",
                        "version": "v1alpha1",
                        "kind": "Kong",
                        "displayName": "Kong",
                        "description": "A configuration file for a Kong cluster."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "kubefed-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/kubefed-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Red Hat",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Red Hat"
            },
            "packageName": "kubefed-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "kubefed-operator.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "Kubefed Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "Red Hat"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"operator.kubefed.io/v1alpha1\",\n    \"kind\": \"KubeFed\",\n    \"metadata\": {\n      \"name\": \"kubefed\"\n      },\n    \"spec\": {\n      \"scope\": \"Namespaced\"\n      }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "OpenShift Optional, Integration \u0026 Delivery",
                    "certified": "false",
                    "containerImage": "quay.io/openshift/kubefed-operator:v0.1.0-rc3",
                    "createdAt": "2019-06-14T00:00:00Z",
                    "description": "Gain Hybrid Cloud capabilities between your clusters with Kubernetes Federation.",
                    "repository": "https://github.com/openshift/kubefed-operator",
                    "support": "Red Hat"
                  },
                  "description": "Kubernetes Federation is a tool to sync (aka \"federate\") a set of Kubernetes\nobjects from a \"source\" into a set of other clusters. Common use-cases\ninclude federating Namespaces across all of your clusters or rolling out an\napplication across several geographically distributed clusters. The\nKubernetes Federation Operator runs all of the components under the hood to\nquickly get up and running with this powerful concept. Federation is a key\npart of any Hybrid Cloud capability.\n\n**Support**: \n\nThe KubeFed operator is purely for prototyping purposes and not supported by any upstream community at this time. Note that at the moment uninstalling the operator doesn't delete the custom resources it reconciles. Users may optionally want to delete the custom resources and the associated CRDs before reinstalling the upgraded version of the operator.\n\n\n## Start using the operator\n\nThe KubeFed operator supports deploying a KubeFed control plane in both\nnamespace-scoped and cluster-scoped modes. For example, if you subscribe to\nthis package in a namespace `my-namespace`, KubeFed will be deployed to\nmanage objects _only_ in `my-namespace` in the host cluster and target\nclusters.\n\nYou must create the `KubeFed` custom resource (CR) for KubeFed deployment and the operator will create the KubeFed CRD automatically for deploying components of a `KubeFed` control plane in a given cluster.\n\n\n### KubeFed deployment\nFollow these steps to deploy a KubeFed control plane:\n\n* Install the operator by following the instructions in the\nOpenShift Container Platform 4.1 documentation on [Installing operator](https://docs.openshift.com/container-platform/4.1/applications/operators/olm-adding-operators-to-cluster.html#olm-installing-operators-from-operatorhub_olm-adding-operators-to-a-cluster).\nThe KubeFed operator only needs to be installed in the host cluster for the\ndeployment. It does not need to be installed in each individual target cluster.\n\n**Important Notes**: \n\n* It's recommended to deploy KubeFed in either a namespace-scoped or\ncluster-scoped mode but not both ways as deploying a cluster-scoped and\nnamespace-scoped KubeFed control plane to the same cluster will result in\nboth control planes try to manage resources in the namespace of the\nnamespace-scoped control plane and the managed resources will never converge\non the desired state. For more information, visit\n[link](https://github.com/openshift/federation-dev/blob/master/docs/kubefed-scope.md)\n\n* A KubeFed control plane does not need to be installed on each cluster that\nit will manage. Clusters whose resources are intended to be managed by\nKubeFed need to be registered with the managing control plane, and the\ncontrol plane will interact with those clusters directly via their API.\n\n* The instructions in this guide refer to the namespace where KubeFed is\ninstalled as `\u003cnamespace\u003e` in command examples. The upstream user guide uses\n`kube-federation-system` as the name of this namespace.\n\n```\n$ kubectl get po -n \u003cnamespace\u003e\n  NAME                               READY   STATUS    RESTARTS   AGE\n  kubefed-operator-db58d9b89-8694x   1/1     Running   0          15s\n\n```\n* Create a `KubeFed` resource to drive the installation of a KubeFed control\nplane setting the scope to be either `Namespaced` or `Cluster`. If you're\nplanning to federate a cluster-scoped resource type like, for example\n`StorageClass`, create this CR with `scope:Cluster`.\n\n```\n$ cat \u003c\u003c-EOF | kubectl apply -n \u003cnamespace\u003e -f -\n---\napiVersion: operator.kubefed.io/v1alpha1\nkind: KubeFed\nmetadata:\n  name: kubefed-resource\nspec: \n  scope: Cluster \n---\n```\n```\n$ kubectl get po -n \u003cnamespace\u003e \nNAME                                          READY   STATUS    RESTARTS   AGE\nkubefed-controller-manager-67d5d5cc99-5t2fk   1/1     Running   0          25s\nkubefed-controller-manager-67d5d5cc99-b865z   1/1     Running   0          25s\nkubefed-operator-db58d9b89-8694x              1/1     Running   0          61s\n\n```\n### Installing the KubeFed CLI tool\n\nOnce the KubeFed control plane is up and running, a user can download the\n`kubefedctl` command-line tool to communicate with it. You can get the\nlatest release on\n[GitHub](https://github.com/kubernetes-sigs/kubefed/releases).\n\n```\n $ curl -Ls https://github.com/kubernetes-sigs/kubefed/releases/download/v0.1.0-rc3/kubefedctl-0.1.0-rc3-linux-amd64.tgz\n $ tar -xvzf kubefedctl-0.1.0-rc3-linux-amd64.tgz\n $ chmod u+x kubefedctl\n $ sudo mv kubefedctl /usr/local/bin/ # make sure the location is in the PATH\n```\n### Joining Clusters\n\nUse the `kubefedctl join` command to connect clusters you want KubeFed to manage resources in. The `join` operation reads information \nabout how to connect to the joining cluster and the cluster hosting federation from your local KUBECONFIG.\n\n```\n$ kubefedctl join \u003ccluster-name\u003e \\\n    --cluster-context mycluster \\            # name of a KUBECONFIG context for the cluster to join (required when the context name differs from the cluster name)\n    --host-cluster-context mycluster \\       # name of a KUBECONFIG context for the hosting cluster (required when the current-context isn't set correctly.)\n    --kubefed-namespace=\u003cnamespace\u003e \\        # namespace where KubeFed is deployed (required when the kubefed-namespace isn't `kube-federation-system`)\n    -v 2\n``` \n**Note**:     \n* If you're using an openshift cluster for deploying the KubeFed operator then use the following command to rename the context to a consumable format.\n \n ```\n $ kubectl config rename-context $(kubectl config current-context) \u003ccluster-name\u003e\n \n ```\n\n `kubefedctl join` creates `KubeFedCluster` resource named `\u003ccluster-name\u003e` to represent the joined cluster.\n\n KubeFedCluster resources configure the API endpoint of a registered cluster and reference a local secret containing \n the authentication token used to connect to that cluster.\n\n  ```\n  $ kubectl get kubefedclusters -n \u003cnamespace\u003e\n    NAME            READY     AGE\n  \u003ccluster-name\u003e    True      7s\n\n  ```\n  ``` \n  $ kubectl get kubefedclusters cluster-name -o yaml                                                                                                                                                                     \n    apiVersion: v1\n    items:\n    - apiVersion: core.kubefed.k8s.io/v1beta1\n      kind: KubeFedCluster\n      metadata:\n        creationTimestamp: \"2019-06-07T19:42:16Z\"\n        generation: 1\n        name: cluster1\n        namespace: \u003cnamespace\u003e\n        resourceVersion: \"1055\"\n        selfLink: /apis/core.kubefed.k8s.io/v1beta1/namespaces/federation-test/kubefedclusters/cluster1\n        uid: 5ac7125d-895c-11e9-b736-0242ac110002\n      spec:\n        apiEndpoint: https://172.17.0.2:6443\n        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNU1EWXdOekU1TXpZek1Gb1hEVEk1TURZd05ERTVNell6TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS0M1Cjk0UDd3d2RaMjBEby8weGJYbVpGKzdweks0cEE5b1ZaVW4yRFNSckhGQldmYThrcnpyVmtkQmdjdnNIa044RGQKTndxdFRXbGd6Y2NMVEZjb1cwSGE3VjRHMWpGY2piU1JkNHhPaWp6SktqMTNCakh3RStJY2R5UnZJbmpaUVlQcgpta1ZUQWRocU1mL3IwY08wSHRTYkJweTJLV3FsRmsyajdTSUhkT3AvK0cwWGU0SS9BQXN3U0xxNTczdXo2V0xkCmFMSFBYRkFyaWh5cFlwWUxXSzZNZWRqUEp5R0MxL3NPMjh5T0RWRTFxSUhRL1Q3TUk1a0YyOGh4cHpCWEhpcE8KMWlYOVJNOGNXdktyVUozeU13NzNpQ3cxR2RhQk1tcDR0ZmpWdzJDQ3IwVU9BZmpUVGYzc2xkeUVJcmJTblUxZApCL0k1M0IrUXhQTHBzY3U4aCtFQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGVVNNcS9DbWlXSnhKNlVIY0RqQVc3eW1rUnMKWWh3VktUa3JDbWJVVDNRNUY5SVVGMDFtZGQ2TTdvWUkyWVJFM2J6MkJudU5jM095eGxKakNqNWRLN2FwaGUwSwpham92b3Y2VVhWd0RBQWFWTTNPb2pMODFRbzhHcStFTVpGQ2NITVlqcHlYUEE2c1duMEZFYnRFTTRKQTBYaXpSClgvdUpISWppOGtFdUlWdmNFZHQzYldaTG9rdTVzZ2RvYnBVYWI0WmMrRVpoNVJLazVwY1ByQnpQaUlUcTF0UzAKYTRlemMyRlFHbUEzNHlwUmxWb25jY2FmVWx4aWUwaklmMVlWdnZJVE41d1dKakc5VVpZdmpseGxNT2NjRzRxSwpscm1Wc2JJcytiQTRIWVFCdDEwOTkwR3VmakYybytLZDgwR3g1NkxGZEJvZzVrclZ3VzdOZUxEM0plOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n        secretRef:\n          name: cluster1-jk4hm\n      status:\n        conditions:\n        - lastProbeTime: \"2019-06-07T19:42:32Z\"\n          lastTransitionTime: \"2019-06-07T19:42:32Z\"\n          message: /healthz responded with ok\n          reason: ClusterReady\n          status: \"True\"\n          type: Ready\n    kind: List\n    metadata:\n      resourceVersion: \"\"\n      selfLink: \"\"\n  ```\nFor more detailed information on how to use KubeFed, see [KubeFed project documentation](https://github.com/kubernetes-sigs/kubefed/blob/master/docs/userguide.md#user-guide).\n\n### Useful links\n* [Kubecon EU-2019](https://www.youtube.com/watch?v=GOiN1R2vQos\u0026t=2461s)\n* [Blog](https://blog.openshift.com/federation-v2-is-now-kubefed/)\n\n\n### Contribution \nIf you've got some ideas or use cases for KubeFed operator, we would love to hear them!\n* Raise issues on [GitHub](https://github.com/openshift/kubefed-operator/issues).\n* [Join our community](https://github.com/kubernetes/community/tree/master/sig-multicluster#contact)\n\n### License\nKubeFed is licensed under the [Apache License, Version 2.0](https://github.com/kubernetes-sigs/kubefed/blob/master/LICENSE) license.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "clusterpropagatedversions.core.kubefed.k8s.io",
                        "version": "v1alpha1",
                        "kind": "ClusterPropagatedVersion",
                        "displayName": "ClusterPropagatedVersion",
                        "description": "ClusterPropagatedVersion holds version information about the state propagated from kubefed APIs"
                      },
                      {
                        "name": "dnsendpoints.multiclusterdns.kubefed.k8s.io",
                        "version": "v1alpha1",
                        "kind": "DNSEndpoint",
                        "displayName": "DNSEndpoint",
                        "description": "DNSEndpoint is the CRD wrapper for Endpoint which is designed to act as a source of truth for external-dns."
                      },
                      {
                        "name": "domains.multiclusterdns.kubefed.k8s.io",
                        "version": "v1alpha1",
                        "kind": "Domain",
                        "displayName": "Domain",
                        "description": "Domain is the DNS zone associated with the kubefed control plane"
                      },
                      {
                        "name": "kubefedclusters.core.kubefed.k8s.io",
                        "version": "v1beta1",
                        "kind": "KubeFedCluster",
                        "displayName": "KubeFedCluster",
                        "description": "KubeFedCluster configures kubefed to be aware of a Kubernetes cluster and encapsulates the details necessary to communicate with the cluster."
                      },
                      {
                        "name": "federatedservicestatuses.core.kubefed.k8s.io",
                        "version": "v1alpha1",
                        "kind": "FederatedServiceStatus",
                        "displayName": "FederatedServiceStatus",
                        "description": "FederatedServiceStatus is the observed status of the resource for a named cluster."
                      },
                      {
                        "name": "federatedtypeconfigs.core.kubefed.k8s.io",
                        "version": "v1beta1",
                        "kind": "FederatedTypeConfig",
                        "displayName": "FederatedTypeConfig",
                        "description": "FederatedTypeConfig programs kubefed to know about a single API type - the \"target type\" - that a user wants to federate."
                      },
                      {
                        "name": "kubefedconfigs.core.kubefed.k8s.io",
                        "version": "v1beta1",
                        "kind": "KubeFedConfig",
                        "displayName": "KubeFedConfig",
                        "description": "KubeFedConfig"
                      },
                      {
                        "name": "ingressdnsrecords.multiclusterdns.kubefed.k8s.io",
                        "version": "v1alpha1",
                        "kind": "IngressDNSRecord",
                        "displayName": "IngressDNSRecord",
                        "description": "IngressDNSRecord associates one or more Kubernetes Ingress and how to access the Kubernetes Ingress resources, with a scheme for constructing Domain Name System (DNS) resource records for the Ingress."
                      },
                      {
                        "name": "propagatedversions.core.kubefed.k8s.io",
                        "version": "v1alpha1",
                        "kind": "PropagatedVersion",
                        "displayName": "PropagatedVersion",
                        "description": "PropagatedVersion"
                      },
                      {
                        "name": "replicaschedulingpreferences.scheduling.kubefed.k8s.io",
                        "version": "v1alpha1",
                        "kind": "ReplicaSchedulingPreference",
                        "displayName": "ReplicaSchedulingPreference",
                        "description": "ReplicaSchedulingPreference provides an automated mechanism of distributing and maintaining total number of replicas for deployment or replicaset based federated workloads into federated clusters."
                      },
                      {
                        "name": "servicednsrecords.multiclusterdns.kubefed.k8s.io",
                        "version": "v1alpha1",
                        "kind": "ServiceDNSRecord",
                        "displayName": "ServiceDNSRecord",
                        "description": "ServiceDNSRecord associates one or more Kubernetes Service resources and how to access the Service, with a scheme for constructing Domain Name System (DNS) resource records for the Service."
                      },
                      {
                        "name": "kubefeds.operator.kubefed.io",
                        "version": "v1alpha1",
                        "kind": "KubeFed",
                        "displayName": "KubeFed",
                        "description": "KubeFed represents an installation of a particular version of KubeFed",
                        "statusDescriptors": [
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "The version of KubeFed installed"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "kubeturbo",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/kubeturbo",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Turbonomic, Inc.",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Turbonomic, Inc."
            },
            "packageName": "kubeturbo",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "kubeturbo-operator.v6.3.0",
                "currentCSVDesc": {
                  "displayName": "Kubeturbo Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "6.3.0",
                  "provider": {
                    "name": "Turbonomic, Inc."
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"charts.helm.k8s.io/v1alpha1\",\"kind\":\"Kubeturbo\",\"metadata\":{\"name\":\"kubeturbo-release\"},\"spec\":{\"restAPIConfig\":{\"opsManagerPassword\":\"Turbo_password\",\"opsManagerUserName\":\"Turbo_username\"},\"serverMeta\":{\"turboServer\":\"https://Turbo_server_URL\",\"version\":6.3}}}]",
                    "capabilities": "Basic Install",
                    "categories": "Monitoring",
                    "certified": "false",
                    "containerImage": "turbonomic/kubeturbo-operator:6.3",
                    "createdAt": "2019-05-01 00:00:00",
                    "description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
                    "repository": "https://github.com/turbonomic/kubeturbo/tree/master/deploy/kubeturbo-operator",
                    "support": "Turbonomic, Inc."
                  },
                  "description": "### Decision Automation for Kubernetes\nTurbonomic makes workloads smart—enabling them to self-manage—and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container — KubeTurbo — that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "kubeturbos.charts.helm.k8s.io",
                        "version": "v1alpha1",
                        "kind": "Kubeturbo",
                        "displayName": "Kubeturbo Operator",
                        "description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "kubevirt",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/kubevirt",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "KubeVirt project",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "KubeVirt project"
            },
            "packageName": "kubevirt",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "kubevirtoperator.0.18.1",
                "currentCSVDesc": {
                  "displayName": "KubeVirt",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.18.1",
                  "provider": {
                    "name": "KubeVirt project"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kubevirt.io/v1alpha3\",\n    \"kind\":\"KubeVirt\",\n    \"metadata\": {\n      \"name\":\"kubevirt\",\n      \"namespace\":\"kubevirt\"\n    },\n    \"spec\": {\n      \"imagePullPolicy\":\"Always\"\n    }\n  }\n]\n",
                    "capabilities": "Seamless Upgrades",
                    "categories": "OpenShift Optional",
                    "certified": "false",
                    "containerImage": "index.docker.io/kubevirt/virt-operator:v0.18.1",
                    "createdAt": "2019-06-13 10:28:08",
                    "description": "Creates and maintains KubeVirt deployments",
                    "repository": "https://github.com/kubevirt/kubevirt",
                    "support": "KubeVirt"
                  },
                  "description": "**KubeVirt** is a virtual machine management add-on for Kubernetes. The aim is to provide a common ground for virtualization solutions on top of Kubernetes.\n# Virtualization extension for Kubernetes\nAt its core, KubeVirt extends [Kubernetes](https://kubernetes.io) by adding additional virtualization resource types (especially the `VirtualMachine` type) through [Kubernetes's Custom Resource Definitions API](https://kubernetes.io/docs/tasks/access-kubernetes-api/extend-api-custom-resource-definitions/). By using this mechanism, the Kubernetes API can be used to manage these `VirtualMachine` resources alongside all other resources Kubernetes provides.\nThe resources themselves are not enough to launch virtual machines. For this to happen the _functionality and business logic_ needs to be added to the cluster. The functionality is not added to Kubernetes itself, but rather added to a Kubernetes cluster by _running_ additional controllers and agents on an existing cluster.\nThe necessary controllers and agents are provided by KubeVirt.\nAs of today KubeVirt can be used to declaratively\n\n  * Create a predefined VM\n  * Schedule a VM on a Kubernetes cluster\n  * Launch a VM\n  * Migrate a VM\n  * Stop a VM\n  * Delete a VM\n\n# Start using KubeVirt\n\n  * Try our quickstart at [kubevirt.io](http://kubevirt.io/get_kubevirt/).\n  * See our user documentation at [kubevirt.io/docs](http://kubevirt.io/user-guide).\n\n# Start developing KubeVirt\nTo set up a development environment please read our [Getting Started Guide](https://github.com/kubevirt/kubevirt/blob/master/docs/getting-started.md). To learn how to contribute, please read our [contribution guide](https://github.com/kubevirt/kubevirt/blob/master/CONTRIBUTING.md).\nYou can learn more about how KubeVirt is designed (and why it is that way), and learn more about the major components by taking a look at our developer documentation:\n\n  * [Architecture](https://github.com/kubevirt/kubevirt/blob/master/docs/architecture.md) - High-level view on the architecture\n  * [Components](https://github.com/kubevirt/kubevirt/blob/master/docs/components.md) - Detailed look at all components\n  * [API Reference](https://github.com/kubevirt/kubevirt/blob/master/https://www.kubevirt.io/api-reference/)\n\n# Community\nIf you got enough of code and want to speak to people, then you got a couple of options:\n\n  * Follow us on [Twitter](https://twitter.com/kubevirt)\n  * Chat with us in the #virtualization channel of the [Kubernetes Slack](https://slack.k8s.io/)\n  * Discuss with us on the [kubevirt-dev Google Group](https://groups.google.com/forum/#!forum/kubevirt-dev)\n  * Stay informed about designs and upcoming events by watching our [community content](https://github.com/kubevirt/community/)\n\n# License\nKubeVirt is distributed under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.txt).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "kubevirts.kubevirt.io",
                        "version": "v1alpha3",
                        "kind": "KubeVirt",
                        "displayName": "KubeVirt deployment",
                        "description": "Represents a KubeVirt deployment.",
                        "statusDescriptors": [
                          {
                            "path": "phase",
                            "displayName": "Phase",
                            "description": "The deployment phase.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "conditions",
                            "displayName": "Conditions",
                            "description": "Explanation for the current status of the cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          },
                          {
                            "path": "observedKubeVirtVersion - 'urn:alm:descriptor:text'",
                            "displayName": "Observed KubeVirt Version",
                            "description": "The observed version of the KubeVirt deployment."
                          },
                          {
                            "path": "targetKubeVirtVersion - 'urn:alm:descriptor:text'",
                            "displayName": "Target KubeVirt Version",
                            "description": "The targeted version of the KubeVirt deployment."
                          },
                          {
                            "path": "ObservedKubeVirtRegistry - 'urn:alm:descriptor:text'",
                            "displayName": "Observed KubeVirt registry",
                            "description": "The observed registry of the KubeVirt deployment."
                          },
                          {
                            "path": "TargetKubeVirtRegistry - 'urn:alm:descriptor:text'",
                            "displayName": "Target KubeVirt registry",
                            "description": "The targeted registry of the KubeVirt deployment."
                          },
                          {
                            "path": "operatorVersion - 'urn:alm:descriptor:text'",
                            "displayName": "KubeVirt Operator Version",
                            "description": "The version of the KubeVirt Operator."
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "imagePullPolicy",
                            "displayName": "ImagePullPolicy",
                            "description": "The ImagePullPolicy to use for the KubeVirt components.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:imagePullPolicy"
                            ]
                          },
                          {
                            "path": "imageRegistry",
                            "displayName": "ImageRegistry",
                            "description": "The ImageRegistry to use for the KubeVirt components.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "imageTag",
                            "displayName": "ImageTag",
                            "description": "The ImageTag to use for the KubeVirt components.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "lib-bucket-provisioner",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/lib-bucket-provisioner",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Red Hat",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Red Hat"
            },
            "packageName": "lib-bucket-provisioner",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "lib-bucket-provisioner.v1.0.0",
                "currentCSVDesc": {
                  "displayName": "lib-bucket-provisioner",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.0.0",
                  "provider": {
                    "name": "Red Hat"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"objectbucket.io/v1alpha1\",\n    \"kind\": \"ObjectBucketClaim\",\n    \"metadata\": {\n      \"name\": \"my-obc\",\n      \"namespace\": \"my-app\"\n    },\n    \"spec\": {\n      \"storageClassName\": \"object-bucket-class\",\n      \"generateBucketName\": \"my-obc\",\n      \"SSL\": false,\n      \"versioned\": false,\n      \"additionalConfig\": {}\n    }\n  },\n  {\n    \"apiVersion\": \"objectbucket.io/v1alpha1\",\n    \"kind\": \"ObjectBucket\",\n    \"metadata\": {\n      \"name\": \"my-obc\"\n    },\n    \"spec\": {\n      \"storageClassName\": \"object-bucket-class\",\n      \"reclaimPolicy\": \"Delete\",\n      \"claimRef\": {\n        \"name\": \"my-obc\",\n        \"namespace\": \"my-app\"\n      },\n      \"endpoint\": {\n        \"bucketHost\": \"xxx\",\n        \"bucketPort\": 80,\n        \"bucketName\": \"my-obc-1234-5678-1234-5678\",\n        \"region\": \"xxx\",\n        \"subRegion\": \"xxx\",\n        \"ssl\": false,\n        \"additionalConfig\": {}\n      },\n      \"additionalState\": {}\n    }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "Storage,Big Data",
                    "certified": "false",
                    "containerImage": "kubernetes/pause",
                    "createdAt": "2014-07-19 07:02:32.267701",
                    "description": "Library for the dynamic provisioning of object store buckets to be used by object store providers.",
                    "repository": "https://github.com/kube-object-storage/lib-bucket-provisioner",
                    "support": "Red Hat"
                  },
                  "description": "### CRD-only Operator\n\nThis operator package is **CRD-only** and the operator is a no-op operator.\n\nInstead, bucket provisioners using this library are using these CRD's and using CSV [required-crds](https://github.com/operator-framework/operator-lifecycle-manager/blob/master/Documentation/design/building-your-csv.md#required-crds) them so that OLM can install it as a dependency.\n\n### Generic Bucket Provisioning\n\nKubernetes natively supports dynamic provisioning for many types of file and block storage, but lacks support for object bucket provisioning. \n\nThis repo is a placeholder for an object store bucket provisioning library, very similar to the Kubernetes [sig-storage-lib-external-provisioner](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner/blob/master/controller/controller.go) library.\n\n### Known Provisioners\n- https://github.com/noobaa/noobaa-operator (NooBaa)\n- https://github.com/rook/rook (Rook-Ceph)\n- https://github.com/yard-turkey/aws-s3-provisioner (AWS-S3)\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": false
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "objectbucketclaims.objectbucket.io",
                        "version": "v1alpha1",
                        "kind": "ObjectBucketClaim",
                        "displayName": "ObjectBucketClaim",
                        "description": "Claim a bucket just like claiming a PV. Automate you app bucket provisioning by creating OBC with your app deployment. A secret and configmap (name=claim) will be created with access details for the app pods.",
                        "resources": [
                          {
                            "name": "secrets",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "configmaps",
                            "kind": "ConfigMap",
                            "version": "v1"
                          }
                        ]
                      },
                      {
                        "name": "objectbuckets.objectbucket.io",
                        "version": "v1alpha1",
                        "kind": "ObjectBucket",
                        "displayName": "ObjectBucket",
                        "description": "Used under-the-hood. Created per ObjectBucketClaim and keeps provisioning information",
                        "resources": [
                          {
                            "name": "secrets",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "configmaps",
                            "kind": "ConfigMap",
                            "version": "v1"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "litmuschaos",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/litmuschaos",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "MayaData",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "MayaData"
            },
            "packageName": "litmuschaos",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "chaosoperator.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "Litmus Chaos Operator",
                  "icon": [
                    {
                      "base64data": "iVBORw0KGgoAAAANSUhEUgAAAKkAAACpCAYAAABQ1R0vAAADfUlEQVR4nOzdMW4cZRiA4dkoAjosUVASiQY6d4iO3IR0iAo6Cg4BN4CahgNEin0BWGoKAuIASxMgzY9W2ghhCVm21/O/Tp7nAPN9Wr36Z2eySe6PMRYouzd7AbiMSMkTKXkiJe/+jKGbzcbT2ktgjLFZY46TlDyRkidS8kRKnkjJEyl5IiVPpOSJlDyRkidS8kRKnkjJEyl5IiVPpORN+dHzTXzwyafL7198eaNrvP/Xn8vj99492k7cLicpeSIlT6TkiZQ8kZInUvJESp5IyRMpeSIlT6TkiZQ8kZInUvJESp5IyRMpeSIlT6TkiZQ8kZInUvJESp5IyRMpeSIlT6TkiZQ8kZInUvJESp5IyRMpeSIlT6TkiZQ8kZInUvJESp5IyRMpeSIlT6TkiZQ8kZInUvLu3H8l/vpvT5fv3n7rRtf4+ccflsdH24jbducivffs2fLhG6/d6BrPn/99tH24fW735ImUPJGSJ1LyREqeSMkTKXkiJU+k5ImUPJGSJ1LyREqeSMkTKXkiJU+k5ImUPJGSJ1LyREqeSMkTKXkiJU+k5ImUPJGSJ1LyREqeSMkTKXkiJU+k5ImUPJGSJ1LyREqeSMkTKXkiJU+k5ImUPJGSJ1LyREqeSMkTKXkiJU+k5ImUPJGSJ1LyREqeSMm7P3uBu+bk5GQ5PT2dvcZRbLfbZbfbzV7jUiK9on2gT548mb3GUTx8+HA5Ozubvcal3O7JEyl5IiVPpOSJlDyRkidS8kRKnkjJEyl5IiVPpOSJlDyRkidS8u7c70l3u91yfn5+o2tst9up8yvuwg+e9zZjjPWHbjbrD+XoxhibNea43ZMnUvJESp5Iua5f1xokUq7r6VqDZkX6crzDebVd/z3eFc2K9PtJczme1f7C/qz3pA+WZfll9cEcyx9jjJO1hk05SccY++8z386YzVF8teawKSfp8u9puv9e8+aUBbiu/VP96RhjtT9TnfZ0fzhNP5s1n2v7eM1Al9mvoMYY3yzL8vXMHbiSR2OM1f+Fs+nvSccY+9P089l7cKlHh0NlddO+k1602Ww+WpZl/yG8M3sX/uOnwy1+tfeiF00/SV/Y30bGGPuHqUeHD4a5zg+n5+nMQJfSSXrR4el/f7o+mL3LK2Yf5PbwYJuQjRReyNzu4f+IlDyRkidS8kRKnkjJEyl5IiXvnwAAAP//eI+ULPfWFXEAAAAASUVORK5CYII=",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "MayaData"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"litmuschaos.io/v1alpha1\",\n    \"kind\": \"ChaosEngine\",\n    \"metadata\": {\n      \"name\": \"sample-chaos\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"appinfo\": {\n        \"appns\": \"default\",\n        \"applabel\": \"app=testapp\",\n        \"appkind\": \"deployment\"\n      },\n      \"chaosServiceAccount\": \"default\",\n      \"experiments\": [\n        {\n          \"name\": \"pod-delete\",\n          \"spec\": {\n            \"components\": null\n          }\n        }\n      ]\n    }\n  }\n]\n",
                    "capabilities": "Basic Install",
                    "categories": "Integration \u0026 Delivery",
                    "certified": "false",
                    "containerImage": "index.docker.io/litmuschaos/chaos-operator-ce:v0.1.0",
                    "createdAt": "2019-07-15 10:28:08",
                    "description": "Chaos Engineering for Kubernetes",
                    "repository": "https://github.com/litmuschaos/chaos-operator",
                    "support": "https://slack.openebs.io/"
                  },
                  "description": "**Litmus** is a chaos engineering framework for Kubernetes which helps ensure a consistent and reliable behavior of workloads. It strives to detect the real-world  issues which escape during unit and integration tests by injecting faults on the application \u0026 cluster components. With Litmus, the chaos experiment logic is packaged  into dedicated containers which makes them portable across Kubernetes platforms.  This containerization also helps to integrate Litmus into CI/CD environments.\n## How It Works \nThe Litmus chaos operator is used by application developers and SREs to inject chaos  into the applications in a managed fashion. It automates the execution of chaos experiments based on a custom resource definition `(ChaosEngine)` which specifies the list of experiments  to be performed and also contains details of the application target. The chaos experiments  are themselves custom resource definitions `(chaosExperiment)` , holding specifics such as  chaos parameters, log levels etc., and are referenced by an `executor` pod, which is launched and managed by the operator. The status \u0026 eventually, results of the experiments are exposed  as prometheus metrics, in order to aid monitoring \u0026 integration with visualization platforms.\n## Pre-Requisites\nBefore creating the chaosEngine CR, perform the following steps to ensure successful chaos  injection.\n* Create the chaos experiment CRs for the faults you would like to inject against an application. \n  These are bundled together into helm charts based on the category \u0026 can be obtained [here](https://litmuschaos.github.io/chaos-charts/index.yaml)\n\n\n* Ensure that the application under test (AUT) is annotated in the following manner.\n\n  ```\n  kubectl annotate deployment/\u003capp-deployment\u003e litmuschaos.io/chaos=\"true\" -n \u003capp-namespace\u003e\n  ```\n\n## Learn More About Litmus \n* Refer the [docs](https://docs.litmuschaos.io)\n* To learn how to contribute, please read the contribution guide: \n  [contribution guide](https://github.com/litmuschaos/litmus/blob/master/CONTRIBUTING.md)\n\n* Litmus welcomes your feedback and contributions in any form possible.\n  [Join our Community](https://slack.openebs.io/)\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "chaosengines.litmuschaos.io",
                        "version": "v1alpha1",
                        "kind": "ChaosEngine",
                        "displayName": "ChaosEngine",
                        "description": "Represents the Chaos Schedule for an application",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "",
                            "version": ""
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "conditions",
                            "displayName": "Conditions",
                            "description": "ChaosEngine Conditions",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "appinfo",
                            "displayName": "AppInfo",
                            "description": "Application Information"
                          },
                          {
                            "path": "chaosServiceAccount",
                            "displayName": "ChaosServiceAccount",
                            "description": "Service Account for Chaos"
                          },
                          {
                            "path": "experiments",
                            "displayName": "Experiments",
                            "description": "Chaos Experiment List"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "mattermost-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/mattermost-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Mattermost",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Mattermost"
            },
            "packageName": "mattermost-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "mattermost-operator.v0.5.0",
                "currentCSVDesc": {
                  "displayName": "Mattermost Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.5.0",
                  "provider": {
                    "name": "Mattermost"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"mattermost.com/v1alpha1\",\n    \"kind\":\"ClusterInstallation\",\"metadata\": {\n      \"name\":\"example-clusterinstallation\"\n    },\n    \"spec\": {\n      \"ingressName\":\"example.mattermost-example.dev\"\n    }\n  }\n]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Developer Tools",
                    "certified": "false",
                    "containerImage": "docker.io/mattermost/mattermost-operator:v0.5.0",
                    "createdAt": "2019-07-18 09:42:00",
                    "description": "Mattermost is a flexible, open source messaging platform that enables secure team collaboration.",
                    "repository": "https://github.com/mattermost/mattermost-operator",
                    "support": "Carlos Panato"
                  },
                  "description": "[Mattermost](https://mattermost.com) is a flexible, open source messaging platform that enables secure team collaboration.\n\n### Operator features\n\n* **Upgrade** - Supports rolling upgrades.\n\n### Before you start\n\n1. Before using the Mattermost operator you will need to install the following operators:\n  - [MySQL Operator](https://github.com/presslabs/mysql-operator) from PressLabs\n  - [MinIO Operator](https://github.com/minio/minio-operator) from MinIO\n\nFor more detailed information on how to use the Mattermost Operator, see [here](https://github.com/mattermost/mattermost-operator/blob/master/README.md).\n\n### Example Configuration\n\nA more complex Mattermost instance:\n\n    apiVersion: mattermost.com/v1alpha1\n    kind: ClusterInstallation\n    metadata:\n      name: example-mattermost\n    spec:\n      ingressName: example.mattermost.example\n      replicas: 2\n      minioStorageSize: 10Gi\n      minioReplicas: 4\n      databaseType:\n        databaseStorageSize: 10Gi\n        databaseReplicas: 4\n      useServiceLoadBalancer: true\n      serviceAnnotations:\n        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp\n        service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:xxxx:certificate/xxxxx-xxx-xxx-xxx-xxxxx\n        service.beta.kubernetes.io/aws-load-balancer-ssl-ports: \"https\"\n      mattermostLicenseSecret: mattermost-license",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "clusterinstallations.mattermost.com",
                        "version": "v1alpha1",
                        "kind": "ClusterInstallation",
                        "displayName": "Mattermost Cluster Installation",
                        "description": "A configuration file for a Mattermost custom resource."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "microcks",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/microcks",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Microcks.io",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Microcks.io"
            },
            "packageName": "microcks",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "microcks-operator.v0.2.0",
                "currentCSVDesc": {
                  "displayName": "Microcks Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.2.0",
                  "provider": {
                    "name": "Microcks.io"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"microcks.github.io/v1alpha1\",\n    \"kind\": \"MicrocksInstall\",\n    \"metadata\": {\n      \"name\": \"my-microcksinstall\"\n    },\n    \"spec\": {\n      \"name\": \"my-microcksinstall\",\n      \"version\": \"0.7.1\",\n      \"microcks\": {\n        \"replicas\": 2\n      },\n      \"postman\": {\n        \"replicas\": 2\n      },\n      \"keycloak\": {\n        \"install\": true,\n        \"persistent\": true,\n        \"volumeSize\": \"1Gi\"\n      },\n      \"mongodb\": {\n        \"install\": true,\n        \"persistent\": true,\n        \"volumeSize\": \"2Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"microcks.github.io/v1alpha1\",\n    \"kind\": \"MicrocksInstall\",\n    \"metadata\": {\n      \"name\": \"my-microcksinstall-minikube\"\n    },\n    \"spec\": {\n      \"name\": \"my-microcksinstall-minikube\",\n      \"version\": \"0.7.1\",\n      \"microcks\": {\n        \"replicas\": 2,\n        \"url\": \"microcks.192.168.99.100.nip.io\"\n      },\n      \"postman\": {\n        \"replicas\": 2\n      },\n      \"keycloak\": {\n        \"install\": true,\n        \"persistent\": true,\n        \"volumeSize\": \"1Gi\",\n        \"url\": \"keycloak.192.168.99.100.nip.io\"\n      },\n      \"mongodb\": {\n        \"install\": true,\n        \"persistent\": true,\n        \"volumeSize\": \"2Gi\"\n      }\n    }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "Integration \u0026 Delivery",
                    "certified": "false",
                    "containerImage": "quay.io/microcks/microcks-ansible-operator:0.2.0",
                    "createdAt": "2019-04-01 09:01:00",
                    "description": "Open Source mocking and testing platform for API and microservices",
                    "repository": "https://github.com/microcks/microcks-ansible-operator",
                    "support": "microcks.github.io"
                  },
                  "description": "Microcks is an open source project those goal is to provide a platform for referencing, deploying mocks and allow contract-testing of Services and APIs. It can also be considered as a Service Virtualization solution because it will allow you to provide fake API or Service implementation before development being actually done. It supports both REST API and SOAP WebServices and perfectly integrates into an iterative,contract-first delivery process.\nMicrocks tries not reinventing the wheel and let you capitalize on already known tools of standards. It supports OpenAPI Specification 3.x out-of-the-box and can also relies on popular tools like [SoapUI](http://www.soapui.com) or [Postman](http://www.getpostman.io) to edit your API request / response samples as well as your test scripts.\n* **Create/Destroy**: Easily launch Microcks installations for your kubernetes namespace.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "microcksinstalls.microcks.github.io",
                        "version": "v1alpha1",
                        "kind": "MicrocksInstall",
                        "displayName": "MicrocksInstall",
                        "description": "Represents a Microcks installation",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "PersistentVolumeClaim",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "name",
                            "displayName": "Name",
                            "description": "Name of your MicrocksInstall",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "Version of Microcks to install",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "mongodb-enterprise",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/mongodb-enterprise",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "MongoDB, Inc",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "MongoDB, Inc"
            },
            "packageName": "mongodb-enterprise",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "mongodb-enterprise.v1.2.2",
                "currentCSVDesc": {
                  "displayName": "MongoDB",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.2.2",
                  "provider": {
                    "name": "MongoDB, Inc"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"kind\": \"MongoDB\",\n    \"apiVersion\": \"mongodb.com/v1\",\n    \"metadata\": {\n        \"name\": \"sample-replica-set\"\n    },\n    \"spec\": {\n      \"version\": \"4.0.10\",\n      \"type\": \"ReplicaSet\",\n      \"project\": \"my-project\",\n      \"persistent\": false,\n      \"members\": 3,\n      \"credentials\": \"my-credentials\"\n    },\n    \"status\": {\n      \"version\": \"4.0.10\",\n      \"type\": \"ReplicaSet\",\n      \"phase\": \"Running\",\n      \"members\": 3,\n      \"link\": \"https://cloud.mongodb.com/v2/5d35f7cdbf994268c3\",\n      \"lastTransition\": \"2019-07-23T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"mongodb.com/v1\",\n    \"kind\": \"MongoDB\",\n    \"metadata\": {\n        \"name\": \"sample-sharded-cluster\"\n    },\n    \"spec\": {\n        \"configServerCount\": 3,\n        \"credentials\": \"my-credentials\",\n        \"mongodsPerShardCount\": 3,\n        \"mongosCount\": 2,\n        \"persistent\": false,\n        \"project\": \"my-project\",\n        \"shardCount\": 1,\n        \"type\": \"ShardedCluster\",\n        \"version\": \"3.6.8\"\n    },\n    \"status\": {\n        \"lastTransition\": \"2019-07-23T09:00:00Z\",\n        \"phase\": \"Running\"\n    }\n  },\n  {\n    \"apiVersion\": \"mongodb.com/v1\",\n    \"kind\": \"MongoDBUser\",\n    \"metadata\": {\n        \"name\": \"sample-user\"\n    },\n    \"spec\": {\n        \"db\": \"$external\",\n        \"project\": \"my-project\",\n        \"roles\": [\n            {\n                \"db\": \"admin\",\n                \"name\": \"clusterAdmin\"\n            }\n        ],\n        \"username\": \"CN=mms-user-1,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US\"\n    }\n  },\n  {\n  \"apiVersion\": \"mongodb.com/v1\",\n  \"kind\": \"MongoDBOpsManager\",\n  \"metadata\": {\n    \"name\": \"ops-manager\"\n  },\n  \"spec\": {\n    \"version\": \"4.2.0\",\n    \"adminCredentials\": \"ops-manager-admin\",\n    \"configuration\": {\n      \"mms.fromEmailAddr\": \"admin@thecompany.com\"\n    },\n    \"applicationDatabase\": {\n      \"members\": 3,\n      \"version\": \"4.2.0\",\n      \"persistent\": true,\n      \"type\": \"ReplicaSet\",\n      \"podSpec\": {\n        \"cpu\": \"0.25\"\n      }\n    }\n  }\n}\n]\n",
                    "capabilities": "Deep Insights",
                    "categories": "Database",
                    "certified": "true",
                    "containerImage": "quay.io/mongodb/mongodb-enterprise-operator:1.2.2",
                    "createdAt": "2019-08-30 10:28:21",
                    "description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
                    "repository": "https://github.com/mongodb/mongodb-enterprise-kubernetes",
                    "support": "MongoDB Community Support"
                  },
                  "description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\nThe Operator has alpha support for a containerized Ops Manager with the `MongoDBOpsManager` custom resource.\n\n## Before You Start\n\nTo start using the operator you'll need an account in MongoDB Cloud Manager or a MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.opsmanager.mongodb.com/current/tutorial/install-k8s-operator/#create-credentials)\n\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.opsmanager.mongodb.com/current/tutorial/install-k8s-operator/#create-onprem-project)\n\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `project` - Enter the name of the ConfigMap containing project information\n\n\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n\n\n## Supported MongoDB Deployment Types ##\n\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you should\ncreate your certificates or you can leave the operator to create all the\ncertificates for you. For more information, please read the official MongoDB\nKubernetes Operator [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "mongodb.mongodb.com",
                        "version": "v1",
                        "kind": "MongoDB",
                        "displayName": "MongoDB Deployment",
                        "description": "MongoDB Deployment"
                      },
                      {
                        "name": "mongodbusers.mongodb.com",
                        "version": "v1",
                        "kind": "MongoDBUser",
                        "displayName": "MongoDB User",
                        "description": "MongoDB x509 User"
                      },
                      {
                        "name": "opsmanagers.mongodb.com",
                        "version": "v1",
                        "kind": "MongoDBOpsManager",
                        "displayName": "MongoDB Ops Manager",
                        "description": "MongoDB Ops Manager Alpha"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "myvirtualdirectory",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/myvirtualdirectory",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Tremolo Security, Inc.",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Tremolo Security, Inc."
            },
            "packageName": "myvirtualdirectory",
            "channels": [
              {
                "name": "beta",
                "currentCSV": "myvirtualdirectory.1.0.0",
                "currentCSVDesc": {
                  "displayName": "MyVirtualDirectory",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.0.0",
                  "provider": {
                    "name": "Tremolo Security, Inc."
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"myvirtualdirectory.tremolo.io/v1\",\n    \"kind\": \"MyVirtualDirectory\",\n    \"metadata\": {\n      \"name\":\"myvirtualdirectory\"\n    },\n    \"spec\": {\n      \"image\": \"docker.io/tremolosecurity/myvirtualdirectory:latest\",\n      \"replicas\": 1,\n      \"dest_secret\": \"myvd-secret\",\n      \"dest_cfg_map\": \"myvd-configmap\",\n      \"source_secret\": \"myvd-secrets-source\",\n      \"secret_data\": [\n        \"MYVD_TLS_KEY_PASSWORD\"\n      ],\n      \"non_secret_data\": [\n        {\n          \"name\": \"ROOT\",\n          \"value\": \"o=Tremolo\"\n        }\n      ],\n      \"myvd_props\": \"#Global AuthMechConfig\\nserver.globalChain=accesslog,attrCleaner\\nserver.globalChain.accesslog.className=com.tremolosecurity.proxy.myvd.log.AccessLog\\nserver.globalChain.attrCleaner.className=net.sourceforge.myvd.inserts.mapping.AttributeCleaner\\nserver.globalChain.attrCleaner.config.clearAttributes=true\\nserver.globalChain.dump.className=net.sourceforge.myvd.inserts.DumpTransaction\\nserver.globalChain.dump.config.logLevel=info\\nserver.globalChain.dump.config.label=global\\n\\nserver.nameSpaces=rootdse,myvdroot\\nserver.rootdse.chain=dse\\nserver.rootdse.nameSpace=\\nserver.rootdse.weight=0\\nserver.rootdse.dse.className=net.sourceforge.myvd.inserts.RootDSE\\nserver.rootdse.dse.config.namingContexts=#[ROOT]\\nserver.myvdroot.chain=root\\nserver.myvdroot.nameSpace=#[ROOT]\\nserver.myvdroot.weight=0\\nserver.myvdroot.root.className=net.sourceforge.myvd.inserts.RootObject\",\n      \"myvd_log4j2_xml\": \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003c!--\\n    Copyright 2018 Tremolo Security, Inc.\\n    \\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n    \\n        http://www.apache.org/licenses/LICENSE-2.0\\n    \\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n--\u003e\\n\\n\u003cConfiguration\u003e\\n    \u003cAppenders\u003e\\n    \u003cConsole name=\\\"STDOUT\\\" target=\\\"SYSTEM_OUT\\\"\u003e\\n        \u003cPatternLayout pattern=\\\"[%d][%t] %-5p %c{1} - %m%n\\\"/\u003e\\n    \u003c/Console\u003e\\n    \u003c/Appenders\u003e\\n    \u003cLoggers\u003e\\n    \\n    \u003cRoot level=\\\"info\\\"\u003e\\n        \u003cAppenderRef ref=\\\"STDOUT\\\"/\u003e\\n    \u003c/Root\u003e\\n    \u003c/Loggers\u003e\\n\u003c/Configuration\u003e\",\n      \"myvd_network_configuration\": {\n        \"open_port\": 10389,\n        \"secure_port\": 10636,\n        \"secure_key_alias\": \"myvd-tls\",\n        \"client_auth\": \"none\",\n        \"allowed_client_names\": [],\n        \"ciphers\": [\n          \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",\n          \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\n          \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",\n          \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",\n          \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\n          \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\"\n        ],\n        \"path_to_deployment\": \"/etc/myvd-config\",\n        \"path_to_env_file\": \"/etc/myvd\"\n      },\n      \"key_store\": {\n        \"static_keys\": [],\n        \"trusted_certificates\": [],\n        \"key_pairs\": {\n          \"create_keypair_template\": [\n            {\n              \"name\": \"ou\",\n              \"value\": \"k8s\"\n            },\n            {\n              \"name\": \"o\",\n              \"value\": \"Tremolo Security\"\n            },\n            {\n              \"name\": \"l\",\n              \"value\": \"Alexandria\"\n            },\n            {\n              \"name\": \"st\",\n              \"value\": \"Virginia\"\n            },\n            {\n              \"name\": \"c\",\n              \"value\": \"US\"\n            }\n          ],\n          \"keys\": [\n            {\n              \"name\": \"myvd-tls\",\n              \"tls_secret_name\": \"myvd-tls-secret\",\n              \"import_into_ks\": \"keypair\",\n              \"create_data\": {\n                \"sign_by_k8s_ca\" : false,\n                \"server_name\": \"${k8s_obj.metadata.name + '.' + k8s_namespace + '.svc.cluster.local'}\",\"subject_alternative_names\": [],\n                \"key_size\": 2048,\n                \"ca_cert\": false\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n]",
                    "capabilities": "Full Lifecycle",
                    "categories": "Security",
                    "certified": "false",
                    "containerImage": "docker.io/tremolosecurity/myvd-k8s-operator",
                    "createdAt": "2019-04-15",
                    "description": "MyVirtualDirectory Operator to provide LDAP virtual directory services and LDAP proxy services",
                    "repository": "https://github.com/TremoloSecurity/",
                    "support": "https://github.com/TremoloSecurity/myvd-k8s-operator"
                  },
                  "description": "Before you can deploy MyVirtualDirectory you'll need to create a source secret with information that shouldn't be stored in the `MyVirtualDirectory` custom resource, referenced by the `source_secret` attribute.  The minimal data in this secret should be at least `MYVD_TLS_KEY_PASSWORD`, the password for the keystore the operator creates.  An example of creating a secret used by the example configuration is:\n  \n```\n$ mkdir secret\n$ cd secret\n$ echo 'my_secret_password' | base64 \u003e MYVD_TLS_KEY_PASSWORD\n$ oc create secret generic myvd-secrets-source --from-file=.\n```\n  \nThe default configuration will generate a self signed certificate for TLS.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "myvirtualdirectories.myvirtualdirectory.tremolo.io",
                        "version": "v1",
                        "kind": "MyVirtualDirectory",
                        "displayName": "MyVirtualDirectory",
                        "description": "A running MyVirtualDirectory instance",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ServiceAccount",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "beta"
          }
        },
        {
          "metadata": {
            "name": "noobaa-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/noobaa-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "NooBaa",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "NooBaa"
            },
            "packageName": "noobaa-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "noobaa-operator.v1.1.0",
                "currentCSVDesc": {
                  "displayName": "NooBaa Operator",
                  "icon": [
                    {
                      "base64data": "iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAIAAAD2HxkiAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA25pVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNS1jMDIxIDc5LjE1NTc3MiwgMjAxNC8wMS8xMy0xOTo0NDowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpBNjQyRDdGQUIxMDkxMUU0QURFMENEMjA1QUJCMENEMyIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDoxOTA3OEQwNDAyRjAxMUU1QjdFQkI4RTFBMzY3NkQxRiIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDoxOTA3OEQwMzAyRjAxMUU1QjdFQkI4RTFBMzY3NkQxRiIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxNCAoV2luZG93cykiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo5NWU4ZDg3YS1mNGU4LTRlMTYtOGIwYi1hZGIzYzY2OThkOGUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6QTY0MkQ3RkFCMTA5MTFFNEFERTBDRDIwNUFCQjBDRDMiLz4gPC9yZGY6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\n",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.1.0",
                  "provider": {
                    "name": "NooBaa"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"noobaa.io/v1alpha1\",\n    \"kind\": \"NooBaa\",\n    \"metadata\": {\n      \"name\": \"noobaa\",\n      \"namespace\": \"my-noobaa-operator\"\n    },\n    \"spec\":{}\n  },\n  {\n    \"apiVersion\": \"noobaa.io/v1alpha1\",\n    \"kind\": \"BackingStore\",\n    \"metadata\": {\n      \"name\": \"aws1\",\n      \"namespace\": \"my-noobaa-operator\"\n    },\n    \"spec\": {\n      \"type\": \"aws-s3\",\n      \"bucketName\": \"noobaa-aws1\",\n      \"secretName\": \"backing-store-secret-aws1\"\n    }\n  },\n  {\n    \"apiVersion\": \"objectbucket.io/v1alpha1\",\n    \"kind\": \"ObjectBucketClaim\",\n    \"metadata\": {\n      \"name\": \"noobaa-obc\"\n    },\n    \"spec\": {\n      \"storageClassName\": \"noobaa-storage-class\",\n      \"generateBucketName\": \"noobaa-obc\"\n    }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "Storage,Big Data",
                    "certified": "false",
                    "containerImage": "noobaa/noobaa-operator:1.1.0",
                    "createdAt": "2019-08-21 12:27:00.228169",
                    "description": "NooBaa is an object data service for hybrid and multi cloud environments.",
                    "repository": "https://github.com/noobaa/noobaa-operator",
                    "support": "Red Hat"
                  },
                  "description": "The noobaa operator will create and reconcile a NooBaa system in your kubernetes cluster.\n\nNooBaa provides and S3 object store service abstraction and data placement policies to create hybrid and multi cloud data solutions.\n\nFor more information on using NooBaa refer to [Github](https://github.com/noobaa/noobaa-core) / [Website](https://www.noobaa.io) / [Articles](https://noobaa.desk.com). \n\n## How does it work?\n\n- The operator deploys the noobaa core pod and two services - Mgmt (UI/API) and S3 (object-store).\n- Both services require credentials which you will get from a secret that the operator creates - see describe to locate it.\n- The service addresses will also appear in the describe output - pick the one that is suitable for your client:\n    - minikube - use the NodePort address.\n    - remote cluster - probably need one of the External addresses.\n    - connect an application on the same cluster - any address should work, but prefer Internal addresses\n    (e.g https://s3.my-noobaa-operator and https://noobaa-mgmt.my-noobaa-operator)\n- Feel free to email us or open github issues on any question.\n\n## Getting Started\n\n### Notes:\n- The following instructions are for **minikube** but it works on any Kubernetes/Openshift clusters.\n- This will setup noobaa in the **my-noobaa-operator** namespace.\n- You will need **jq**, **curl**, **kubectl** or **oc**, **aws-cli**.\n\n### 1. Install OLM (if you don't have it already):\n```\ncurl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/0.10.0/install.sh | bash -s 0.10.0\n```\n\n### 2. Install noobaa-operator and wait for it:\n```\nkubectl create -f https://operatorhub.io/install/noobaa-operator.yaml\nkubectl wait pod -n my-noobaa-operator -l noobaa-operator --for=condition=ready\n```\n\n### 3. Create noobaa system and wait for it:\n```\ncurl -sL https://operatorhub.io/api/operator?packageName=noobaa-operator | \n  jq '.operator.customResourceDefinitions[0].yamlExample | .metadata.namespace=\"my-noobaa-operator\"' |\n  kubectl create -f -\nkubectl wait pod -n my-noobaa-operator -l noobaa-core --for=condition=ready\nkubectl get noobaa -n my-noobaa-operator -w\n# NAME     PHASE   MGMT-ENDPOINTS                  S3-ENDPOINTS                    IMAGE                    AGE\n# noobaa   **Ready**   [https://192.168.64.12:31121]   [https://192.168.64.12:32557]   noobaa/noobaa-core:4.0   19m\n```\n\n### 4. Get system information to your shell:\n```\nNOOBAA_SECRET=$(kubectl get noobaa noobaa -n my-noobaa-operator -o json | jq -r '.status.accounts.admin.secretRef.name' )\nNOOBAA_MGMT=$(kubectl get noobaa noobaa -n my-noobaa-operator -o json | jq -r '.status.services.serviceMgmt.nodePorts[0]' )\nNOOBAA_S3=$(kubectl get noobaa noobaa -n my-noobaa-operator -o json | jq -r '.status.services.serviceS3.nodePorts[0]' )\nNOOBAA_ACCESS_KEY=$(kubectl get secret $NOOBAA_SECRET -n my-noobaa-operator -o json | jq -r '.data.AWS_ACCESS_KEY_ID|@base64d')\nNOOBAA_SECRET_KEY=$(kubectl get secret $NOOBAA_SECRET -n my-noobaa-operator -o json | jq -r '.data.AWS_SECRET_ACCESS_KEY|@base64d')\n```\n\n### 5. Connect to Mgmt UI:\n```\n# show email/password from the secret:\nkubectl get secret $NOOBAA_SECRET -n my-noobaa-operator -o json | jq '.data|map_values(@base64d)'\n\n# open mgmt UI login:\nopen $NOOBAA_MGMT\n```\n\n### 6. Connect to S3 with aws-cli:\n```\nalias s3='AWS_ACCESS_KEY_ID=$NOOBAA_ACCESS_KEY AWS_SECRET_ACCESS_KEY=$NOOBAA_SECRET_KEY aws --endpoint $NOOBAA_S3 --no-verify-ssl s3'\ns3 ls\ns3 sync /var/log/ s3://first.bucket\ns3 ls s3://first.bucket\n```\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "noobaas.noobaa.io",
                        "version": "v1alpha1",
                        "kind": "NooBaa",
                        "displayName": "NooBaa",
                        "description": "A NooBaa system - Create this to start",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          }
                        ]
                      },
                      {
                        "name": "backingstores.noobaa.io",
                        "version": "v1alpha1",
                        "kind": "BackingStore",
                        "displayName": "BackingStore",
                        "description": "Storage target spec such as aws-s3, s3-compatible, PV's and more. Used in BacketClass to construct data placement policies."
                      },
                      {
                        "name": "bucketclasses.noobaa.io",
                        "version": "v1alpha1",
                        "kind": "BucketClass",
                        "displayName": "BucketClass",
                        "description": "Storage policy spec  tiering, mirroring, spreading. Combines BackingStores. Referenced by ObjectBucketClaims."
                      },
                      {
                        "name": "objectbucketclaims.objectbucket.io",
                        "version": "v1alpha1",
                        "kind": "ObjectBucketClaim",
                        "displayName": "ObjectBucketClaim",
                        "description": "Claim a bucket just like claiming a PV. Automate you app bucket provisioning by creating OBC with your app deployment. A secret and configmap (name=claim) will be created with access details for the app pods."
                      },
                      {
                        "name": "objectbuckets.objectbucket.io",
                        "version": "v1alpha1",
                        "kind": "ObjectBucket",
                        "displayName": "ObjectBucket",
                        "description": "Used under-the-hood. Created per ObjectBucketClaim and keeps provisioning information."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "oneagent",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/oneagent",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Dynatrace LLC",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Dynatrace LLC"
            },
            "packageName": "oneagent",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "dynatrace-monitoring.v0.3.1",
                "currentCSVDesc": {
                  "displayName": "Dynatrace OneAgent",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.3.1",
                  "provider": {
                    "name": "Dynatrace LLC"
                  },
                  "annotations": {
                    "alm-examples": "[{\n \"apiVersion\": \"dynatrace.com/v1alpha1\",\n \"kind\": \"OneAgent\",\n \"metadata\": {\n    \"name\": \"oneagent\",\n    \"namespace\": \"dynatrace\"\n },\n \"spec\": {\n    \"apiUrl\": \"https://ENVIRONMENTID.live.dynatrace.com/api\",\n    \"skipCertCheck\": false,\n    \"tokens\": \"\",\n    \"nodeSelector\": {},\n    \"tolerations\": [\n       {\n          \"effect\": \"NoSchedule\",\n          \"key\": \"node-role.kubernetes.io/master\",\n          \"operator\": \"Exists\"\n       }\n    ],\n    \"image\": \"\",\n    \"args\": [\n       \"APP_LOG_CONTENT_ACCESS=1\"\n    ],\n    \"env\": []\n }\n}]",
                    "capabilities": "Deep Insights",
                    "categories": "Monitoring,Logging \u0026 Tracing,OpenShift Optional",
                    "certified": "false",
                    "containerImage": "quay.io/dynatrace/dynatrace-oneagent-operator:v0.3.1",
                    "createdAt": "2019-02-06 12:59:59",
                    "description": "Install full-stack monitoring of Kubernetes clusters with the Dynatrace OneAgent.",
                    "repository": "https://github.com/Dynatrace/dynatrace-oneagent-operator",
                    "support": "Dynatrace"
                  },
                  "description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [Kubernetes clusters](https://www.dynatrace.com/technologies/kubernetes-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Before You Start\nAdd a Secret within the Namespace you're deploying the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively. For assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ kubectl -n dynatrace create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://\u003cENVIRONMENTID\u003e.live.dynatrace.com/api` . In Dynatrace Managed like `https://\u003cYourDynatraceServerURL\u003e/e/\u003cENVIRONMENTID\u003e/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/kubernetes-deploy).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "oneagents.dynatrace.com",
                        "version": "v1alpha1",
                        "kind": "OneAgent",
                        "displayName": "Dynatrace OneAgent",
                        "description": "Dyantrace OneAgent for full-stack monitoring",
                        "resources": [
                          {
                            "name": "",
                            "kind": "DaemonSet",
                            "version": "v1beta2"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "Dynatrace version being used."
                          },
                          {
                            "path": "updatedTimestamp",
                            "displayName": "Last Updated",
                            "description": "The timestamp when the instance was last updated.",
                            "x-descriptors": [
                              "urn:alm:descriptor:timestamp"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "tokens",
                            "displayName": "API and PaaS Tokens",
                            "description": "Credentials for the OneAgent to connect back to Dynatrace.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:core:v1:Secret"
                            ]
                          },
                          {
                            "path": "apiUrl",
                            "displayName": "API URL",
                            "description": "Location of the Dynatrace API to connect to, including your specific environment ID",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "skipCertCheck",
                            "displayName": "Skip Certificate Check",
                            "description": "Specifies if certificate checks should be skipped.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanCheck"
                            ]
                          },
                          {
                            "path": "nodeSelector",
                            "displayName": "Node Selector",
                            "description": "Node selector for where pods should be scheduled.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Node"
                            ]
                          },
                          {
                            "path": "image",
                            "displayName": "Image",
                            "description": "The Dynatrace installer container image."
                          },
                          {
                            "path": "resources",
                            "displayName": "Resource Requirements",
                            "description": "Define resources requests and limits for single Pods",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "open-liberty",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/open-liberty",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "IBM",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "IBM"
            },
            "packageName": "open-liberty",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "open-liberty-0.0.1",
                "currentCSVDesc": {
                  "displayName": "Open Liberty Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.0.1",
                  "provider": {
                    "name": "IBM"
                  },
                  "annotations": {
                    "alm-examples": "[\n   {\n      \"apiVersion\":\"openliberty.io/v1alpha1\",\n      \"kind\":\"OpenLiberty\",\n      \"metadata\":{\n         \"name\":\"demo3-openliberty\"\n      },\n      \"spec\":{\n         \"image\":{\n            \"extraEnvs\":[],\n            \"extraVolumeMounts\":[],\n            \"lifecycle\":{},\n            \"livenessProbe\":{},\n            \"pullPolicy\":\"IfNotPresent\",\n            \"pullSecret\":\"\",\n            \"readinessProbe\":{},\n            \"repository\":\"open-liberty\",\n            \"security\":{},\n            \"serverOverridesConfigMapName\":\"\",\n            \"tag\":\"javaee8\"\n         },\n         \"resourceNameOverride\":\"\",\n         \"deployment\":{\n            \"annotations\":{},\n            \"labels\":{}\n         },\n         \"pod\":{\n            \"annotations\":{},\n            \"extraContainers\":[],\n            \"extraInitContainers\":[],\n            \"extraVolumes\":[],\n            \"labels\":{},\n            \"security\":{}\n         },\n         \"service\":{\n            \"annotations\":{},\n            \"enabled\":true,\n            \"extraPorts\":[],\n            \"extraSelectors\":{},\n            \"labels\":{},\n            \"name\":\"\",\n            \"port\":9443,\n            \"targetPort\":9443,\n            \"type\":\"NodePort\"\n         },\n         \"jmsService\":{\n            \"enabled\":false,\n            \"port\":7286,\n            \"targetPort\":7286,\n            \"type\":\"NodePort\"\n         },\n         \"iiopService\":{\n            \"enabled\":false,\n            \"nonSecurePort\":2809,\n            \"nonSecureTargetPort\":2809,\n            \"securePort\":9402,\n            \"secureTargetPort\":9402,\n            \"type\":\"NodePort\"\n         },\n         \"ssl\":{\n            \"createClusterSSLConfiguration\":false,\n            \"enabled\":true,\n            \"useClusterSSLConfiguration\":false\n         },\n         \"ingress\":{\n            \"annotations\":{},\n            \"enabled\":false,\n            \"host\":\"\",\n            \"labels\":{},\n            \"path\":\"/\",\n            \"rewriteTarget\":\"/\",\n            \"secretName\":\"\"\n         },\n         \"persistence\":{\n            \"fsGroupGid\":null,\n            \"name\":\"liberty-pvc\",\n            \"selector\":{\n               \"label\":\"\",\n               \"value\":\"\"\n            },\n            \"size\":\"1Gi\",\n            \"storageClassName\":\"\",\n            \"useDynamicProvisioning\":true\n         },\n         \"logs\":{\n            \"consoleFormat\":\"json\",\n            \"consoleLogLevel\":\"info\",\n            \"consoleSource\":\"message,trace,accessLog,ffdc\",\n            \"persistLogs\":false,\n            \"persistTransactionLogs\":false\n         },\n         \"microprofile\":{\n            \"health\":{\n               \"enabled\":false\n            }\n         },\n         \"monitoring\":{\n            \"enabled\":false\n         },\n         \"replicaCount\":1,\n         \"autoscaling\":{\n            \"enabled\":false,\n            \"maxReplicas\":10,\n            \"minReplicas\":1,\n            \"targetCPUUtilizationPercentage\":50\n         },\n         \"resources\":{\n            \"constraints\":{\n               \"enabled\":false\n            },\n            \"limits\":{\n               \"cpu\":\"500m\",\n               \"memory\":\"512Mi\"\n            },\n            \"requests\":{\n               \"cpu\":\"500m\",\n               \"memory\":\"512Mi\"\n            }\n         },\n         \"arch\":{\n            \"amd64\":\"2 - No preference\",\n            \"ppc64le\":\"2 - No preference\",\n            \"s390x\":\"2 - No preference\"\n         },\n         \"env\":{\n          \"jvmArgs\":\"\"\n         },\n         \"rbac\":{\n            \"install\":true\n         }\n      }\n   }\n]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Application Runtime",
                    "certified": "false",
                    "containerImage": "openliberty/operator:0.0.1",
                    "createdAt": "2019-05-16T12:00:00.000-0500",
                    "description": "Installs a Jakarta EE / MicroProfile / Spring application running on Open Liberty.",
                    "repository": "https://github.com/OpenLiberty/open-liberty-operator",
                    "support": "IBM"
                  },
                  "description": "Installs a Jakarta EE / MicroProfile / Spring application running on Open Liberty.  \nThis is an alpha version and is not intended to be used in production. \n\n## Building an Application Image\n  \n  The first step is to build an application image that contains your application and Open Liberty configuration.\n  \n  See our [Open Liberty official GitHub repository](https://github.com/OpenLiberty/ci.docker#building-an-application-image) for details on how to build an application image with Open Liberty as the base layer.\n\n## Configuration\n\n  For a complete list of configuration items please see [this table](https://github.com/IBM/charts/blob/master/stable/ibm-open-liberty/README.md#configuration).\n\n  When running on an OpenShift environment, define your Security Context Constraints (SCC) following the instructions under the install security section [here](https://github.com/OpenLiberty/open-liberty-operator).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "openliberties.openliberty.io",
                        "version": "v1alpha1",
                        "kind": "OpenLiberty",
                        "displayName": "Open Liberty",
                        "description": "Open Liberty Application",
                        "resources": [
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Ingress",
                            "version": "v1beta1"
                          },
                          {
                            "name": "",
                            "kind": "HorizontalPodAutoscaler",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Namespaces",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "OpenLiberty",
                            "version": "v1alpha1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Role",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "RoleBinding",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ServiceAccount",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "conditions",
                            "displayName": "Conditions",
                            "description": "Current conditions.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "image.repository",
                            "displayName": "Liberty image repository",
                            "description": "Docker registry to pull Liberty image from.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "image.tag",
                            "displayName": "Image tag",
                            "description": "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "image.pullPolicy",
                            "displayName": "Image pull policy",
                            "description": "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "image.pullSecret",
                            "displayName": "Image pull secret",
                            "description": "If using a registry that requires authentication, the name of the secret containing credentials.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "image.extraEnvs",
                            "displayName": "Image Additional Environment Variables",
                            "description": "Additional environment variables that will be set."
                          },
                          {
                            "path": "image.serverOverridesConfigMapName",
                            "displayName": "ConfigMap with server configuration overrides",
                            "description": "Name of the ConfigMap that contains server configuration overrides (within key 'server-overrides.xml') to configure your Liberty server at deployment.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "image.extraVolumeMounts",
                            "displayName": "Extra Volume Mounts",
                            "description": "Additional Volume Mounts for server pods."
                          },
                          {
                            "path": "resourceNameOverride",
                            "displayName": "Resource Name Override",
                            "description": "This name will be appended to the release name to form the name of resources created by the chart.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "pod.extraInitContainers",
                            "displayName": "Extra Init Containers",
                            "description": "Additional Init Containers which are run before the containers are started."
                          },
                          {
                            "path": "pod.extraContainers",
                            "displayName": "Extra containers",
                            "description": "Additional containers to be added to the server pods."
                          },
                          {
                            "path": "pod.extraVolumes",
                            "displayName": "Extra Volumes",
                            "description": "Additional Volumes for server pods."
                          },
                          {
                            "path": "service.type",
                            "displayName": "HTTP Service Type",
                            "description": "An API object that describes how to access applications, such as a set of Pods, and can describe ports and load-balancers.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "service.name",
                            "displayName": "HTTP Service Name",
                            "description": "The name of the service.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "service.port",
                            "displayName": "HTTP Service Port",
                            "description": "The HTTP port that the container will expose.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "service.targetPort",
                            "displayName": "HTTP Service Target Port",
                            "description": "A service can map an incoming HTTP port to the targetPort.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "service.enabled",
                            "displayName": "Enable HTTP Service",
                            "description": "Specifies whether HTTP protocol is enabled.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "service.extraPorts",
                            "displayName": "Additional HTTP Service Ports",
                            "description": "List of additional ports that are exposed by this service."
                          },
                          {
                            "path": "jmsService.type",
                            "displayName": "JMS Service Type",
                            "description": "An API object that describes how to access applications, such as a set of Pods, and can describe ports and load-balancers.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "jmsService.port",
                            "displayName": "JMS Port",
                            "description": "The JMS port that the container will expose. This port uses SSL encryption if you enable SSL for this chart.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "jmsService.targetPort",
                            "displayName": "JMS Target port",
                            "description": "A service can map an incoming JMS port to the targetPort. This port uses SSL encryption if you enable SSL for this chart.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "jmsService.enabled",
                            "displayName": "Enable JMS Service",
                            "description": "Specifies whether JMS port is enabled.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "iiopService.type",
                            "displayName": "IIOP Service Type",
                            "description": "An API object that describes how to access applications, such as a set of Pods, and can describe ports and load-balancers.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "iiopService.nonSecurePort",
                            "displayName": "IIOP Port",
                            "description": "The IIOP port that the container will expose.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "iiopService.nonSecureTargetPort",
                            "displayName": "IIOP Target port",
                            "description": "A service can map an incoming IIOP port to the targetPort.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "iiopService.securePort",
                            "displayName": "IIOP Secure Port",
                            "description": "The secure IIOP port that the container will expose.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "iiopService.secureTargetPort",
                            "displayName": "IIOP Secure Target port",
                            "description": "A service can map an incoming secure IIOP port to the targetPort.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "iiopService.enabled",
                            "displayName": "Enable IIOP Service",
                            "description": "Specifies whether IIOP port is enabled.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "ssl.enabled",
                            "displayName": "Enable SSL",
                            "description": "Specifies whether SSL is enabled. Set to true if SSL will be enabled via generated SSL configuration or if Liberty is configured to use SSL in the Docker image.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "ssl.useClusterSSLConfiguration",
                            "displayName": "Use cluster SSL configuration",
                            "description": "Set to true if you want to use the generated SSL ConfigMap and secrets. This setting requires you to check 'Create cluster SSL configuration' the very first use. The benefit of reusing the generated SSL configuration between multiple Liberty servers is so that they can easily communicate with each other over SSL. Set to false if the Docker image already has SSL configured.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "ssl.createClusterSSLConfiguration",
                            "displayName": "Create cluster SSL configuration",
                            "description": "Specifies whether to generate Liberty SSL ConfigMap and secrets to be used in the cluster. Only generate the SSL configuration one time. If you generate the configuration a second time, errors might occur.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "ingress.enabled",
                            "displayName": "Enable Ingress",
                            "description": "Specifies whether to use Ingress.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "ingress.rewriteTarget",
                            "displayName": "Ingress Rewrite target",
                            "description": "In some scenarios the exposed URL in the backend service differs from the specified path in the Ingress rule. Without a rewrite any request will return 404. To circumvent this, you can set rewrite target to the path expected by the service.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "ingress.path",
                            "displayName": "Ingress Path",
                            "description": "Path must match the content of an incoming request before the loadbalancer directs traffic to the backend.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "ingress.host",
                            "displayName": "Ingress Host",
                            "description": "Hostname used to access Liberty via Ingress (e.g. liberty.\u003cicp proxy node address\u003e.nip.io). See chart readme documentation for more details.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "ingress.secretName",
                            "displayName": "Ingress Secret name",
                            "description": "Name of the secret containing Ingress TLS certificate and key. See chart readme documentation for more details.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "persistence.name",
                            "displayName": "PVC Prefix Name",
                            "description": "A prefix for the name of the persistence volume claim (PVC). A PVC will not be created unless either 'Persist logs' or 'Persist transaction logs' is checked.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "persistence.size",
                            "displayName": "PV Size",
                            "description": "Size of the volume to hold all the persisted data.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "persistence.fsGroupGid",
                            "displayName": "PV File system group ID",
                            "description": "The file system group ID to use for volumes that support ownership management."
                          },
                          {
                            "path": "persistence.useDynamicProvisioning",
                            "displayName": "PV Use dynamic provisioning",
                            "description": "Select this checkbox to allow the cluster to automatically provision new storage resource and create PersistentVolume objects.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "persistence.storageClassName",
                            "displayName": "PV Storage class name",
                            "description": "Specifies a StorageClass pre-created by the sysadmin. When set to \"\", then the PVC is bound to the default storageClass setup by the Kube Administrator.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "persistence.selector.label",
                            "displayName": "PV Selector label",
                            "description": "When matching a PV, the label is used to find a match on the key.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "persistence.selector.value",
                            "displayName": "PV Selector value",
                            "description": "When matching a PV, the value is used to find a match on the value.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "logs.persistLogs",
                            "displayName": "Persist Liberty logs",
                            "description": "Select this checkbox to store server logs on a persistent volume so that the data is preserved if the pod is stopped.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "logs.persistTransactionLogs",
                            "displayName": "Persist transaction logs",
                            "description": "Select this checkbox to store transaction logs data on a persistent volume so that the transaction logs can be recovered if the pod is stopped.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "logs.consoleFormat",
                            "displayName": "Liberty Console logging format",
                            "description": "Specifies container log output format.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "logs.consoleLogLevel",
                            "displayName": "Liberty Console logging level",
                            "description": "Controls the granularity of messages that go to the container log.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "logs.consoleSource",
                            "displayName": "Liberty Console logging sources",
                            "description": "Specify sources that are written to the container log. Use a comma separated list for multiple sources.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "microprofile.health.enabled",
                            "displayName": "Enable Microprofile health",
                            "description": "Specifies whether to use the MicroProfile health endpoint (`/health`) as a readiness probe of the container. Requires HTTP service to be enabled.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "monitoring.enabled",
                            "displayName": "Enable Liberty monitoring",
                            "description": "Specifies whether to use Liberty features `monitor-1.0` and `mpMetrics-1.1` to monitor the server runtime environment and application metrics. Requires HTTP service to be enabled.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "replicaCount",
                            "displayName": "Number of pod replicas",
                            "description": "The number of desired replica pods that run simultaneously.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "autoscaling.enabled",
                            "displayName": "Enable automatic scaling",
                            "description": "Specifies whether a horizontal pod autoscaler (HPA) is deployed. Note that enabling this field disables the Number of replicas field.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "autoscaling.targetCPUUtilizationPercentage",
                            "displayName": "Autoscale Target CPU utilization percentage",
                            "description": "Target average CPU utilization (represented as a percentage of requested CPU) over all the pods.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "autoscaling.minReplicas",
                            "displayName": "Autoscale Minimum replicas",
                            "description": "Lower limit for the number of pods that can be set by the autoscaler.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "autoscaling.maxReplicas",
                            "displayName": "Autoscale Maximum replicas",
                            "description": "Upper limit for the number of pods that can be set by the autoscaler.  Cannot be lower than the minimum number of replicas.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "resources.constraints.enabled",
                            "displayName": "Enable Helm resource constraints",
                            "description": "Specifies whether the resource constraints in this Helm chart are enabled.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "resources",
                            "displayName": "CPU limit",
                            "description": "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core).",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          },
                          {
                            "path": "arch.amd64",
                            "displayName": "Intel 64-bit architecture preference",
                            "description": "Scheduling priority for using the Intel 64-bit architecture for worker nodes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "arch.ppc64le",
                            "displayName": "PowerPC 64-bit LE architecture preference",
                            "description": "Scheduling priority for using the PowerPC 64-bit LE architecture for worker nodes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "arch.s390x",
                            "displayName": "s390x zLinux architecture preference",
                            "description": "Scheduling priority for using s390x zLinux architecture for worker nodes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "env.jvmArgs",
                            "displayName": "Liberty JVM_ARGS",
                            "description": "Liberty runtime JVM arguments.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "sessioncache.enabled",
                            "displayName": "Enable Hazelcast Session Caching",
                            "description": "Enable Hazelcast Session Caching by enabling and configuring Liberty feature sessionCaching-1.0 and enabling Hazelcast client provider libraries.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "sessioncache.hazelcast.embedded",
                            "displayName": "Embedded Hazelcast Topology",
                            "description": "Embedded Hazelcast Topology (true). Client/Server Hazelcast Topology (false)."
                          },
                          {
                            "path": "sessioncache.hazelcast.image.repository",
                            "displayName": "Hazelcast Docker image repository",
                            "description": "Hazelcast Docker image repository for client provider libraries."
                          },
                          {
                            "path": "sessioncache.hazelcast.image.tag",
                            "displayName": "Hazelcast Docker image tag",
                            "description": "Hazelcast Docker image tag for client provider libraries."
                          },
                          {
                            "path": "sessioncache.hazelcast.image.pullPolicy",
                            "displayName": "Hazelcast Docker image pull policy",
                            "description": "Defaults to 'Always' when the latest tag is specified. Otherwise the default is 'IfNotPresent'.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "rbac.install",
                            "displayName": "Install",
                            "description": "Install RBAC roles and bindings.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "openebs",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/openebs",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "OpenEBS project",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "OpenEBS project"
            },
            "packageName": "openebs",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "openebsoperator.v1.0.0",
                "currentCSVDesc": {
                  "displayName": "OpenEBS",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.0.0",
                  "provider": {
                    "name": "OpenEBS project"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"openebs.io/v1alpha1\",\n    \"kind\": \"OpenEBSInstallTemplate\",\n    \"metadata\": {\n      \"name\": \"oebs\",\n      \"namespace\": \"openebs\"\n    },\n    \"spec\": {\n      \"rbac\": {\n        \"create\": \"true\"\n      },\n      \"serviceAccount\": {\n        \"create\": \"true\",\n        \"name\": \"openebs-maya-operator\"\n      },\n      \"release\": {\n        \"version\": \"1.0.0\"\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\"\n      },\n      \"apiserver\": {\n        \"image\": \"quay.io/openebs/m-apiserver\",\n        \"imageTag\": \"1.0.0\",\n        \"replicas\": \"1\",\n        \"ports\": {\n           \"externalPort\": \"5656\",\n           \"internalPort\": \"5656\"\n        },\n        \"sparse\": {\n          \"enabled\": \"false\"\n        },\n        \"healthCheck\": {\n           \"initialDelaySeconds\": \"50\",\n           \"periodSeconds\": \"60\"\n        }\n      },\n      \"provisioner\": {\n        \"image\": \"quay.io/openebs/openebs-k8s-provisioner\",\n        \"imageTag\": \"1.0.0\",\n        \"replicas\": \"1\",\n        \"healthCheck\": {\n          \"initialDelaySeconds\": \"30\",\n          \"periodSeconds\": \"60\"\n        }\n      },\n      \"localprovisioner\": {\n        \"image\": \"quay.io/openebs/provisioner-localpv\",\n        \"imageTag\": \"1.0.0\",\n        \"helperImage\": \"quay.io/openebs/openebs-tools\",\n        \"helperImageTag\": \"3.8\",\n        \"replicas\": \"1\",\n        \"basePath\": \"/var/openebs/local\",\n        \"healthCheck\": {\n          \"initialDelaySeconds\": \"30\",\n          \"periodSeconds\": \"60\"\n        }\n      },\n      \"snapshotOperator\": {\n         \"controller\": {\n           \"image\": \"quay.io/openebs/snapshot-controller\",\n           \"imageTag\": \"1.0.0\"\n         },\n         \"provisioner\": {\n           \"image\": \"quay.io/openebs/snapshot-provisioner\",\n           \"imageTag\": \"1.0.0\"\n         },\n         \"replicas\": \"1\",\n         \"upgradeStrategy\": \"Recreate\",\n         \"healthCheck\": {\n           \"initialDelaySeconds\": \"30\",\n           \"periodSeconds\": \"60\"\n         }\n      },\n      \"ndm\": {\n        \"image\": \"quay.io/openebs/node-disk-manager-amd64\",\n        \"imageTag\": \"v0.4.0\",\n        \"sparse\": {\n          \"path\": \"/var/openebs/sparse\",\n          \"size\": \"10737418240\",\n          \"count\": \"1\"\n        },\n        \"filters\": {\n          \"excludeVendors\": \"CLOUDBYT,OpenEBS\",\n          \"includePaths\": \"\",\n          \"excludePaths\": \"loop,fd0,sr0,/dev/ram,/dev/dm-,/dev/md\"\n        },\n        \"healthCheck\": {\n          \"initialDelaySeconds\": \"30\",\n          \"periodSeconds\": \"60\"\n        }\n      },\n      \"ndmOperator\": {\n        \"image\": \"quay.io/openebs/node-disk-operator-amd64\",\n        \"imageTag\": \"v0.4.0\", \n        \"replicas\": \"1\", \n        \"upgradeStrategy\": \"Recreate\",\n        \"readinessCheck\": {\n          \"initialDelaySeconds\": \"4\",\n          \"periodSeconds\": \"10\",\n          \"failureThreshold\": \"1\"\n        },\n        \"cleanupImage\": \"quay.io/openebs/linux-utils\",\n        \"cleanupImageTag\": \"3.9\"\n      },\n      \"webhook\": {\n        \"image\": \"quay.io/openebs/admission-server\",\n        \"imageTag\": \"1.0.0\",\n        \"generateTLS\": \"true\",\n        \"replicas\": \"1\"\n      },\n      \"jiva\": {\n        \"image\": \"quay.io/openebs/jiva\",\n        \"imageTag\": \"1.0.0\",\n        \"replicas\": \"3\"\n      },\n      \"cstor\": {\n        \"pool\": {\n          \"image\": \"quay.io/openebs/cstor-pool\",\n          \"imageTag\": \"1.0.0\"\n        },\n        \"poolMgmt\": {\n          \"image\": \"quay.io/openebs/cstor-pool-mgmt\",\n          \"imageTag\": \"1.0.0\"\n        },\n        \"target\": {\n          \"image\": \"quay.io/openebs/cstor-istgt\",\n          \"imageTag\": \"1.0.0\"\n        },\n        \"volumeMgmt\": {\n          \"image\": \"quay.io/openebs/cstor-volume-mgmt\",\n          \"imageTag\": \"1.0.0\"\n        }\n      },\n      \"policies\": {\n        \"monitoring\": {\n          \"enabled\": \"true\",\n          \"image\": \"quay.io/openebs/m-exporter\",\n          \"imageTag\": \"1.0.0\"\n        }\n      },\n      \"analytics\": {\n        \"enabled\": \"true\",\n        \"pingInterval\": \"24h\"\n      }\n    }\n  }\n]\n",
                    "capabilities": "Basic Install",
                    "categories": "Storage",
                    "certified": "false",
                    "containerImage": "index.docker.io/openebs/helm-operator:v0.0.1",
                    "createdAt": "2019-06-13 10:28:08",
                    "description": "Creates and maintains OpenEBS Control Plane deployments",
                    "repository": "https://github.com/openebs/openebs",
                    "support": "https://slack.openebs.io/"
                  },
                  "description": "**OpenEBS** is a leading open source container attached storage solution that  enables the use of containers for mission-critical, persistent workloads and  for other stateful workloads such as logging or Prometheus for example.\nOpenEBS itself is deployed as just another container on your host and enables  storage services that can be designated on a per pod, application, cluster  or container level, including: \n* Data persistence across nodes\n* Synchronization of data across availability zones and cloud providers\n* A common layer whether you are running on the cloud, or your bare metal\n* Integration with Kubernetes, so developer and application intent flows into OpenEBS\n* Management of tiering to and from S3 and other targets.\n## OpenEBS Operator\nOpenEBS primarily provides container attached block storage (iSCSI volumes) by leveraging/aggregating the  storage on the nodes, with the storage controller itself running as a container. Different storage engines  (Jiva \u0026 cStor) are supported, with tools available to dynamically provision Kubernetes Local PVs.  The volumes are dynamically provisioned via PersistentVolumeClaims and are managed by a control plane component  called \"maya\", which also runs as a deployment in the K8s cluster. In addition to maya, a typical OpenEBS  installation comprises several other resources, which aid with various functionalities, ranging from snapshotting  to disk management. All these components are described briefly below: \n* **Maya-API-Server** - A storage orchestrator which integrates into Kubernetes workflow to help provision \n  and manage OpenEBS Jiva \u0026 cStor (storage engine) volumes\n\n* **Dynamic-OpenEBS-Provisioner** - A Kubernetes external storage provisioner that utilizes APIs exposed by maya-apiserver \n  to perform provision \u0026 delete operations of Jiva \u0026 cStor volumes\n\n* **Dynamic-LocalPV-Provisioner** - A dynamic provisioner for Kubernetes Local PVs\n* **OpenEBS-Snapshot-Operator** - A Kubernetes snapshot controller that creates \u0026 restores OpenEBS volume snapshots\n* **Node-Disk-Manager** - A disk management controller which identifies available disks, maintains inventory, and \n  dynamically attaches/detaches disks to backend storage pods \n\nThe helm-based OpenEBS Operator eases the setup of all the above mentioned components, with a simple custom resource  provided to define the install options, thereby enabling applications to start using the OpenEBS storageclasses in  their PVCs. The OpenEBSInstallTemplate CR can be used to specify start-up parameters \u0026 also update/overwrite the  definitions post install. \n## Getting Started\n* Try the quickstart [guide](https://docs.openebs.io/docs/next/quickstart.html)\n* To learn how to contribute, please read the [contribution guide](https://github.com/openebs/openebs/blob/master/CONTRIBUTING.md)\n* OpenEBS welcomes your feedback and contributions in any form possible. [Join our Community](https://openebs.org/community)\n## License\nOpenEBS is distributed under the  [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.txt)\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "openebsinstalltemplates.openebs.io",
                        "version": "v1alpha1",
                        "kind": "OpenEBSInstallTemplate",
                        "displayName": "OpenEBS Install Template",
                        "description": "Represents a OpenEBS Install Operator",
                        "resources": [
                          {
                            "name": "",
                            "kind": "ServiceAccount",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ClusterRole",
                            "version": "rbac.authorization.k8s.io/v1beta1"
                          },
                          {
                            "name": "",
                            "kind": "ClusterRoleBinding",
                            "version": "rbac.authorization.k8s.io/v1beta1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "apps/v1beta1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "DaemonSet",
                            "version": "extensions/v1beta1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ValidatingWebhookConfiguration",
                            "version": "admissionregistration.k8s.io/v1beta1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "conditions",
                            "displayName": "Conditions",
                            "description": "ClusterServiceVersion Condition",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "image",
                            "displayName": "Image",
                            "description": "Image pull policy"
                          },
                          {
                            "path": "rbac",
                            "displayName": "RBAC",
                            "description": "RBAC creation policy"
                          },
                          {
                            "path": "serviceAccount",
                            "displayName": "ServiceAccount",
                            "description": "ServiceAccount creation policy"
                          },
                          {
                            "path": "release",
                            "displayName": "Release",
                            "description": "OpenEBS release version"
                          },
                          {
                            "path": "apiserver",
                            "displayName": "MayaAPIServer",
                            "description": "Maya ApiServer Attributes"
                          },
                          {
                            "path": "provisioner",
                            "displayName": "Provisioner",
                            "description": "OpenEBS Provisioner Attributes"
                          },
                          {
                            "path": "localprovisioner",
                            "displayName": "LocalProvisioner",
                            "description": "LocalPV Provisioner Attributes"
                          },
                          {
                            "path": "snapshotOperator",
                            "displayName": "SnapshotOperator",
                            "description": "OpenEBS Snapshot Operator Attributes"
                          },
                          {
                            "path": "ndm",
                            "displayName": "NodeDeviceManager",
                            "description": "Node Device Manager Attributes"
                          },
                          {
                            "path": "ndmOperator",
                            "displayName": "NDMOperator",
                            "description": "NDM Operator Attributes"
                          },
                          {
                            "path": "webhook",
                            "displayName": "WebHook",
                            "description": "Validating AdmissionServer Webhook Attributes"
                          },
                          {
                            "path": "jiva",
                            "displayName": "Jiva",
                            "description": "Jiva Data Engine Attributes"
                          },
                          {
                            "path": "cstor",
                            "displayName": "cStor",
                            "description": "cStor Data Engine Attributes"
                          },
                          {
                            "path": "policies",
                            "displayName": "Policies",
                            "description": "Monitoring Policies"
                          },
                          {
                            "path": "analytics",
                            "displayName": "Analytics",
                            "description": "Google Analytics Attributes"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "opsmx-spinnaker-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/opsmx-spinnaker-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "OpsMx",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "OpsMx"
            },
            "packageName": "opsmx-spinnaker-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "opsmx-spinnaker-operator.v1.13.1",
                "currentCSVDesc": {
                  "displayName": "Opsmx Spinnaker Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.13.1",
                  "provider": {
                    "name": "OpsMx"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"charts.helm.k8s.io/v1alpha1\",\"kind\":\"OpsmxSpinnakerOperator\",\"metadata\":{\"name\":\"op-spin\"},\"spec\":{\"halyard\":{\"spinnakerVersion\":\"1.13.1\",\"image\":{\"repository\":\"opsmx11/operator-halyard\",\"tag\":\"1.18.0\"}},\"dockerRegistries\":[{\"name\":\"dockerhub\",\"address\":\"index.docker.io\",\"repositories\":[\"library/alpine\",\"library/ubuntu\",\"library/centos\",\"library/nginx\"]}],\"spinnakerFeatureFlags\":[\"artifacts\",\"jobs\"],\"minio\":{\"enabled\":true,\"imageTag\":\"RELEASE.2018-06-09T02-18-09Z\",\"serviceType\":\"ClusterIP\",\"accessKey\":\"spinnakeradmin\",\"secretKey\":\"spinnakeradmin\",\"bucket\":\"spinnaker\",\"nodeSelector\":{},\"persistence\":{\"enabled\":false}},\"rbac\":{\"create\":false},\"serviceAccount\":{\"create\":false,\"halyardName\":\"opsmx-spinnaker-operator\",\"spinnakerName\":null}}}]",
                    "capabilities": "Basic Install",
                    "categories": "Integration \u0026 Delivery",
                    "certified": "false",
                    "containerImage": "docker.io/opsmx11/opsmx-spinnaker-operator:v0.1",
                    "createdAt": "2019-04-08 19:49:35",
                    "description": "Spinnaker is an open source, multi-cloud continuous delivery platform to perform software releases with high velocity and confidence.",
                    "support": "OpsMx"
                  },
                  "description": "# Spinnaker as an Operator\n\nThis Operator allows users to spin up Open Enterprise Spinnaker (OES) to manage deployments etc., using Openshift CRD\u0026#39;s. With the help of Spinnaker Services Operator, users will have the convenience and confidence of simplified approach to execute CI/CD process with high velocity and quality deployments in all environments. \n\n## What is Spinnaker?\n\n* Spinnaker is an Open Source, multi-cloud Continuous delivery platform to perform software releases with high velocity and confidence.\n* Spinnaker helps user to create deployment pipelines that run integration and system tests, spin up and down server groups, and monitor your rollouts.\n* OES has enterprise value-adds as described at http://opsmx.com\n\n### List of Features\n\n* Multi-Cloud Deployment - Deploy your VM or Containers or functions across most public and private cloud including AWS EC2, ECS, EKS, Lambda, Kubernetes, Google Compute Engine, Google Kubernetes Engine, Google App Engine, Microsoft Azure, OpenStack, with Oracle Bare Metal and DC/OS.\n* Automated Releases with Pipelines - Create deployment pipelines that run integration and system tests, spin up and down server groups, and monitor your rollouts. Trigger pipelines via git events, Jenkins, Travis CI, Docker, CRON, or other Spinnaker pipelines\n* Pipeline-as-code - Manage the pipeline as code (JSON) or interact with pipeline using API or UI.\n* Safe Deployment Strategies - Deploy using Canary or Red/Black (Blue/Green) or Rolling update and enable automated Canary analysis to ensure safety of the new updates before full-rollout to production\n* 1-click Rollback - Rolling back new deployments is never been easier with a 1-click rollback of images/configurations.\n* See more spinnaker.io or docs.opsmx.com\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "opsmxspinnakeroperators.charts.helm.k8s.io",
                        "version": "v1alpha1",
                        "kind": "OpsmxSpinnakerOperator",
                        "displayName": "opsmxspinnakeroperator",
                        "description": "OpsmxSpinnakerOperator"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "percona-server-mongodb-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/percona-server-mongodb-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Percona",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Percona"
            },
            "packageName": "percona-server-mongodb-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "percona-server-mongodb-operator.v1.1.0",
                "currentCSVDesc": {
                  "displayName": "Percona Server MongoDB Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.1.0",
                  "provider": {
                    "name": "Percona"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"psmdb.percona.com/v1\",\"kind\":\"PerconaServerMongoDB\",\"metadata\":{\"name\":\"my-cluster-name\"},\"spec\":{\"allowUnsafeConfigurations\":false,\"backup\":{\"coordinator\":{\"affinity\":{\"antiAffinityTopologyKey\":\"kubernetes.io/hostname\"},\"enableClientsLogging\":true,\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"0.2G\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"0.1G\",\"storage\":\"1Gi\"}}},\"debug\":true,\"enabled\":true,\"image\":\"percona/percona-server-mongodb-operator:1.1.0-backup\",\"restartOnFailure\":true,\"storages\":null,\"tasks\":null},\"image\":\"percona/percona-server-mongodb-operator:1.1.0-mongod4.0.9\",\"imagePullPolicy\":\"Always\",\"mongod\":{\"net\":{\"hostPort\":0,\"port\":27017},\"operationProfiling\":{\"mode\":\"slowOp\",\"rateLimit\":100,\"slowOpThresholdMs\":100},\"security\":{\"redactClientLogData\":false},\"setParameter\":{\"ttlMonitorSleepSecs\":60,\"wiredTigerConcurrentReadTransactions\":128,\"wiredTigerConcurrentWriteTransactions\":128},\"storage\":{\"engine\":\"wiredTiger\",\"inMemory\":{\"engineConfig\":{\"inMemorySizeRatio\":0.9}},\"mmapv1\":{\"nsSize\":16,\"smallfiles\":false},\"wiredTiger\":{\"collectionConfig\":{\"blockCompressor\":\"snappy\"},\"engineConfig\":{\"cacheSizeRatio\":0.5,\"directoryForIndexes\":false,\"journalCompressor\":\"snappy\"},\"indexConfig\":{\"prefixCompression\":true}}}},\"pause\":false,\"pmm\":{\"enabled\":false,\"image\":\"perconalab/pmm-client:1.17.1\",\"serverHost\":\"monitoring-service\"},\"replsets\":[{\"affinity\":{\"antiAffinityTopologyKey\":\"kubernetes.io/hostname\"},\"arbiter\":{\"affinity\":{\"antiAffinityTopologyKey\":\"kubernetes.io/hostname\"},\"enabled\":false,\"size\":1},\"expose\":{\"enabled\":false,\"exposeType\":\"LoadBalancer\"},\"name\":\"rs0\",\"podDisruptionBudget\":{\"maxUnavailable\":1},\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"0.5G\"},\"requests\":{\"cpu\":\"300m\",\"memory\":\"0.5G\"}},\"size\":3,\"volumeSpec\":{\"persistentVolumeClaim\":{\"resources\":{\"requests\":{\"storage\":\"3Gi\"}}}}}],\"secrets\":{\"users\":\"my-cluster-name-secrets\"}}},{\"apiVersion\":\"psmdb.percona.com/v1\",\"kind\":\"PerconaServerMongoDBRestore\",\"metadata\":{\"name\":\"restore1\"},\"spec\":{\"backupName\":\"backup1\",\"clusterName\":\"my-cluster-name\"}},{\"apiVersion\":\"psmdb.percona.com/v1\",\"kind\":\"PerconaServerMongoDBBackup\",\"metadata\":{\"name\":\"backup1\"},\"spec\":{\"psmdbCluster\":\"my-cluster-name\",\"storageName\":\"minio\"}}]",
                    "capabilities": "Deep Insights",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "percona/percona-server-mongodb-operator:1.1.0",
                    "createdAt": "2019-05-21 20:35:26",
                    "description": "Percona Server for MongoDB Operator manages the lifecycle of Percona Server for MongoDB replica sets",
                    "repository": "https://github.com/percona/percona-server-mongodb-operator",
                    "support": "Percona"
                  },
                  "description": "\n## Percona is Cloud Native\n\nThe Percona Kubernetes Operator for Percona Server for MongoDB automates the creation, alteration, or deletion of nodes in your cluster environment. It can be used to instantiate a new database cluster or to scale an existing database cluster. The Operator contains all necessary Kubernetes settings to provide a proper and consistent Percona Server for MongoDB replica set.\n\nConsult the [documentation](https://percona.github.io/percona-server-mongodb-operator/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** – change the `size` parameter to [add or remove members](https://percona.github.io/percona-server-mongodb-operator/install/scaling) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://percona.github.io/percona-server-mongodb-operator/install/monitoring) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** – [configure automatic backups](https://percona.github.io/percona-server-mongodb-operator/configure/backups) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://percona.github.io/percona-server-mongodb-operator/configure/arbiter), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://percona.github.io/percona-server-mongodb-operator/configure/expose) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://percona.github.io/percona-server-mongodb-operator/configure/storage) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_USER: cG1t\n  PMM_SERVER_PASSWORD: c3VwYXxefHBheno=\n```",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "perconaservermongodbs.psmdb.percona.com",
                        "version": "v1",
                        "kind": "PerconaServerMongoDB",
                        "displayName": "PerconaServerMongoDB",
                        "description": "Instance of a Percona Server for MongoDB replica set"
                      },
                      {
                        "name": "perconaservermongodbbackups.psmdb.percona.com",
                        "version": "v1",
                        "kind": "PerconaServerMongoDBBackup",
                        "displayName": "PerconaServerMongoDBBackup",
                        "description": "Instance of a Percona Server for MongoDB Backup"
                      },
                      {
                        "name": "perconaservermongodbrestores.psmdb.percona.com",
                        "version": "v1",
                        "kind": "PerconaServerMongoDBRestore",
                        "displayName": "PerconaServerMongoDBRestore",
                        "description": "Instance of a Percona Server for MongoDB Restore"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "percona-xtradb-cluster-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/percona-xtradb-cluster-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Percona",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Percona"
            },
            "packageName": "percona-xtradb-cluster-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "percona-xtradb-cluster-operator.v1.1.0",
                "currentCSVDesc": {
                  "displayName": "Percona XtraDB Cluster Operator",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.1.0",
                  "provider": {
                    "name": "Percona"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"pxc.percona.com/v1\",\"kind\":\"PerconaXtraDBCluster\",\"metadata\":{\"finalizers\":[\"delete-pxc-pods-in-order\"],\"name\":\"cluster1\"},\"spec\":{\"backup\":{\"image\":\"percona/percona-xtradb-cluster-operator:1.1.0-backup\",\"schedule\":[{\"keep\":3,\"name\":\"sat-night-backup\",\"schedule\":\"0 0 * * 6\",\"storageName\":\"s3-us-west\"},{\"keep\":5,\"name\":\"daily-backup\",\"schedule\":\"0 0 * * *\",\"storageName\":\"fs-pvc\"}],\"storages\":{\"fs-pvc\":{\"type\":\"filesystem\",\"volume\":{\"persistentVolumeClaim\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"6Gi\"}}}}},\"s3-us-west\":{\"s3\":{\"bucket\":\"S3-BACKUP-BUCKET-NAME-HERE\",\"credentialsSecret\":\"my-cluster-name-backup-s3\",\"region\":\"us-west-2\"},\"type\":\"s3\"}}},\"pmm\":{\"enabled\":false,\"image\":\"perconalab/pmm-client:1.17.1\",\"serverHost\":\"monitoring-service\",\"serverUser\":\"pmm\"},\"proxysql\":{\"affinity\":{\"antiAffinityTopologyKey\":\"kubernetes.io/hostname\"},\"enabled\":true,\"gracePeriod\":30,\"image\":\"percona/percona-xtradb-cluster-operator:1.1.0-proxysql\",\"podDisruptionBudget\":{\"maxUnavailable\":1},\"resources\":{\"requests\":{\"cpu\":\"600m\",\"memory\":\"1G\"}},\"size\":3,\"volumeSpec\":{\"persistentVolumeClaim\":{\"resources\":{\"requests\":{\"storage\":\"2Gi\"}}}}},\"pxc\":{\"affinity\":{\"antiAffinityTopologyKey\":\"kubernetes.io/hostname\"},\"allowUnsafeConfigurations\":false,\"gracePeriod\":600,\"image\":\"percona/percona-xtradb-cluster-operator:1.1.0-pxc\",\"podDisruptionBudget\":{\"maxUnavailable\":1},\"resources\":{\"requests\":{\"cpu\":\"600m\",\"memory\":\"1G\"}},\"size\":3,\"volumeSpec\":{\"persistentVolumeClaim\":{\"resources\":{\"requests\":{\"storage\":\"6Gi\"}}}}},\"secretsName\":\"my-cluster-secrets\",\"sslInternalSecretName\":\"my-cluster-ssl-internal\",\"sslSecretName\":\"my-cluster-ssl\"}},{\"apiVersion\":\"pxc.percona.com/v1\",\"kind\":\"PerconaXtraDBClusterRestore\",\"metadata\":{\"name\":\"restore1\"},\"spec\":{\"backupName\":\"backup1\",\"pxcCluster\":\"cluster1\"}},{\"apiVersion\":\"pxc.percona.com/v1\",\"kind\":\"PerconaXtraDBClusterBackup\",\"metadata\":{\"name\":\"backup1\"},\"spec\":{\"pxcCluster\":\"cluster1\",\"storageName\":\"fs-pvc\"}},{\"apiVersion\":\"pxc.percona.com/v1alpha1\",\"kind\":\"PerconaXtraDBBackup\",\"metadata\":{\"name\":\"backup1\"},\"spec\":{\"pxcCluster\":\"cluster1\",\"storageName\":\"s3-us-west\"}}]",
                    "capabilities": "Deep Insights",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "percona/percona-xtradb-cluster-operator:1.1.0",
                    "createdAt": "2019-05-20 19:11:44",
                    "description": "Percona XtraDB Cluster Operator manages the lifecycle of Percona XtraDB cluster instances.",
                    "repository": "https://github.com/percona/percona-xtradb-cluster-operator",
                    "support": "Percona"
                  },
                  "description": "\n## Percona is Cloud Native\n\nThe Percona Kubernetes Operator for Percona XtraDB Cluster automates the creation, alteration, or deletion of nodes in your cluster environment. It can be used to instantiate a new database cluster or to scale an existing database cluster. The Operator contains all necessary Kubernetes settings to provide a proper and consistent Percona XtraDB Cluster instance.\n\nConsult the [documentation](https://percona.github.io/percona-xtradb-cluster-operator/) on the Percona Kubernetes Operator for Percona XtraDB Cluster for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** – change the `size` parameter to [add or remove members](https://percona.github.io/percona-xtradb-cluster-operator/install/scaling) of the cluster. Three is the minimum recommended size for a functioning cluster.\n\n* **Manage Your Users** – [add, remove, or change](https://percona.github.io/percona-xtradb-cluster-operator/configure/users) the privileges of database users\n\n* **Automate Your Backups** – [configure cluster backups](https://percona.github.io/percona-xtradb-cluster-operator/configure/operator) to run on a scheduled basis. Backups are stored on a persistent volume.\n\n### Common Configurations\n\n* **Set Resource Limits** - set limitation on requests to CPU and memory resources.\n\n* **Customize Storage** - set the desired Storage Class and Access Mode for your database cluster data.\n\n* **Control Scheduling** - define how your PXC Pods are scheduled onto the K8S cluster with tolerations, pod disruption budgets, node selector and affinity settings.\n\n### Before You Start\n\nAdd the PXC user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-secrets\ntype: Opaque\ndata:\n  root: cm9vdF9wYXNzd29yZA==\n  xtrabackup: YmFja3VwX3Bhc3N3b3Jk\n  monitor: bW9uaXRvcg==\n  clustercheck: Y2x1c3RlcmNoZWNrcGFzc3dvcmQ=\n  proxyadmin: YWRtaW5fcGFzc3dvcmQ=\n  pmmserver: c3VwYXxefHBheno=\n```",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "perconaxtradbclusters.pxc.percona.com",
                        "version": "v1",
                        "kind": "PerconaXtraDBCluster",
                        "displayName": "PerconaXtraDBCluster",
                        "description": "Instance of a Percona XtraDB Cluster"
                      },
                      {
                        "name": "perconaxtradbclusterbackups.pxc.percona.com",
                        "version": "v1",
                        "kind": "PerconaXtraDBClusterBackup",
                        "displayName": "PerconaXtraDBClusterBackup",
                        "description": "Instance of a Percona XtraDB Cluster Backup"
                      },
                      {
                        "name": "perconaxtradbclusterrestores.pxc.percona.com",
                        "version": "v1",
                        "kind": "PerconaXtraDBClusterRestore",
                        "displayName": "PerconaXtraDBClusterRestore",
                        "description": "Instance of a Percona XtraDB Cluster Restore"
                      },
                      {
                        "name": "perconaxtradbbackups.pxc.percona.com",
                        "version": "v1alpha1",
                        "kind": "PerconaXtraDBBackup",
                        "displayName": "PerconaXtraDBBackup",
                        "description": "(Legacy) Instance of a Percona XtraDB Cluster Backup"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "planetscale",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/planetscale",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "PlanetScale",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "PlanetScale"
            },
            "packageName": "planetscale",
            "channels": [
              {
                "name": "beta",
                "currentCSV": "planetscale-operator.v0.1.8",
                "currentCSVDesc": {
                  "displayName": "PlanetScale Operator for Vitess",
                  "icon": [
                    {
                      "base64data": "iVBORw0KGgoAAAANSUhEUgAABAAAAAMFCAYAAADqd4S+AAAACXBIWXMAAC4jAAAuIwF4pT92AAAK T2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AU kSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXX Pues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgAB eNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAt AGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3 AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dX Lh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+ 5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk 5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd 0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA 4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzA BhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/ph CJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5 h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+ Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQ AkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+Io UspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdp r+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZ D5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61Mb U2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY /R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllir SKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79u p+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6Vh lWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1 mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lO k06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7Ry FDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3I veRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+B Z7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/ 0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5q PNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIs OpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5 hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQ rAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9 rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1d T1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aX Dm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7 vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3S PVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKa RptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO 32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21 e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfV P1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i /suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8 IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq YAAAOpgAABdvkl/FRgAA4htJREFUeNrs/Xm4LVta1on+xoiIOeeaa62992nyNHmaPJlJkpBJ32SC 9KBIDwLSiwgiiJD0PSRIr0KVoKCITdmAZV0EhavWrVtqXUXrKpbepxBNO6roMvPkaXe31ppNjHH/ GDFXs/dqZsw5RjRzvr/nWc8+Z62YIyJGxIwY7zu+8X3Ge48QQoj+8dynvvHc3xuzxIdNjU3Mkgdk avzZ1GgkxbGuc+zr7qvGZ02kdk5hgU8DfrD6/+8EfglwtVrxa/15hQ2X+6xPtT+/bvv+yl9HO3Yf vy+8h7vvcBzd9ss9X8SVvP5tb1MnCCFawaoLhBBCiK3gzcDPAb8IvKH6+cXqd29W9wghhBAyAIQQ QgjRb14J/Bjwz4DPPefvn1v97ceqbYUQQgghA0AIIYQQPeMbgX8OfAMwuGS7QbXNP68+I4QQQggZ AEIIIYTowbv944F/Dfwo8Joan31N9Zl/XbWhcYIQQgixQRglARRCiH6iJIBrHOs6x77uvmp8doUk gO8NfAvwRZFus78F/Gng1878VkkAa7avJIBCiG5RTmH3EcND755TTnurB8eECDYHPFT9/7T698FT 21ngGeABoIzw9v6/gJcXXQk8Xz1V7wK3gSPgsKudluv2F0IIIXrPK4CvIGT1H0Vs94uAzyZUDfhp 4Dl1tRBCiISYSrw/WAn5pyoB/2Ql9h8CnqiE/uuqbUrgVZXAPwRuNKxz71TH8CLwrsoE+O3KGHg7 8ALwzupv/6kyCGQACCGEEGIlvhL4auCNidofAd8PfB7w54G/qC4XQgixIjcqcf+qU/++gpCE9nol 4h+othtVf6vDbgvntFf9ex149SXbPQf8BvC71X//KvAfgF8HbskAEEIIIcRlfBSeHwY+tKH9vRH4 C8AXA98O/H90CYQQQpyiqH4eqoTwqwgz+IufxyphvwNcq/7Ntqh/XsFZQ+MrgJuVGfAC8CuEqjz/ rDIEnAwAIYQQQjxNmJH/XGDYwv4/FPh/AX8T+AHgN3VJhBBiaxgTZuj3gEeAd6veS+9BCNN/LWEW fkgI2VfmkMu5Xv28G/Bm4GsJSwj+JfBLhKS8/xk4kAEghBBCbBcPEUL9v6oadLXJEPijwKcBP0VY GvCCLpEQQmwMD1bvmlcSZq1fQ0ik99pK7D+hLkpCTjBYPrn6AfjHwN8H/jfuTcorA0AIIYTYSP4w YVbg/Tt2XI8A3wt8OvATwP+gSyWEEL3iGiFU/3XVv88Aj1eC/0ngUXVR63xc9fMiISrgF4BfXrUx lQEUQoieojKAaxzrOse+7r5qfNbAhwFvBT6+J7flPwB+2MO/WGprlQGMf+wqAyiEuJhXAe8LvKGc 8m7jh80TD70+f9jN/FMS+r3CA/8E+Bng79T9sCIAhBBCiO7xDPCtHr4Q2O/RcX8y8JHAzwI/DPyW LqUQQjTKHiG53uPA+wHvA7w78IbqbzeAobFgC4NBk8E9xBAiAj4K+BOExLz/YtkPywAQQgghusND hOR+P0BYA9hH9gmlCT8D+C7g5wlZjoUQQsTlOiGz/qOEJHLvC7yp+u8HAXveh7wHm1MO9syR962U zRNxyIGPIFQN+AngR4Bnr3QPtARACCH6iZYArHGs6xz7uvu6+LOfAXw38AEbdqv+S+DPAH/v/lHo Gq1qCUCiYz1fLGgJgBCt83Al9F9b/bwX8J6EEq3X6jTkSshHTB5+j+zA5uYBBQFsDP8e+BpCssBL XQMhhBBCtMcHA99RGQCbyO8BfrEyAH4I+FVdciGEuJIPIoTuv5GQkO+NhMSrUdbqFztmmA3N0M/V 0RvEewH/a2UC/AUZAEIIIUS3eBT4TuCL6G+4fx0+g7Be8WeAP43KBgohBMCgeh+8P2FG/82EjPxP JHk3eDAWP37Y3sRxQ92/cWSE8rxPE3IDyAAQQgghWmafUNbv29i+OsoPAN8CfB7wfcD/BNzWLSGE 2BLGwCuAVxKS830wIUrqcWAXKFIfgPdQjM18uGd2Ffq/0XwbYbHXd8gAEEIIIdrj9wLfjecjt7wf ngb+MvDFwPcTQhaFEGLTeBx4ihDC/16V4H8TtDTzbsDPYe8RM7UDdpzC/zedbwfeDvx5GQBCCCFE s7wv8A2V4BUnfCTw/wb+KvBngV9Tlwghesy7V8/79yKE8b9v9btOaC4/h8G+ORhetyP8+RUCxMbx 54BfB/6pDAAhhBAiPfuEkn6fTwj7FOfzpcAnA3+dkChQZQOFEF3HAh8GvB/wgcCrCTP9T3byaH3I /r/3mM3yHXw51QXcIv5qda++XQaAEEIIkYYB8AXANxEyN4ureZSQH+BTCGUDfw7QEFUI0QWGhFJ7 rwM+hrBu/92r59Z+H07AzWF0wxyObhjrSmnALeMZ4E8QEg/r4gshhBCR+bhK+H+CumIl3gD8NeAP EqIB/oW6RAjRMLvAq4DXEpL1fSTwodXvexc6713I/L/7mMmyAUU50wXeQv4w8NPAb8kAEEIIIeLw noR1/n9UXRGFT6p+foqQwOg/qkuEEAkF//tUz/E3EsL6P4ww8997vMPtvsIcjB+0WTljoMu9lTxB iEz8EeO96j8IIUQfee5Tz48sN2aJD5sam5glD8jU+LOp0UiKY13n2O//5S7w1cDXEjI+i/i8A/hx 4EeBMoxozxnkXjkKXnX0vG77/spfRzt2H78vvIe773Ac3fbLPV+E6D5FJfA/lBDW/4bKANjZtBP1 DrIh/uHXZ/OsMIWk31bzX4E3KQJACCGEWN02+CJCjd33UHck5XHgR4AvBL4P+Hl1iRCipuB/X0Io /8cSwvufAfa24NzdtSeyo3xkxir7t/W8G/B+MgCEEEKI+rwJz48AHwUqpdQg7w38bULVgO8A/n/q EiHEOWL/FcDTwIcAbwY+Ari+JYL/RPnPYPdRM915yOS+1I0hAPgwGQBCCCHE8rwbYY3/t6orWiMH PrH6+VPAXwB+U90ixFbzKCGM/42ELP0fyjYvyTLgZp5ibMr9V2aFgcwp9F8E3l8GgBBCCHE1lrDG /xsJiXREN/hWQrWAPwv8OXWHEFvDLvCBwAcDr68E/3upWwJ+DjYzswdekx0WYzMup1L/4pj3kQEg hBBCXM4XevgaQhip6B6vAX4C+FzgvwN+QV0ixEbyEdXPB1bf+9ezgUn71hb/Djz4a09m8+E1My6n XnpPnOZJ3RBCCCHE+Xwg8O3AH0Dr/PvAhwFvAn4J+CHg36pLhOgt+8ArgQ8n5Fr5IODJ6vfiCgNg 9xHD3qNmR0n/xDlMZAAIIYQQZ3kC+OPAN4PqJfeMAvgs4BMIVQP+CqGEoBCi2+wBTwGvrgT/pxBy rugZvCwmJP0bXjeza09lHhio5J84DxkAQgghRGAA/BHgWwjhpaK/7ALfTyjT+KeBvwnM1C1CdIp3 B96TsHb/9xEy9g/VLauL/2LE9IFnskmWs+uU9V/IABBCCCEu5FMIM/4fqa7YKF5PiAL4YsKygP9F XSJEaxTARxPC+t+LsGTnSXXL+rg5ZDlHN16TTfIx+26mZWviQowMACGEENsuEL8Xz2cjU3yT+ShC EsdfIOR1+C11iRDphQYhjP8TCDP8zwCvA0bqmnh4B8ZQXntV5kc3zH4p8S+uuGU02BFCCLGNPAr8 CeArgVeoO7aCEfAFwMcBf4FQNvBFdYsQ0RgAjwDvV33PPo4ww/+Auiad+Pcef/3pbLb7sNlxM0Dr /sXlvE0GgBBCiG3CEsrFfS9h/anYPh6trv8fBN6KygYKsQ4PA28A3pswy/+xKFN/M+Lfgy9h73Fb 7j1qrHMS/2Ip3iEDQAghxLbw+4C3ENb7C/FG4O8CP0+IBvhn6hIhluIDgfcnlOZ7M2HGXzRtALgg /q+/ynocA4l/sSS/KgNACCHEpvMewHcQwr8zdYe4h88GPhn428D3Ab+pLhHiDGNC8r7fT5jt/wDg QXVLe5RTz+4j9vDGMxne+x2V+xM1+FcyAIQQQmzyoPVrga8jrEsV4iJ2gC8lJCv7MeCngCN1i9hS RsDjBGPsEwgm6hMoeV/7eCjnnvHD9vDGq/PSez/2KvcnlucO8BsyAIQQQmwaGfBphHXe76PuEDV4 ZWUAfA7wg8Avq0vElvAk8BrCTP8nVs/OsbqlW7gZjB+yhw+8JnPG+j2Jf1GT/x14pwwAIYQQm8RH Etb5f5a6QqzBm4FfAn4W+Mlq0CTEJmEIofzvDXw4IUfK0+qW7l6tcgrjh8zRA6/NnLHsSvyLFfhF 4FAGgBBCiE3gSeAb8XydukJE5AsJVSN+hLAs4B3qEtFjHgQ+CvgQQiK/DwF21S3dx0094wft0YPv ls/RzL9YjbtUZrYMACGEEH1mAHydh68EXq3uEAnIge8CPh/4ceCngam6RfSEVxGS93088F6E8qdG 3dITPLi5Z+dBe/jg6/LSWPbcXN0iVuKfAb8mA0AIIUSfRdnHEWZm30/dIRrgtcBPEKpJfB/wj9Ql ooM8BDxFSN73KcDrgYfVLf0U/+UMxg/bowdek5VYvyvxL9bgl4FSBoAQQog+8kbCjOznqStEC3wI 8A+BnwH+e+A/qktEy7yOkKn/Qwj5T16vLtkA8T+H8cPm6IFXZ85Y9rzEv1id3wF+YfE/MgCEEEL0 hceAbwa+HNhXd4iW+XLgDwJ/AfhR4EV1iWiQNwMfBHwwIWu/Sp1uEK6EvUft/MarrMMw9k59Itbi F4FnZQAIIYToE18NfBXwnuoK0SFuAN9OqJf+54C/rC4RibDAxxLW8n8A8CZkhG4c3oNfiP/XWIdj 7JTwT6zHISF/DTIAhBBC9IHfh+ethDJVQnSV9yEsCfg84HuBX1GXiDXJgOuErP1/gDDT/zQwVtds qPh3gMfvPWbLG89Y5x0DP0cpG8W6/Dzw32QACCGE6DrvAXwroQxboe4QPeHjgI8A/gfgTwG/oS4R NdghVDN5E/CZBOPzOmH2X2yy+C8Bg7v2tJ3vPWoL78i9k/gXUfjRe38hA0AIIUSXeCXwhwizqCN1 h+ghA+CPAZ9LqBbwM8BtdYu4gFEl+D+Ik3J9Ylsw4OZgM+bXnszKvUfN0IVIACFi8JPA/ykDQAgh RFf5UvDfhNb5i83gOvBjhESBfx74WXWJqBhXYv/3Au8FfKS6ZDtxU7BDpg++OpvuPGjGbi7xL6Lx HPDD5/1BBoAQQoi2+QjCTOlHqyvEBvIh1c8XA28F/pW6ZCt5BPi0SvS/AXhvdcmWi/85FGMzufEa OxldN3vlDCvxLyLyl4DflQEghBCiS7wG+BbCOv89dYfYcD6+MgL+KiEy4HfUJRvNDvAU8GHA5wDv CzyubhH4UOZvsGdmD7wmmxVjJP5FbP4L8BMX/VEGgBBCiKZ5APhS4LsIZdSE2BauAV8HfBYhSeDf QPkBNo2ngE8CPpuQFFJp3MSJ9vdh5n/8oJnfeCabZwP23Fz9IqLz/cC7ZAAIIYToAn8A+DY8b1JX iC0XiX+ekCjwR4B/qC7pNa8jlOn7IEKY/2vVJeI+8e/Alfi9R4y78UzmjWXHleoXEZ1/AvzNyzaQ ASCEEKIJPsTDdxNmxoQQgY+ofv4uIVnT/6Eu6Q1vJKzn/xjgA4En1SXiMvEPzG88bY/2nrA7xlNI /IsE3CZEmSEDQAghRFs8TAh1/kwU7i/ERXxWJST/OiEh5svqks4xJCTu+yTgEwiz/I+oW8RVuBKy AfPrT9mD8cN27B2ZK9HiEJGC7wJ+TQaAEEKINtgHvgj4BuDd1B1CXMmDwNcDnwr8IPDzwB11S6s8 BryeUKHkMwmh/jvqFrG0+J9BsWvcjVdnR8N9dl1Jhpf4F0n4x8BPLbOhDAAhhBCx+TTgmwihzUKI erwb8NcIZQN/sBrUieZ4LSG8/4OBz0fr+cUKeB/E//C6KR98rfX5DmM3w6pnRCKOgG8GlkopKQNA CCFELN4P+HZCySshxHp8TPXzV4AfBd6mLknGY8DvBz6cUK7xaXWJWFn8O/AOv/eouXvtVdkoy8nd FM36i5R8M/Dvlt1YBoAQQoh1eQXwDXi+rPpvIUQ8vgz4REJ+gB9CywJi8SShKsknEWb5X6cuETHE vzH466+yd/YeswMPuZtJ/Iuk/BKhqszSGO+9uk0IIXrIc5/6xvMf7MsMNEyNTS7edhf4POBPAk/o igiRnN8gVNP4u8DkfAVy5p9LlEoNUePh7jscR7f9cs+XbjIGHiWs5/+DwAdU/y9EBOUPZQnFCHfj Vdlk9KDJfUlRZf8XIhX/jbDc8h11PqQIACGEEKvwUYTZyN+jrhCiMV4D/CzwhYRsz/9OXXIpBWE9 /wcRkpJ+OJCpW0RU7e/AzfGjG2Zy/VXWD/bMwM2rZH9CpOUb6op/GQBCCCHq8t7AVwFfqa4QojU+ qfr5KeAngP+kLjnDm4GPrH4+Rd0hkol/D7707D1m71x/KstNzo6bqV9EI/wgIfy/NjIAhBBCLMMQ +A7gj6N1/kJ0ha8CPr0yAn4E2OaA4/cFPoMw2/8xhCVKQqQT/2G9P9efyQ73HreFd4x8qX4RjfAP gO9d9cMyAIQQQlyGISQh+3rgDeoOITrHE4SZoM8Afgz4O1ty3hnwDPC5hNKjr0HmpGhC+Hvwc8jH Zn7jKTvfedjmbu613l80xX8A/hBLlvyTASCEEKIOHwp8N55PVFcI0Xk+mJAf4HOAPwP8fzfwHEeV 0P8YQh6ENwDXdelFY+K/Wu+/84A5vP6qzBRjhm7mrXKqi4Y4BL4aeGmdRmQACCGEuJfXAn/cwzeq K4ToFRnwmYRlAX8a+GngNzfgvN4EvF91Xp+kyywax4CbAx72n7DT609Yg2XHzdU1olG+Dvin6zYi A0AIIcSCHUKo/x8n1MgWQvTXCPh24PNPGQF9C1D+AODjCZFInwJYXVbRFm4K2YDZtacys/uIyXzJ UCH/omF+GPhLMRqSASCEEALg84BvAd5fXSHExvAMIUHgl1SDx7/X8eN9D0Jo/+8hJPV7SJdQtIoP M//DfXN049V2Ntg3YzcjU8i/aJifIyRijoIMACGE2G4+gFBP/NNQfWwhNpU3EZID/jwhc/R/6chx jYBXAZ8MfDbwbiiRn+iK9i8BA+NHrbvxtDW2YLecKhJFNM4/IyRjjoYMACGE2E6eAt4CfCWwp+4Q YuMZAF9ACKf/74C/DPxuS8fyOsIM/1cAHwUUujyiS7gZ2AGza09YP37EFgaGbqZ+EY3zW9Vz8kgG gBBCiFXJgC/B81bgaXWHEFvHNUIUwBcB3w/8jYb2+3rgI4CPBD4VuKFLIbqG90H8D/dNeePVdjLY MzuuxCjkX7TAHUKZ07fFblgGgBBCbA9/gDDr/9HqCiG2nncD/jphzf0PA/9bgn08WD13fh/w4cAT 6nbRWfHvwDvc3qN2du1VNs8H7JVT9YtohWn1bE5SzlUGgBBCbD7vC/xJwqyb1i8KIU7z8YSke79M qBywbtnAXUJOkc+snj2vUxeLbiv/IP5tgbv2pL27+wq7gyErJ4BR94hW+FLgl1I1LgNACCE2l0cI Jf2+EdhXdwghLmCPUDLw44EfBX4GeKHms+bdq0Hr7wceQ2aj6IP2L8E5/Gjf+OvP2HKwb8a+JFsk ABSiBb4L+NmUO5ABIIQQm0dGWN/7XYQwXyGEWIaHCMsBvgD4AeB/umTba8AHEZYUfSHwGnWf6BNu Hv7Zf9we7r/SFtmAgRL9iQ6I/x9MvRMZAEIIsVl8CvBVwCeqK4QQK/LehLKBXwD8OPBPT/3tY6qf 3wt8qLpK9FX8ZwNm15/O5uNXmNzNGVSGgBBt8VebEP8yAIQQYnN4HfDNwJcrW7EQIhKfTgjp/ynv mXvHm7F8iDEM1TWij3gfwv53HjCH+09aM9g3AzclU8+IlvlbhCWbjSADQAgh+s0+8PWEWf9H1R1C iMiMMHzD+FGLHTqOXvR4F/5gtMpf9Eb5gyvB5rj9p7LZ/uMGYxk5ZfkX7fPXgD8KuKZ2aLymikSP +c0Pfc/wUJ9zYbohc99/XLRBzc+d+zdz9ldXJZAxK+zzss+tcMy1Phvj86e2MTWux3l/N0sf1DnN 1DjO5O2YJXd3doOCEO7/A8Ab9DQQQiQdMIZ3bFkecXT3eZdNb/vcO3KrqSTRde3vwc1geI2ja09m DG+YIQ7jnfpGtM7/g7DUqtEFKHpsCyFE//g9wLcRyvoJIUR6ERXEUpYN2b32lJ1Mb/npwYt+Nrvj d4xVNIDoJq4EvHf7j2eza0/Y0hbsaq2/6Ai/Cnxl0+JfBoAQQvSLp4DvBv4wMFB3CCEaNwI8UDIc XjcM9s3B4Ut+cvS88/MpI0UDiE6J/znkQ6bXnsjm40dt4R27rlS/iE7wb4HPBF5sY+d6VAshRPfZ A74az1cAz6g7hBCti6sZGMt4/KCZD3az+dGL/ujophv6EoNdcnmUEAnwDnAwumFnN15lZvnYjvzc Z1r1LDrCvwQ+C3hnWwcgA0AIIbpLBnwS8L3AB6g7hBBdE1rekecD8t1HTTm8lh0dvuAGk7seV5JZ y3J5YYSIckNWif4Kyv0n7WT3ETuyOWM387oLRVf4VeDz2hT/MgCEEKK7fADwTcDnqyuEEF3GlYAh y3fY2X/STge3/PzweV/MDn1uMozyA4jk2t+Bn8Pgmpldf9pOh9fM0JdYrfcXHeLfA58D/HbbByID QAghusUzwB8DvlnPaCFEfxRYlR8ABqPrZjAYm8nRy2568LLP3FTVAkQ63ByM8eX+U3ay/3iW2Zyx myv2RHSKXwc+GfitLhyMHsdCCNEdvg54C/BqdYUQoreCrASTMxw/asvBNT87eslPj172Y++r3ACS ZiIGVch/MWZ67cm8HD9kMlcy1Ky/6Bh/n5Dt/51dOSAZAEII0T6/F/hBD29SVwghNkKbhURsWTY0 dvcxUxZ7/u7hi87O7jLEY2UEiHVwJRiD33/c3t173Ob50Azd3Fsl+hMd468BXwHMunRQMgCEEKI9 3hv4RjxfqOexEGIjhdocgyEvxsbmw2w2ueMPJy/7wfzQFwAmUx+J5fEe3NxTjMxs/wnrdh+xufeM ypmUv+gcf4uwpLNzMSkacAohRPO8Avhq4Dv0HBZCbL5qA++xWIY7N8xguGcODl9ys6OXfe6mDGyO ogHE5Ziw1h8Pe4/Yo71X2rLYMbsK9xcd5e8AX9pF8S8DQAghmuePENb6v4+6QgixbUaAKzFYdncf tZPBnvdHL/m7k5t+B4NVtQBxEeUU8iGT609lZvwKa/F+JPEvOkonw/5lAAghRPN8NPB9wEeoK4QQ W28EzBgWO4ZiZBhe80eHL3k7u+uHoLKB4tStUoZ/xw+aybWn7GSwZ3bd3GfeqW9EJ/meaqzXaWQA CCFEWp4Cfgj4A8CuukMIIQJVIrfhYM+4fGxmk5v+4OhFN5hPyY2REbDVwt+Dn0M+Yrb7mJ3vPmKH NmNQTrVYREj8ywAQQohu8iAh+cs34nlY3SGEEBcIPYc1huHouhkMdu3B4YueyW3v3azKDyC2CjcP QSLjB42/9lQ2LXYYeY9VyL/o6mMM+BrgJ/tywHqsCiFEfL4Q+HrgA9UVQgixnBGAx5jM7O49Ztzw GodHLzkmt/wAVC1ga8T/DLKBme0/YQ53H7U7wK4r1S+iu7cs8EXA3+7TQcsAEEKIeHwM8E3AJ6kr hBBiFScA3BxbjNnNR3Y62PeHhy/6wezQZ9aiagGbetlDJAg7D5mja09k2WCfnXJGgar7ie7yO4SK Tn+/bwcuA0AIIdbnaeBbgT+M1vkLIcTauDlgGAyvmbLYMUxu+btHL7txGfJqKz/AJgn/EvIBfu9p e3f8CltYS1FO1Tei0/wm8LnAv+rjwcsAEEKI1XkQ+BzgB4CH1B1CCBFTHYKbk5kMRg+anWI3mx++ 5MrpbV+4OZnNUERAj6nW9PvRA+bw2pM2G+6asXNa6y86z/9BWOr5n/p6AjIAhBBiNT4F+F7vtc5f CCGS+gBhDbg1OXbvUWune34+ednPpnf8yANW+QF6RzmDfMTR3mOZ3XvUAAxLCX/Rff4J8MXA7/b5 JGQACCFEPT4I+A5CWT8hhBCNOQHgSrJibLJibA4nt/z06GU3nx8yVjRATy6hCz+7j5jJ/ivtrBib PTdnoLX+ogf8HPClwKTvJyIDQAghluNB4K0E5/cBdYcQQrQnIjHsjG6YstjNysktf2fysttxczIM GBkB3btmVZK/fMj02ivtfOcRW1jDfpXTQYiu82OEJM8bgQwAIYS4nH1Ccr9vBJ5RdwghRBcUZcgP YHN2dh4088FuNjl6yZnpHV+4klwVA7qDm4PJKMcPGfafsPNixwy9Iyud+kZ0//YlRH3+qU06KRkA QghxMR8N/AjwZnWFEEJ00AcI+QHyrCDbfdTOB3v+8OglP5wd+MxTJQoU7VwbB27uGezZ+f4T5nDn ht3BMlaSP9ETXgLeAvytTTsxGQBCCHE/7wW8Bc+XqyuEEKIHYtNjgKIYm6LYMYdHt9xscpNsfuRH VqPdxnFzMJZy77HsaP9JmxfDKty/VN+IXvB/A59HT8v8yQAQQojl2QO+F/hDwCPqDiGE6JkREMLK d3YesG64x+Topj86fNmNcGCs+if9BQBXwnDfzPZfaWejB22O88NyipZkiL7wK4Sln7+xqScoA0AI IcACf5SQ4OV16g4hhOg3bo41OTs7D5l5sWuPjl72TO/4AR5rjMRodN3vgRJMjr/2hD3Yfczm+ZBR OfMWr/4WveF/BL4CuLXJJykDQAix7Xw48O3AJ6krhBBig0RpCRjyfGTs3iOG6Z4/PHrJFfMjChzG KD9AFFwJePzwmjm69qQ1w32z48GWU/WN6BV/HvhaQuK/jUYGgBBiW3kj8NXAV6orhBBiU10A8CUW A4Nds1vsZNPJbX909LLPyokf2AzNTq9BOYV8xGTvMWt2H7XOGHadC/0uRE+YAt8C/Pi2nLAMACHE tjEC3uI93wI8pO4QQogtMQIADIPRA2ZWjE05uekOJ7f8wDsy5Qeo2Z0u/Ow+Yg72H7eu2DNjN2fg VdpP9Iu3E/I+/ZNtOmkZAEKIbeIPAd8AvJ+6QgghttMIcDMKm1PsPGynxdhPjm56Mz/wOx4wiga4 vPtCRAX5iNm1J7LJzsOmsJZxOVPfiN7xb4A/Avz7bTtxGQBCiG3gg4EfBj6GkPBPCCHENgvZMFM9 yMcm3xuZ+eyuv3v4shuUR2QYrCICzhf+NqfcfdTO9x43Pt8xO74kk/gXPeR/JKz3f9c2nrwMACHE JvMM8DXAW/S8E0IIcZ+wLbHGMCj2TJHtZAeTmy6f3Pa4GUNrUX6A0Ed45/1g35bXnjCHw+t2iGHo JPxFP/kzwLexBcn+ZAAIIbbt2fbHCUldnlR3CCGEuFDgesBjjGV35yHrB/vcmbzkzOSOL3yJsVtc LaCcQVbg9p/IDncftXlWsO/mumdEL5kBXwb8TQ2ShRBis/hcPF8FfKS6QgghxPJOAHiHyQr2dx+x s2LPT45e9tnswBfbFg3gPfg57D5sDnYfs8Xwuh34uS8k/kVP+U3gi4BfUVfIABBCbA4fAHwP8Gnq CiGEECuL3xI8FINdY/OhMZPb/u70ltspZxgMZpMTBVbZ/X2xQ7n3jJ2PH7KZzcjLqddiCNFX/mfg K4DfUlfIABBCbAaPEtb4fy2wq+4QQggRAzcP5QF3rpvRYJy5yS03m9zxg8XvN80IcLOQ5G/8iCn3 H88m+Q673mGV5E/0mP+esN5/qq6QASCE6D9D4POA7wb/WnWHEEKI2HgHHjKTw87Dxha7Znp0009n d/3QO6zZgPwALiT5Y+e6new+Zt3oATPCM1C4v+gxU0LZ559UV8gAEEJsBp8OvMXDx6orhBBCpHcC QsWAbMRod2QOZnfNfHLTzecHjE2PR9NuBtmA2d5j2XT3MWtszo6bqfaB6DVvI1SA+l/VFTIAhBD9 53V4vgf4QnWFEEKIxn2AEjCMiz1cPrLl9La/e3TTD/2c3PQlUaA/rnzgd19hDvcet2awbwdu7guV 9hM95+8BfwJ4u7pCBoAQot88AnwVobTfI+oOIYQQrQroOdZYdobXzTzfMbPpTT+dHvihd2TGdNcI cCXgccUu7L8yO9h5wBTGMlCSP9H/byV/BvhutN5fBoAQovfPqC8EvhN4nbpDCCFEZxSHC++pbEC2 87BxxZE5OnrZDedHgCPvVH4AD+UcsgHl7sP2cO9xa7MBu95htNZf9JyXgK8D/oa6QgaAEKLffHT1 QP90dYUQQogOGwEGyPIddndHdjK748ujl70vpxQ2o/VoAFcCDsYPmoO9V9pseM3suDmZhL/YAP4N IeT/X6srZAAIIfrL6wmZW78clIhICCFEb4wAgOHwuiEbmensjr87vcWucx5j2zggcHModjjce2WW jR82xliGWucvNoSfA74SuK2ukAEghOgnI+Db8Xw58Li6QwghRB9xM8gKBtmDxhRjppNbfj67y473 mCbyA3gfzAibUe4/Yee7jxhT7JjMlSrtJzbjKwZ8G2HNv5ABIITo6XPoE4EfBN5b3SGEEKLv+BKA Ihvgxw9ZZjv+7uS2H8yPyPHYVBEBbg7GUo6uG/YftweDfbNrLLbUrL/YDP4zIUr0H6grZAAIIfrJ m6sH+eeoK4QQQmycEeAwGAb5rhlkI3Mwve3n0zs+K6cMY+YH8C6I/8Gume09Zibjh+3QWPadA69Z f7EZ/ALwzcBvqCtkAAgh+sfTwDd4+Fp1hRBCiM12Aaofw3j0gCmLXTOZ3vaH09s+9yXFutUC3BxM htt/pTnYeywrijF75fQ4CkGITeB7gO9TN8gAEEL0jwx4C56vAV6t7hBCCLFNuDmZzRmPHjSTfIfZ 5CZ+fuQHq+QG8C78jG6Yu/uP22J0w+TeMSwnKIWu2BR+E3gL8EvqChkAQoj+Cf/fC/ww8P7qDiGE ENvKolpAvmN8NmQ+PzBHk5tu4GbguTo/gC/Be3w+Yr7/yqwcP2QKk1O4OcZ7iX+xMfwDQjno/6qu kAEghOgXryeEbX1WZQQIIYQQMgJKjDEUxS55PrRH09vOTO6Q+5Lc2HOEvIdy5skGZrb7sPV7j5lJ PjR73mNU2k9sEHPgR4HvArSQRQaAEKJHPAp8PWGd/0jdIYQQQtyj6UN+AEPGzvABSz72R9M7uNld n7sSayvb3M2DAbDzUDbbf9xMBtfMGMfASR6JzeJ3ga8BflFdIQNACNEvvgL4auC91BVCCCHEVU5A MAOyoRntjJgVY3M4ueXt7NDv4KAYM919NJvuPmIHNvd75VRdJjaO/4Ww3v8/qStkAAgh+sMn4/km 4KPVFUIIIURNH6AEDEW+g7WFcfkBt4sdU44fNnvF2Azd3BdK8ic2jClhqeiPAUfqDhkAQoh+8O7A twFfAAzVHUIIIcTqJoAvyYoxfvfhzGYDRkB+POsv8S82h/+LEPL/D9QVMgCEEP3gMeDzgR8AxuoO IYQQYkXhH/IBkBVMiz1j85FxBnadC78XYsP4ZcJy0d9SV8gAEEL0gz8EfKuHN6orhBBCiDXEvwOb 4YtdMx3smNJkjL2T7hcbyYQQNfrj6BaXASCE6AUfBnw/8DHqCiGEEGINHHgDxY6ZDfeMswUWz9A7 dY3YSH4N+HLgX6krZAAIIbrPU8B34vl84Jq6QwghhFgN78NSfjugHO7aaTZiaAyZd1j1jthQ/hrw LcDz6goZAEKIbvMQ8CXAtwKvUHcIIYQQqwt/PNgcP9g1ZTE2mTEMPVjN+osN5V3AnwR+Sl0hA0AI 0X0+Efgh4P3UFUIIIcQa4r8Ek0Gxa9xg13ibY73DeK+8/mJj+RXgK4FfV1fIABBCdJs3EcK0Pktd IYQQQqyj/EOms2JsXLFrTDEC58g04y82nB8GvgvQnS4DQAjRYR7G80PAZwMPqDuEEEKIFXX/Yp1/ AcM9Qz42BoNxpWb8xUbzX4CvBf6RukIGgBCiu4yBLyPM+j+p7hBCCCFWF/7VOn+KsaEYG29zDB6j WX+x4fyNaiz5rLpCBoAQort8QvWwVlk/IYQQYg1cCTYLwn+wZzAZgIS/2HhuAm8FfkJdIQNACNFd Phh4i4cvUlcIIYQQq7MQ+MUODPYM+dAcRwIEC0B9JDaWfwx8N/C/qytkAAghusl14BuBt1T/LYQQ QoiVlH8I+c8Kw2APih2DtSES4N7tZAKIDeRPAt8PlOoKGQBCiO5RAF+M59uB16o7hBBCiBV1/6l1 /sNdy2AcSvx5f474lwkgNo//QCjv98/VFTIAhBDd5COAHwF+j7pCCCGEWFX5h3B/k0ExhsGeJStO fr/M52UCiJ7zM8B3AM+rK2QACCG6xxsIpVj+mLpCCCGEWEP7l4CFfNdQjKEYmeWFvxD95/8iJPr7 W+oKGQBCiO4xBL6ZsM7/FeoOIYQQYlXlH0R+NqwS/I0NhioSYMX2FAUgesbfA74e+L/VFTIAhBDd 44/geQvwfuoKIYQQYnXhD2ByGFwzFGNDloc1/l5aXmwHLwHfBfyUukIGgBCie3woIRPrx6krhBBC iNWFv/dgMyjGhmLPYKsRs1Ouc7E9/GPCMtJfV1fIABBCdItngD9BKO2niQghhBBiRVwJ1kKxC4Nd ix1wHO4fFYUOiO5yAPwZ4AeAubpDBoAQojuMCcn9vsHDU+oOIYQQYkU9Xgn8fGQY7Bvy0YlQ96m0 vEwA0T3+DfCtwD9RV8gAEEJ0iy8iJPj7YHWFEEIIsaryD+H+WRES/A3GBrIq438TWl4mgOgOP0pY SnpLXSEDQAjRHd4XeCuez1RXCCGEECvqfg/GgylgMDYMdqt1/g78fDVRLi0vesq/A74a+JfqChkA Qoju8DRhnf9XANfVHUIIIcRqwh8PxkKxG8L9bQbG1J/1j3dQcg5EK8yBvwR8C3BX3SEDQAjRne/o lwFvBV6p7hBCCCFW1NklYKHYqdb5D08MAe/jiHItBRA94W3AdwM/r66QASCE6A6fCnwN8PvUFUII IcSqyj8k+ctHMNi35KNqxt9d/TmJcrGB/EXge4Fn1RUyAIQQ3eC98bwV+Gx1hRBCCLGG8KdK8Ldv KHYMJgvCP3pZPyG6z38hlIz+ZXWFDAAhRDe4AXwb8OXAg+oOIYQQYgXdX4n7rAjr/ItxleCPZtb5 axmA6Bhz4KeBHwLeru4QMgCEaJ8C+IPA93h4d3WHEEIIsYJ+rkL9bV5l9t8z2CJk+195xl+5AES/ +a+EyaW/q64QMgCE6Aa/n7DO/5PVFUIIIcSKOt2Fdf2DvSD881El+l3Q1EJsIX8F+FbgBXWFkAEg RPu8DvgOPF+irhBCCCHWUf9QjAzDfch3wvR51FD/hYNg6n9MUQCiBX4d+B406y9kAAjRCXaBbwC+ EpX1E0IIIVYSyL4SyXkBw31LMQZs95L7yQQQDfOTwPejDP9CBoAQrTMAPoGQgOWN6g4hhBBiBV18 KsHfYK9K8JdVpkCZWDQ3nQ9AiOX5DeCbgV9QVwgZAEK0z5uAbwc+Q10hhBBCrCb8vYesMBS7MNwL wt/fm+BPaltsH38V+C7gHeoKIQNAiHZ5CvgO4Cs0HBFCCCHqqv4T8W9zyMeGwa4hH1aGgNuC89fo QVzM2whJ/n5JXSFkAAjRLgPga4GvwPNadYcQQghRX/x6qsz+u4bBviEbVn8qr/5sMuGssoCiG/wk YVnp29UVQgaAEO1hgc/y8C3AB6k7hBBCiBWEvw/CPx/B8JolH1V/OjXjb1o+RuUCEC3xq8Bbgf9Z XSFkAAjRLu8DfCv4L1BXCCGEEPVx5UL4m5Dgb8dgzIkpUEtMb5LalnMgYAL8NPBtwKG6Q8gAEKI9 XgV8CfDdQKbuEEIIIWrqWxdEbj4Ka/wHuwZjTxL/bZIo11IAsQL/thpn/kN1hZABIES7fC2erwGt 8xdCCCFWFf+2WKzzt2R5iARYJsFf61EAMgFEWiaEdf4/DtxUdwgZAEK0x8cCPwJ8sLpCCCGEqKlj fRCzWW4YXDMUY4Mtwt9cWbOtnpoAQlzBrwDfQFjzL4QMACFa4j0J5VY+FxipO4QQQogaWrma1TcZ DHaqGf/B2b8lEdMS6aI/vAh8P/CXgAN1h5ABIEQ7PA58GfDtwFjdIYQQQtTDlWAzKHbCrH8+MHh/ Tqj/loh1LQMQ5/D/BL4T+D/VFUIGgBDt8YXAdwBvUFcIIYQQNfVqldl/uBcy++ejoF6XWeMvTSy2 hN8mTDL9rLpCyAAQoj0+yoeMqx+HV2cIIYQQtRR59W++YxjuVyX97JJr/BefN/V22VougBWOd61D kuOxSfwM8KeB/6quEDIAhGiHJwgJ/j4d2Fd3CCGEEMsL00XZvnzHMNoPM/4mq0r6lcl3325CwCa1 vEyAvvMfgbcCP6+uEDIAhGiHVwB/GPhm4BF1hxBCCFFDj1Yh/dkABnuG4a7FZsEQWFn4903kqiyg uJoJ8BeB70Gl/YQMACFa43OA7wLeW10hhBBC1BP+3kE+gsGeZTA22Dz8zrkWjof+RQGIreFfAD8I /CN1hZABIEQ7fBTwjXg+VV0hhBBC1FPazkFWwOC6ZbgHWWFwi1B/E28/0QV76nwApluHJFrnBcLy 0j8LzNUdQgaAEM3zbsDXAl8C7Kk7hBBCiCWFqg9qNctheN0y2DVkg8oQKDtyjMuI6U1R3HIOus4v EZaX/md1hZABIETzXAc+H/h+4GF1hxBCCLGkzqzC+W0GxY5hsG/JhtXfysTCVLkAZAL0j7cD3wn8 HDBVdwgZAEI0z8cT1l19kLpCCCGEWF5cuhJsXgn/a5Z8cNYUMN08bGli0dat99PA9wHvUHcIGQBC NM+HEML9P++4Tq8QQgghrsSVYCwM9wyDfUO+Y86U+rtSbCsKoLnTlOPRBf4l8KcIYf9CyAAQomH2 CSVW/pgP/y2EEEKIZbRkNbM/2DMM9gzF2GDM5Wv8u2gCLFURADYnIaBMgLY4IiT5+zHgjrpDyAAQ ollGwJcBXw+8Vt0hhBBCLKEd/YmALHYMw2thxt/akO3fL1HSr4v6s/VjUlWATeeXgW8B3qauEDIA hGiejwV+APhQdYUQQgixnNL0LqjNfGgY7lcz/jaYAlEy+7esZpeKBDCbcz3lHCTEsIgc+W1CpOnf AEp1jJABIESzfACWr8LzZeoKIYQQYkmtWM3q56MQ6j/YPRH+xzP+NcVkcv3ZR4ErUb4R2ByMMS+W M/+Llfj/XfWKkAEgRNMYrPf8oHd8gtHLVQghhFhKkHoH2QCG1y2DvUr4l+eE+q8gXs/9SNcTAnZQ pCsXQEeGmlnozrvPeSZ33I8/8LT9vmxgcHMfJ0JGCBkAQixPVhhfzvxv+tJjCoMy/QshhBAX6EIP xoMtCKH+u5AVBu+C+O/XyRA3IWBH1by0fIvC34IxMD3w3H6H4/BFTznzvzU/8njn2XtFxt6jlnLu MZaT5TRCyAAQIunD2QO3XRkGNEIIIYS4R0SWQUVmg1DSr9g12GoE6MolJGYsFapcAJ03HEQQ/SYD N4M7zznuvNMxnwZDIB+a8eRlj3Oe+WHJ7Xc6bOa58XRGPjJkIwPOU87RpJSQASBEwkd15kt/PMAR QgghRJiN9B6yIpT0G1032IxzZirjq8UulgXsqyjXUoDmyIrwnTl62XPr7Y7pLQ+WY8MMwoSTxeA9 zA49xsCz/37OzoOW609klHPP6AFLlkM585SzYCoIIQNAiFjy34SBTDkPsxtyXIUQQmy38g+l+/IC it2Q2T8bXrDGf8vE5FZFAYgag8kg8mcHntvPeu6+y+H9WeF/3vjTZNV/W8PRTc/BCzOwhutPeDCw c8MwfsgyO/DH1TaEkAEgRKQHd4gCMOFhLBNACCHEFgr/hWgZ3zAMxoZ8WGX1ny+jfLl8o1jr7luO AmjVBFiim6MekgyNq4W/DeUub7/dcedZx+wgRAIYW7MpC9kgdPbN3y4pZzC6Ybj7vOfaKy35KOzH u6qaoMaqQgaAEBEGPqXHWL3phBBCbNHrr5rVtwUMd0M5v2wA1hA/S3kXTYAUp7FJVQHEucLf2NCf k1uem7/rmdwKX6RssH7z2SCYb/MjuHW7ZHo7RBTsPGC5/mRGOfNhuQE9TMApZAAI0aWHuSurci16 QwohhNgG4e/B5DAYG4bXDVkR3ofeQVcSkicXrlLG6p86w0UbxorzQ7jzTsfB844ywfjRe7AZ2Mww PQjfyfkk7A/g+qsyBpVh5x24mZYJCBkAQqyEm3uyQk9PIYQQmyvoXBlC/YuxYXjNkI+qUH/PcZj5 fbpPQlDCecvJBmE5zJ1nQ3b/2WEwBGyWdr82A6olquUs/O75t5UM96kiAmD8CkOxYyhnHjfVvSdk AAix/PvagfceozAAIYQQG4Yrg5gYXTcM9g35DpfWH69vAsTPBdCIwF5hbX2r+l4VARrF2PBz9LLn 9jschy+FJH2phf/9B3ISZZANYXYIz/6HOXjYv22xOQz3LXuPWdxM5QSFDAAhln7J+TKERAohhBC9 f61Vs/rGwOiaYVDN+MNy64eTRAJsSC6AVoWzTIBmhL+B+cRz51nP3ecd5STOOv8Y199YyIfhotx5 1uPmnmLsOXjR40vPjVdlJxWuLJeafULIABBbzSIXgBBCCNF74Z/B4FQ5P5OdrP/vk/JtRH/GMiY6 bjBodcIVwr8q0efmcPCi5/Y7yhDubzoi/s8hG0A2NPgS7r6rBGOYH5W40rP7Csv+4xY3h2LH4J3H zXUTCBkAQlRP/fBmdPPL67cKIYQQ3VT+J0b2YA9G1y354ET4+RUG/l2IAuiqmu1jRYC+9nUT2Ayw ML3tufU7nqOb7iTc33T/+pwuJzifeLyH2+8MJQpNBjeeyhjshaUC3sF86rVMQMgAEAIDOI/3RhUB hBBC9EefleEdNtwPa/wHOxxn9d8EtdjbpQAd7GYtBbifrAil926/03H3eRcmg3ocEbooVbi4bn4O z71tzui6Ye/xkPh6/9GwTKCcecqZKmEJGQBimwdRHph7jCoCCCGE6Po7K0xSBtG/byh2wkDel5w/ u7eCiOtKFEAXywK2HgWgmP61sFkY9915p+P2s57pHY/N+y3+73cDKvG2Y5gdwPNvm4OB6W3weMYP WvYfs5Qzf5wbxCsyQMgAEFuFqUoilR5j9VYVQgjRMdFfDc6NOSnnV+xUYqZcYta/i4vqe2wC9FGk b7tvYKrSekc3PXfe5Tl8yeFdd9f5x7roJoM8C1f+7nMlroTJLc/d58JD44FnMkx2qsRhtaxICBkA YitwJVijkCghhBDdGcA7FwbxxY5hVJXzM1WWbzdPpwCVC0BiehNOdrGef37kuf1Oz0EV7m8s2GK7 HifZwJBV0UKHL3mMgef+45xyDvuPW/ZeYXGlZ7AXBsNuESGgcbEMACE2+j3nPUYOgBBCiLaFfxnE y2A3zPgPdgBbRay5xg6j5ti/QbUYc1d9E7nKBXA1BrI8mGR3n3fcfodjfhTMtK1O/LxIHmjD/5az 8O/ttztu/Y4jK+DGqzKcc+w8YBnsBSOgnOqxLANAiB4+8JbJfOpL8MYrDEAIIUQ7rysXXkGDU8n9 rAmRAKw7G7fumvelPn/FRv5EoK192C2aAH3NBbANJoCxgA2z3Lff6Th62YcZf6mZ8/vq1H97B8// 5zluDnuPeAb7FpvBtSfM8VIkN1POABkAQmyYUeDdyVoxIYQQIvmrx58IrGJsGFVr/E0WIgGc69LB RjABuqo/t8QE2GQxazKYHXhu/67j4CWPm4eM/2LZTqyWCgzh8GXPnefmZIVhcvvEALjxtCUfmjMm gHfqOhkAQvT4wbfIiCoTQAghRHLhv1jjPz7J6m+zMKBerPGvPwufWDQqH0B3TIAmu6yjhoOx4cfN 4O67HLff6ZgfVqHuEv8r3yQ2B5sb8HD3uZMB8fywxDkYP2S5/oSlnEE+qq7BHOUNkAEgRD9NgLDI Uk8vIYQQaQbXzoUBc7ELo2uWfHwyZr4yC3cvZn4bjALY5pnwLV8KYAughIMXPHfe6Zje8Se/F9HG xaerJcyPqlKKzzoOnnNg4YFXZeF5NjYhb8Acyqlm0WQACNGVF+Uym3nAeUxmFAUghBAi3muomh0b 7hkGeyHJHybM+PumdFfsUPfueATd1OAK1Y+vSTOwFia3PXffFcraeaqs/yJ53y9uZ+8AB8//55Jy 5tl7hWX8sMV7z96j2XGOgXKqigIyAITo9Jv61EMNVQUQQggR4dXjwrtnsFsl99slZPUvWd6c7pIJ sKm5AFZIUtj6gW+TwWCC8C/ncPtZx51nPfOpJ8uVv7mt6wFhuUBWGA5vhrwBNofpHY6X1l570jIY hyUC7rQRoEk2GQBCdNEEMLmWAwghhFjhVVMl9zMGil3DaN+QV2v8nQPmrJ6Vv4V1+KuZAA2J167n AujvUKgTJ2sMYAEX1qPffqdjduBDeLrC/TvzvLMZ2J0QPXv77eXx76cHHmNgdM1w/SlLWeU3yfIT k0CVBWQACNGdB1oJxip+TwghxPIDYe/CYLgYG4aV8Dc2iKcr1/hvlOrsaS6Avr32NzgXwKJ83+SW 5/bbHUe3/PH3S0OzjmIgG55cnNlBWAIwO/AcvuRwLoj/G89kGAP5yJCPDN6Fa+tmurYyAIRo8WW5 GMidrpUqhBBCnPdeceUiuV8o5zcYh3fN4l3Sd23a6SiArg8rNJdQT0PakIV+etdz910urPMvAXti Coh+YDOgqq41n4TfuRk89x9D7oBrr7SMH8qYTzzFDuw8aENUAFBOFBogA0CIFkwATtVo1nolIYQQ 9+LKEKY83Asz/oPd8P/OkTa7Xwuisv4ul/hErMSEigJo7jQT9o/NQwTmrd8puf1Oz3ziyYqqRLPo L+b+XA35yHDnXZ7bb5/hSsNgH6497iln4T7Yf6XFWkM59/g5MtFkAAjR4Hu1Wpxk9OQRQghRCSBf iaDRDcNw99Qa/7LGjP8KQurMR9YRYo3N4G+HCbBUFAB0LiFgJ0yAhTg0oazf3WcdRzcdGKN1/hv+ HA0RAobMhMiAF/5rWCdlslDpwZew97hl9yFLObvfUY0VXSVkAAhx7kvb45VpVgghtvl1UA02bQaD sWF4zZIPT2Yt3byH77eevte6eOitH1PfrmeV2d8D0zueO+90HN70uBlkudGM75aNtY0NUQELDp73 eOeZHYYcEOUUhtfgxtNZeNYayIcn95KfK6GgDAAhOIngX/tFqfV7Qgix1cLfuyD0i13D6LolH3C8 PGytxFXrRgE0LBqT5ALYtoGJ+ivUlLcwP/Tcfd5z51mHm4XfadZfAGSDoOzdPCSCBCincPTy/Ph5 /MAzGcaGJVeja4Z8aPChSATlLEQQ6PsmA0CI9d7bXs8RIYTYJrHmyjDQHFyrhP/oxBRYOMwmwn5a DeVPvss0B3luq9ucC6Dp01zxg1kB5Qzuvstz59mS2UFVRk6qQ5yDsWcTcrtyIfDhubeVx7+7/qRl sBcisXwJ44ctgz0TqguUHjeVGSADQGzbGO7i9YLLjt6qRmTeCyHEFrw3qqz+owcMwz1DPjbHvz/3 9dBwUr8zr68WEgrWz0VwxUYx18h3ORdAR9V8EyaAqbLBH7zguf1OF2Z1jYS/qGkImJNHhanuHVvA rbc7fBnuKV/C4cue4b5hPvHs3DDsPZ7h5j4EbrmqLKs55xkkZAAIcZEJIIQQYsMe8a4aD1oYXLeM 9iHfMSGrf7nE66HPDnEjJkL8Dmqky1MkBDTdu5ZJDutUgr/ZAdx+h+PwRYcrQz14zaiIWPd8VgDF iTswueU5fNHhPRy9bDh40QfhP4fhvuHG0zZEC1Smgs3Ofhd8KQNAiE3R7i2OIIQQQnRV+OPBDmC4 G8JGs2GIAFis/994AR9jl41VFuhmf3TKBOjAyZosCKv5Idx9znHwgmM+Db/TOn+R+p60OdgqmaQv Q+SJISznnR34UGmiWuZVjA03nrFQVrezDYleT27m8Dk3kwEgxGaZAKs2KIQQorfC37uQbGqwaxld NyHxVFXmr+4M0NpRAC2E8m+CU9HFsoB97eYYSwFMFdZfzgkJ/t7pmB35+2ZZhWjqu2AsZPbs7+ZH J/87ueV516+VYVhfRRPceNXJzeqr3+08aM+O/Q24uaecsVGVwmQACLkDl21nZAIIIUQfn/euDMJ/ uGcY7ofkfu7e2f6uhFE3tb+uzOBvyOz4VkUBVOcT1vMbDl503Hmn4+hWmHWV8Bedwpwv2M2xqIfn /tOJA+xLyEdw7Ql/5h3h5rBzw7D7Ckt5ThlYN/O9LE0oA0Bsxhs49vtWJoAQQvTyfeB9ECPjG5bh PqFsFBes8V/1hdFwFED9hHzx9r/a7pb41DpJEVOJ7BQlG1OaAA1GARgTZlmndzy3ny05fMnj5gr1 F/01CM7cu4NgDr/438ozXw43h8P9kF/AlfcLjutPW4qRuTKHjAwAIRryBGKGCxrTkzWiQgixjc98 z3EY6GDfsHPdhOR+0M2BWQqh2aQJoLw6LV68hnWSrdb5T+HOO0sOXqjCoa3Ev9is76gxkI/u+aKO wlKXW28vMeeEFMwOS2xmehcFIANAbM7LNeELe5EwRCaAEEJ069nvXHg+F7uG0TVDsWuOTdtUg7I2 ygL2T1A2eJDKBRD9Y8aGSJpyAndedNx9lw/r/FFZP7FlxoANkWTnMTuEPq4B0FdYbKdZYFbb9jhj NJr8EEKINnFleEYXY8PoumFwzRzXf641HltHQDX8Mti4KIBtyQXQM7ICnDPcfd5x51nH5I4S/Alx Hn39TsgAEBsr7KOVBay29eeYAEIIIZp/1jsHxQ6MrlmKXUOWh981reBaNQF6URbwwpX78YyIFCp8 icOuvfvUuQBg7WUlxobSfkc3PXfeFcr6LbKjCyE2BxkAQibAClibNrxUCCHEPY/s6nlrc9h7yDLc N9giPIsX6/y96dlMbA/LAnYhEqAREyDFaXQwVMBXYxoMzA49d571HL7kKCeerDAKdxRCBoAQWzCg WrJ5YwGZAEIIkRRXniQcG16zDPbM8Yykm9//gF7ZBOhRFEC0d15jxx1/R41FAmxwPgBjw085gYPn HXefc8wnIRlaNpDyF0IGgBCb6Acs+7K8YDtjqwGnkgMKIUR04Q8h+dJw3zC8ZkLysaueuS0I4rV0 Ys8qAvTII+jmaXTkPLMCyhkcvuC586xjelCt85cyEEIGgBCb8AZO+b41BlCFACGEiPP49uDLUI5p uAfD67ZKSrb8c7Z3WnJdE6DPyQjlGTTaKUHgm+MZ/8ntEMaoBH9CyAAQYnveiStEAdyXOGdhApTq ZyGEWPUh7VyY8R89ZBjsGrJhMARcWb+txvMBtLCeP5oAjmFAwPpT37H6oOvLAFpwLowJCf6md+D2 s3OOXvS4OWQDPXqEkAEgxMYr/jhtnmcCGAvOoxIBQgixrFCvnpdZATvXwxr/fBAeo8dr/M1qbTf5 udZzAfRClPa0g2IlKWzheE0W7svZkefuc57DFx3zicdmRuJfCBkAQsgsWHtbC5YwW6XkgEIIcTGu PEk2NtwPP8fJ/dqOpmorsd46M+BdyMbfwjF0VYW3nQvAWLCZYT7xHL7guPMux/xokVBTCyeEkAEg xJYI+9jv24vaMxmhQsBiEKt3rRBChOdmGZ6dxdBQ7Bl2rhuyPERPxc6l0rQG7NLMb3d3qYoAqckG 4GZw9wXHnedKZncIExQa9QshZAAImQD3bLeCWD+vvUWZQFcNdrUkQAix9Y/iqmxqsQOj6yfl/FwZ 1v4nEV99LAvYs4SAqx3/FRut8D7uognQdBTAIpHfwfOeu885jl52YI0S/AkhZAAImQBNmQo2C4NP ryUBQohtfPRWOVGMgWIcwvyL3bD22LtTa/xTPsf7VhZwE96XMUwANqPfk5sApkpEDEzueO68y3H0 UpXgrzCKQBRCyAAQItogYZlGqoGvqertKhJACLEVz9hqtj/LIRsaRjcMxchg8vAcdLNKuDQlyP2J SOqFqmw7CqArSe+UD+BSbB7u7fkB3H3ecfCiw82qdf5K8CeEkAEgNlbJ92QAkBVhtsuXyJEXQmzm I7mKdrI5DMaG0QOGYmjO/L2tx3Ljr4AWygKKBrqtA9fFZCHCcHbgOXzRc+dZRzkPJpfW+QshZAAI UfcdHqsiwDnb2QK8rTJcKxpACLEpz1MXfvIhDHYNg/0w4++5JLFf0yH9DQu3NsoCRt1dFyoCaFBy H1kVUXjnOc+dZ0tmh8EM0Dp/IYQMALFdL80OmABX5iyqNjAZWFOZAIoGEEL0+NnrAVwINx5etwz3 Qsi/90uW8ls1SV9P0vu3mhCwF2UBl8j218VlADGTFC6DAWtDdM3d58OM//S2V2Z/IYQMACETIOob ONUAs1qLmhVh4Nt6vWshhKjzCKtm9I2FYmQY7hnyHUM+DL+vldivhVfFNniuUU2Adfu4C0ZER26A 2rkATPie4eHoVhD+k1seV4b8GppAEELIABAyAUzE7Vbc99LN+yoawIKfq0qAEKLbz1fvwvPN5kH4 j64b8pEJAmUh/M3KzTejZbakLGCXRG9bB9nFsoB1WCT4m97x3H3Oc/Syw5UnEwhCCCEDQIgU7+/E 5QNhUSXA4Et/khtArr4QoiMshH0xNORjwoz/yBwvAbhwjX9qEdW3soB9fbavW5Eg1rt0Q96NV52G tWDyIPwXCf5ceZL4TwghZAAIscoA4Z7topgAy0YBnPtHj8lNFQ3gw4BaJoAQos3HaZWjpNgNYf6D XUM2OEn4d+HzjRWeX9XMfO2P9qgs4Fr6tWdlAZPtpItLAWIYJBVZAbMJHD7rufNcSXkYIgG0zl8I IQNAiKZNgCaO0XuMNZjC4Bz40qtSgBCi0Wenr/41uWG4G8R/vmPIiyD6k67vb3hGv3cTym2bAOse bksd3tV8AAtMtc7flXDrHZ6DFxyzgyrBn0L9hRAyAIToyIBzifZWatqHT1kbRgWuBO/kAgghEj4G TyX1ywoY7BkGY4stThKQlfNmZuabfv6vnA+gK++cjTv2NDtJfugr7MDY8FPOYfKC5+4Ljsmd4MLZ RYI/vf6FEDIAhEj7to9ZFnDt7UyVBMhVlQK0LEAIEfEZ6SrhnxeQjQyDPUMxMmDDrKT31TKA6nnU af3Xk8+1WhawheujXADnv9uzPETTHL3sOXjuRPgbu8bSFCGEkAEgRG99iLNjBWvILDjnoUT5AYQQ 6wn/MgiNwU5I6lfs2lDCr8r0j49UlWRbQvN78GLpVFnALt0BDecCsBlgDJM7jrvv8hy+4ILZn+mm F0LIABCi1jv3grx6cXMB1ElutWZCwPM+YXMDWZiRc3PFBQohajwnK3GfFbCzb8jHYbbfVmv7j2f6 r3hWNRUF0GRo/srn1LOKANFMgBi5CK58l16xkxWSTbaZENCYkMV/eies8T962VFOQySAhL8QQgaA EG25CKbjzTtCaG4OmT1VNlAIIc4R/IsHjzFQjAzF2FDsQFYYTLZ6Ur9az7M1Hn61P7pGOP/KhsM2 lgXs8Yu50WUs1XfPGJgfwcHzjsOXHOXUYzJDpgR/QggZAEJ0Z/wQuyxg/e0u+PBi1sOCNabKHOyP w3Y1mBRiyx95Loh/a8EOoNgxDHZDQr+QXLSKBpizUqm+tZKcNiTmG/1cY6oy8j67UBawS/kAIl9D kwXhX07h8AXP3RdK3LR6fRfm7PtcCCFkAAgR+f3dkbKAUdZBLn5VDRyMPRsNoPwAQmznw8+VQXBk Q8gHhnwHBmODycxxeb/jqICmhVKTUQDd0YDp99cFEZ98dw1GAUTYlbEheW85gYOXHAcvemaHPiT3 y/SoEkLIABCivyZAI1EAl5sAp/9ickO2yA+wKB0oI0CIzX7eeaAMy4IG+yHMP98x5KPwnPDHZURN XG3VlAlQmRW1w/N7tBSgaRG/wtL5qMeexHPoyHHYLFTWuPuc5+B5x/SOx2RVgj8hhJABIEQLJkAH DijK0oLzPrKICMghs+CdCUsDFGIoxEY93PypL34xIgj+QSjjZ7NgCizW9ZtlHi59WKPfJ0G+yu76 vHyrEQMjTQdFqdJTrfXHw+HLQfhP7npwYLXGXwghA0CIfg5UGskcHMMEOPU/x4kCHSdGgHIECNG/ x9apsH1rQxb/fMdQ7IQM/sflwxYJ/S6MYIr8AGi4KkAfxHyf3m1RywKuEIVgYl+nhnMBGBPC/Z2D 2R3P3ecdkzseX1bfSatnlxBCBoAQfdD6jQj7qLkArviIySDLDM6Bn8sIEKIvDzDvwlfV5kH0ZwMY jC3ZkOPs4ovt9EzvyL7arAjQtySGXT7IK3ZlC8DB9G4l/G/548/Y/FQbQgghA0CIxC/sro9JWswq aDMgq5YFLJIFyggQoluPsSqDv7FVaP8Q8irM39ggOhYm3oXLe1ZZZ7Tms2DjHiUtiOk2lgK0ed06 HQVwASGzv2F623H4kufoJYdzp6JwhBBCBoAQPR7Y1akIsGL4JdRZWnD5wP3KQzienTBQ1f/2JTgX 1ipq8CJES48kH4Q9FvKRoRiFTP7ZINQJ9/7k+7rKc+7+Z0NEE2CVyKZVs9BVCfpqf3RVQe6rKIsN NwGiiecYifiWepFdcQesuxzhnD8swv3nUzh4oeTwBU8582S5EvwJIWQACNEpcd9oWcBGZvcj7GSR LDALAxrjQ56A4+UBQoikzyi/WJ5TfZXzYRXaPwjhwzYPf/PuJJnfqoJ59WVHDQrHJvYVO/9LT96B tT/Ss7KCqU2ARYK/+cRz9JLn6JZnPnEYgjknhBAyAITo03godhm/xgZIy5UFvPKjCyPAVoOc0wkD HZFrRQmxxc+gRd4Nz3FJsKww5GPIhiFzv7UnhsBi7X8r4qoXC+0bPMwWygKmeEVstusR/3ZchPSX 0yqz/4sl5XTxN6P1/UIIGQBC9EPxd6j5hObDSmW5KqG/SBgYwo2DEeAWwkVGgBD1RH+1Xt/mYKtw /nwQ1vSb3JwIfs5m+k/1wFq6IsAaSwE2siJAG4K4z7kAulARYEVM9R4spzC57Tl40TE/9GAV6i+E kAEgRK9MgMaWAjQh2NcdIS3xUWPBVLMcpgw5Aly55ppYIbbgueOrnyyHbFSt4x+Emf4sP/n76aUA Teqezi0F6EMUAFu4FKDzh7vEJ2o2avMQfXPwvOfwJcfswFfvQj3ahBAyAITYThMg9khm2fW5sdtb ts1qNjLLw4bWcXaJgBDb/nzh7KR9lockftkQbBEEv81PogFcucZzKqLIPvnfS9b5NCnMVz0nGjQc 2sg90GZSvrYTAi51fSOYAOYk38bhS56jlx3TO+EdZzU6FkLIABBi4zyBBj8cQbTHbm/JHR4nLMsW 65cNzoclAq48NVBTSUGx4Q8P78+KBmPDWv6iythvMzD5yYzhfUn8agv0Bp9FXXrWdnA/a+2rjxUB enNxVtuJseFjvoTJrTDjPz0MJXKtDd9jIYSQASCEWH7Y0ZeKAHUOwVd7M2GAhA1rml1Z5Qvwp2qY IzNAbMB3fFGej8r8qkp+2cKQDyEfmGMhYUxlElCzXF+XH1hNlQXsizBd54Ta+uw6u2vhAibJB3C6 DVNF5ZQwu+s5fNEzue2Oy3DaHCX4E0LIABBCav7i7dovEHBxRYCU5316gGQzIA/5AhbLA45/ZAaI nj0HFmv0TSUU7DAYXbaAbFgtianEvuGe9fyciIx1v/ypowCUC6AXWlwVAWIdpA/fYe8MRzcdk5c9 k1vB3TMW0Dp/IYQMACE2SNhDtxMC1mnvXHGxRlnAuuLIXHIIgM3NsSjyDpyjWvvsVVZQdFPwn75/ M8iKKnFfHmb6F7P+/pRBcHr9f73vasvq8J7jWurja86W1/r4GrkAapfqW+O8tqEs4H3r8U1L+45w oy5K3U7veg5fdBzdDDP+WuMvhJABIMSW+QKtzqqkbi+hCXBpY6d1fl5Nqniwriot6M7JGyBTQDQl 9Be322IGP4c8D1n6bRHW8Nsq14UxJ9EAx8n72g6HbmtvPZlibyT5YAuCuIWboc838vF3dfE9nx15 Ji97jm473MSHEpwa+QohZAAIIcW/zkAlSoWBtY7x8g/Hzlew1EfcyUaLBIJ4g13UR19UFFjMqPpT 7coQEOuK/cV9ZcMMoDWL5F6GfHAyu29MtY059Xl3wTLgVWbcU24f4Xl4dpeRTYAUJmRHhHXvSqK2 XRawZmPr5AKwWbg+8yM4fNkxve1CMk4TvvdCCCFkAAh5AmlNANptK/oO1ynZRTVoXlQUKMxJiTTn j42BxRICjAwBcbUQO20gWVvN4luDqUL6bR6y9Z8O+T3W+4vkfb4j39UWKgJsUj6AjX5ftbmevwsJ Aa/AZB5jzLHwP7rp8aU/rmJz77tICCFkAAixtYq/h+J6he26OqZeGAJZYbCEvAHehXJMx2ZAec9q AYkDCf7qhrZ5NcOfVev18yoXRX4qo/fphH1N64AmBHqbU7Vdevz2Jby+R2UBO3VrXfR5A1kGswkc 3QzJ/eaThRGoZ6YQQsgAEDIBYmXxr7N+fQUToP7y+DVLedU8xqUSYdVp04Graqtba6A4Gw3gj5cO 3JNHQGbA5n1HL/hfayujqDhZq2+zUIrPZOHv/pRRcLocX7SInwtybka9FVcp7hF1uUHEsoCrfnwN kdzUY2GtZQBtmQDrLAXoWFlAU63zL+dw+wXP5JZndrQwBPUoFUIIGQBC1BkPpVgG0EjiwGZrg0XP In4qu/riv4MhcPp35sQY8EBlCJzOzn4mnwAyCrr2hfPnqLXjyA4b/jFZmMnPMjBZEP1UBtEiq/ei HN+izauS9aU0AaKLvSbE1qURQhFNgCYjkZQLoIUXZkMGBCfCHwPlFCa3PEe3PPNp2DDTiFY0g1MX CBkAQmzzQCfxiLZ+82uWBUwUMbDOjNW94domOyUYvSHjVKSAq0wBd0oc+pPB+pkZJBkDzYn8qt9N lYzvOEu3WczmV0n5slCC7/jamLP/vWjbu+4J7tTittmlAP0Wm70oXNCjKIAu3GcL86+cweQ2HL3k KKchGs1maH2/aBLFmAgZAEJsy6By7eYTrvFfdtuuVzBc2qS4d3C4SPSUB7W4KEF4snzAnyQXPFXP /fjv95gBhvt/Jy4X+d6fHagvsu9jzcn/21B+b7Fu35wauPvzrvHprP6mQ/drDzL8191+6Y92PbFf 07kAWhDjPUlbEKexSuCXM5je9By9HEr7WXsquZ8QzfK4ukDIABCi5ybA2qHBMXML1B2Yxy4LWPcY iZwPYNn8Ahe1eY85sIgWMAQRepxL4BwDwJ/5ffilc/eNRa/4xQZ8N7hckC/KOtoqZN9aU/3LqTB9 EwboluO/eX/PfcPFM/lrr3C5ZDF4ShMg6jKgVXIBRH3WdKAs4KqL+qvnSO2P9mkpQFu5AGLciEt+ 3mbg5nD35bDGf35URRFJ+It22VMXCBkAQsgEiN/e2oOpnsTPpjABzjMp4GTVnj2JKOd0/fdjVQq+ +sNpo2BhEuDBeX+yravRr/E3Xc6LMFfv0FTl8xbbW3syCMeeZNQ21pyswTeVEXDq39ORAYs+dWX9 Y+t0Ocym9tF64rXIB7DBkQC9W4ERYT1+ChbPFlfC4cueyS2YH4QILqsRq+gGygEgZAAIsaGeQKcO qNGogro77MnI93iW7pxkg2fEaJjQvs/QOfMf/ny353Tm+TPRA6eiCu49pvMMhFW609jzy14dC/Yz 250S+tk9g+97DuK02L/QofBw5vRMR76kLQju6F+HuhFGXV1usM5H+/CMacNwaLNfIkcBmCqCyM1g etdzdNPjpuH5eJz4UwghhAwAIRoZwLS5cD7hAC9m0ykqAkSLAqh7IiwxA3+PIF5EE5xek2r9BbJ+ iWNdOQfBRdtXo+dalRHuWdt/WaeYrtyITe+y6+vho5gMaQ64kW7oy7R8H8sCxjrvqmyfK2F223P4 kmc+4TgBqFGCPyGEkAEgRHMD34RtNTLwWnMRcdtlAVNc7jprdZdcXpBi0B299raP+z3plVhqYfut iQLowb3Ui4oAfX1trnnCNg8z/Ec3wxr/2V2O84gIIYSQASBEPwatbZkAFybLasgESFRqMEUUQLKE XZH7daVB9hVJ0878OaIwvm+3kdquc1uv6olEydWROiFgEybAPR2yVBTAmmHvtRMCrrivpZ8jbexr zX32riygOVmKNbnpObodhL9Hyf2EEEIGgBAd1/rpGlhz4J9qAN70eadqs44JsOT+uz/zF1nAtXjt +nQsrXdBFxMbrvPxPuQd6KMJ0ACLWX3nYHbHM7njmR2E0H+baY2/EELIABCii4PkNrNDr3WMDZUF rNNenRl7WsgF0DXBFfkmilrS67LDjBQVEbvQRZJL1oMM/3WPq4mygJ3+Xjb9ubbui4RlARfJSd0c 5gdweNOFNf6VUaLM/kIIIQNAiG57AimWArR1RimMjw2sHlA7CiBiv6YS6p0zOJo4niYEeur+aeG5 knQfDffxJucD6FzkGkHcuxKmtz2TmzA7DOtMjKEqtYIS/AkhhAwAIVoUEiw5uI4ZCXDFmu2LGmg8 wWCqDP412luqm2r0Z9SEgKt2fSoTYInF8yubC1dsu3YUwAXXL2UkTezv+tJN1Pn+r2oCRM03EDkK YNXnxarnBM0ZDj2ZyV/n8xflFLFZCPWf3DwJ9Qcl9xNCCBkAQvTEFzCtfLghE2DZ9to+9x7Nfic3 AbrQmX1Od95CqH7DgQGJD6AjZQGbXJLVk+n8NnMBmKo0qvcwueOZ3ILZgcc7hfkLIYQMACE2VvE3 tN+Vj/HqD8aMLIheFjB2ZAEdqQjQyn0V/tDZlAV1Zur7ngugJVNivX2kSSq5aWX01nq+9OFddFr4 uyD4J7c980mV3M+A0ShTCCFkAAixEZ5A4sSB6caIDZUF7NGoP8VSgBTbxqq93YoIbX0KvP32ox9i E0sBmurihp8BG58LoImdGrA2CP35oWdyyzM7Ov5TKOmn9f1CCCEDQAiZCZFrg3dcoKUWPZ01FejQ zHqdNftdqQhwyfa9qFzYgwz/yR5YXY8C2IKKAKlNgOM1/rc907ta4y+EEDIAhNholb7+do2u3a8T vlD9OtpMYjX7s1TYfstlAZMlBOx0BYWOJwSsu9vUyQYjiOdL89A1FWWwxnkkLcnZcGK/pROLxhDk LSwFSJG/xtjwp8kdz/S2Z3YYtjWZhg1CCCEDQIgNMwF6XRYw5cLpNoRJnVwAqUyAxkbiqQ2D9PdB qkSaG5kPoIu5AC41ASIfwLImZJs3ZhuCvMV34Jk1/ndDVv/5UbXG33JSzk8IIYQMACE23BNY2wRI Nyhf44xiRwH0cuQb75xqr9tPVRawFXOhB/dDn4/9gmPqzCH2ZKF9Y4eZIIlp0pMz1Yy/h/kBTG45 ymkwAjDVGn8hhBAyAITYRpHXmqGQ2HzotG5PFAXQdx20zg2XKlw/pcGwid5SH05q6SiANZYCbGIU QCtRByt81uZhhn921zO9A7MjH0L9zckyACX4E0IIGQBCbIUJ0Fgk9QoCadXlsJftO1rSQh8/F0AK E6B2LoAlO7zW7bFEuytf61RlAa84oFRlAaPs7IJjby0XQIR9LNU+6+8j2VKAVb83K4rrxmfmGzQr 6pgAtprxn9zyzA6qNf5Uyf02zmkTQggZAEKIdU2A2G01Yio0m7I7epKyBIP3jc4FsMT2napgsEQD reQC6OLSgdb3kbKExIYJ8i6dR7XO35chud/sIJT1c15h/kIIIQNACNGLwW395i/OBRB1hz2K105R FSDFtp0rmdal3BA9aD91mcyouTxaOslGogDoSS6AiFEAi5J9bg7TQ8/0wONmwQgwpkrwJ4QQQgaA ECLR4Kwpcd2BXAApogD6YEAk3X0UoR6hLGDd3XYta3/Ktjch4eA9x9VUWcDOGV1tfS6CCWCy8Hk/ h9khTO44ylllClD9Xev7hRBCBoAQYskxWEfKAjYeBVBzN0nqlUfumI1fCtBLpyPhsbQ0G956dzW7 Cih9432IAmjpupusSu534Jnd9cynVWI/re8XQggZAEKIc0ZrEDchoE/bXp1zuUqdpCgLGNMEqJXT rEVjoVNlAVuMAmCdY77gQte5rev2d5S2VzEBoifrS/M8vOCuifO9a8oEqM6pdnh+G8kH6+xzscbf weS2Z3rXU06rPynMXwghZAAIIdKPM5s6oPajChrsuEQXIkUugNqH2ngugDrZ9iIdUF+jBjr5EFjh EJv6cjc5O9+H6fyEx2gqk9WXMD3yzA+C8HdOyf2EEEIGgBAi/oAtdj6AxtbEX/7hRqsWrNB5scsC bvQ9usQN19lu2uTr11NTImlZwDpRQxso5uvsbzGr7+cwO4DpgcOXwcwEiX8hhBAyAIRoV4t0riJA Q+bD2kZFg9c3VRRA3yoC9FmkpxbQEbbfiooAPbkHe5kLoMrcX85CGb/ZXSjnPjy7FssAlNxPCCEE oBVgQqwyYrv6V8tnUvZLfsyv1qaPfIJ+hY+vfUo1ztuvcZqXmQAkaDf2tn7Vdi+5gf2q7V6x/X27 XaVtX2OXPs5XP1r7vmYTfsUDJs139+r2fdzr4KNdxrjPkTb3VbkHNgNKmNz0HDzvOHrZ40ofogGU 4E8IIcQ9KAJAiK6YCm1EArSdJb0vbXblknchEiDl7HiXygK2dB+l3m30SIBV1gU1WXmgD3kHVvlc NbPvZjA99MyPoJz6MNuvMH8hhBAyAIRoaZSeIgS1kQR6a+QCWOEYY5cFTFGffDvLAi6V370/p5/a YOjaUoMWnocpvntr7afpG3PVZ/4yz5dTofxuDrNDz/zQ4+bVnyX8hRBCyAAQogOeQFtr3ddur6Gi 5V2r1R7DBEhVFnCjzIWWrnEP7rfWK250OYqm4fPpSj4Ak4VSfmGNP0wPHZRV4lMt5hRCCCEDQIi+ jdITNZ/CfEiUkTu26OlLRYDOaK26DlbEA7+vqUgivRc+xcZHAbR0gdq8yBE/txD38yPP7BDmE/CL 9f32lIEohBBCyAAQovkBYuwogJhr9xdjxHpLCxoqC3jlwfXQBKhxTrWqAizR7plNUpYFjHjMMe7x JJe27rFHmqGOugzonOfKlacUdZ1+5Au0igm56jOmznMkQv8dRxlV4r6cwPTAMz/yeBcMAc34b8G4 QgghZAAIsUUmQOIBZqNttpwLIIUJkCwXQEfv5ytNgK7cel1KNtjEzHYXIwcufRZGPoBEkUit9d3C nKjW+PuJD8J/Aq4MJf60xn/DhxIS/kIIGQBCbKCG6oCwr9/85dOT21hfvJYJUCcfQGQRmzzHQFeF VBcEdIRzjd5dy5qVG/zd7eKtaxbC30E5hdldh5uDLzkp8yc2j+qaCyGEDAAhNDpcvulNFNe0GAUg lurfM3/uSi6AS7bfyFwAvbx3OlAWsEsPsyqBnyvBTTzzw6qU3+LP9qQZsWGPWK8LK4SQASCEhNUl 28U2AWJHAcQ+7+gmQIKOSREFkGJbRQG0eCwRDIy+RwEk7eIeVwQwNsz+zu56ZhOPn3C8BODMDsVm iX5dWyFEB1AqGSFiDkaXeb/7yO2lOD6/5IH7BGOZOm3W6Eu/Yj8tPaCLeQv5Zu7R+tv6828TH+84 7rv9IrVd57aO1naka1T/u9rifXPOcfllOzH182Kdffmaz5Hz+uKUwJ8deI5e9kxuedykGo0pTGnz xgT+gu+prrUQokUUASBE4ve/abWBxO2dajPqTGKPwqGXjgSokwsg8jWN2519jrNv4VhSJxyM0Fj3 S1F2a191P2pMWIbkS5hPPPOJx8+qZ4emYTZX+AshREfRq0eI2C/+mNst+zHf1DH6FKe1XnstRwG0 fi+lbLfuDecTHmake9wnPG7f1rXvqtioGwWw6rn4Bruhxk5MNavvSpgfwtFNx+yux805Xv8vNuTV 768W/ubKXwghRDMoAkCIBsaLMUuFxZwkW62thqbO2p6WbDHHQPIogC5M+fY56V0XS/CteQ5NVATY pHwAVwp/oJx55kchs79z/jjbv2nMrRCNCH8hhOgZ8p+FSDEQjbl+36++32Xa9LH2vexHas7kpogC iB6pkCACw6/QVzG7/ur7yp//54jH7CN/Dy9tN2KuARK172N9/y9o0Ke4gXySqxvvEFc8p3M/tsjq P4PJHc/RLc/s0OMX4l/0Xuzf+3MhZslfGxQJIIRoHEUACNGgL2Ba+fDVbUZpPnZ7nbwQHT+GruQD SNVE30vldX0WnWYiAa5srCdlAT1n83+4mWd+5HFTKF34m8L8N+Pl7e8V7csYRxdst+zHhRAiFXo1 CdG2IIj9sUYW4vtGz9vHbjNBrgbvu3WPRG/X9+Mwl21gI3MB9GAffq0LtM5+4mNs2JGbwfSOY3Lb M5+A8yfr/0XP38/+RLSvdpNE3k4IISKgCAAhujDIWCGLfPsFAtYsWr7ieUc+ibiXctmKAHVPJ3If rNRuypupS9c49bFE6Ju+RwH0OheAqbL6lzCfecojcPOTKWJjmjMgRMJ7aBnBvsZFVhRArynVBUIG gBCie2I0trheQRR1vYLh0u21bSrQ9cmhkyNMlWjwvqa6WFqvK9et0fj3DgnzdT++xMbGLoQ/lBNP OffhI6fXcUvVbazov0+0r7kUQK5Ab9lRF4i+oyUAQjQ4qFg7H9Y9ib585GOsv7Tg8vDdqKHQvh9l AX2CpI1JEwJGLgvYWELArpQFrJtsMJI4iboMyCc89qWeNWnKAkb7nAlf7NmBZ3rHM73rKGcnWf1F D1/NlyXzM5dr9GW3vWo73Tq95Qk0gSp6jm5gIZowAZYJ3Y9dFrCxMnYNlQVMdG286UckQNJjiBL2 3vFYhUsOr/Ejb2npQNfu77O7jHyB1oxEMtVnKWE+dZTTMPt/nPhP6q1/r2IDuBqCvY3ZeEUB9IEC yIC5ukLIABBCdFO01zygxkPt284bkKI76+QCWPJYa59S4xUBGry+TZxADwR39NOvm2ek71UZLhH+ roRy6imnPswSL7L66/XVyxeuTymw12hTer+XOF02IQNACNFdQdqmuE5kKqQQPX2JAuiM3rrCwepK bsEudGCr16yJna9pfCwdBbDGsS3T6sKwczMo5575xJ/5oJHy7+d7N4GwX1m0L9ueXAEhRGKUA0CI lgYjvqm2Vlgr7Wsf35qLoGseo2+rzTpNRlpHvvb19EtuEq0soL//zxGPea1cAHVv1ZRtR2rfE/ne 9Su0H7WkZJqECv4SUWYMlDPP9K5nctczO1y39pto5wV78cJ+c+H/LCHal/m1aak9IYSQASDE5hkF jZsAKx+jb+a862zu0/d7NBMgYV8la9f34zDbvK2bMAGid1YTs4++od35y9WWm8H0jmd2APNp9WeN jHr0vrxH7K8pxOuQXKPLBBBCJEJLAIRoWet3OaS5fvMXFy2Peqg9WntcKx9AnVPv2/rrlGvkU/dF 6mPpYj6ALh7AuvtYLEly4ObgZh43r76jEv690/2rXP6kofZrlvtT5L8Qoin0uhOi6UFyzO3ifKyx Y/RtdKdPcHy+H7dRF24in+jAGy0L2LXr5rt0w8Q5D5/4AhkDzkE5hdmBZ34UxP9iCYBmW/sj/P19 Kv4cJR2ThsoCCiGEDAAhtsQEWDs0OHZ7KdRJqvXtCUyAFKLKpzJVIrbrW7lX+vu9bV1w+8S79Z04 pfW1mwnl++ZHMD+A2aHHO4mwvn31aue6MLV+LYQQMgCEED0zAYjc3rLrcy8clfnVB/ltCi1fc6DZ orHgE7TrV71XrrgHfKLru3YUgE94WVMnBFxVRaU0ASLkG/DLNLZkmLX3MDvyzA9DVn9femXz75vi 98sk8Kt3UVdKCGhoJIGfqbFfIYSQASDEZnkCDX54TRMgRXstmwBJrm+Cc0puAjSuglsQxl36UvvO 3r5pTYBVGvMXC6Uw4++ZH3jKaVjzrzD/Hgn/Bli5KkCyg2j/cIQQMgCEEJ1W/A3t1/fj9FstC+i3 9D5a+jh80sPsdFnA1JesiQz/rcf++ytFlKmyp7lZEP6zI4+bSfj3DrPSny7ewjR3jCbBOcsVEELI ABBiWz2BFGUBG9Eaay5SbnndfpLrm+r8I2/re2MubOCx+Ga/ZkmeLQ1VBDUmiPxyVq3xP/K48pRg kmjq4QtvCQ1sVvnQFX9qMHGg9L4QQgaAEBoAJdvu0knZmFn86/zBp+mfpU+pZpuxB7LeJ7qFumAC XHER/Drmgq+x24hRAGtHAvgVuiq1CdDEUoNVzmHZqgDV+v75xJ/M+M+9VFPXX3f+7M9awrhOLoDY s+yxcwHUaU/3uBBCBoAQ2+sJpBzcr2wq1GzTd6rj+nsz+L6eSC9q7vX3WPwGnrf3UE495VG1vr9U mH8fvv1L3wprz+6vkRAwAioLKISQASCEiDdI9mmbT3eMvlGNsI1RAMkVX+SbqJOH6aPe1s1fMt+x 7SOchz8ljLzzzKdhxn+xvl8zov14r9W+RGtf0wbyAZgEh697WQghA0AIjZ2aNgsaPaMU56IogKj9 6pvo25TXt89RAL7792KyQ1wk9gNcCeUU5pMw23+8U4ml7j6vEt+7sdfuJ68IYFr5qBBCyAAQYhNE XmuGQirB3gfd3qOKAJ3Jm1j3huvKUgDfzqXtTRRAE8dkAAflHMpJ+DlO7Cd6K/w7EQUQe3emmfMx 0ftGCCEDQAjRSRMgWoKwBALpykmeFcwCH/EY+1AW0EdMrrfy7bFkuylMAL/O/ZpSqKeOSGg4osUT OSGgX+GUajwP3OxE+HsJ/82i7pKN2Bn8zZJ/jnCMsZcByAQQQsgAEGLbTYDYbfkWTi7xx1s1AZZt ctNzAaQyAVKffp1AhdS5ADZhVv8qsePBzWE+Df96p8R+nXw9LbL3+9UUbycq7aVIyteQCZC8Q4UQ MgCEEP0xChoVA36d5psrC9inQXUS4dWFsoCtmAst3A89aN8nPqZaUQDHif0q4T8J/+IkbDot/NtQ 7mvN2pvmjrOB9vS1EELIABBCxBUBbS4taPMQNtCA8L256dIlGvSJOkW5ACIcXlmt8Z/es75fCqff tBAFsNIeTYt7X3N2X0sBhBAyAITYApUeuyJA+2v3L4gC8AlEUIJ8AK2XBayTC6DTUQB+fRPA1/xz yoSAkXI6pFwK4EmbW8RfIWb8HMpZEP5+rkd9J989K4b31zYB6izxqBMFsGwkwCUCO3Z+gdgmgBBC yAAQQiZAXBMg8bmsfQSpIgtq9GXrJkDi/oreru/MVynah1vJB5C6oRTbe/CzIPxdWSX20/r+7on+ qzL4pzAB2qbBEH/Tp/MQQsgAEEJ00hPo1AH5yGfkY3aG396bwSdo1zdxIqkz8ff1S+27fy+e/l9X hfo7h9b3i6Qi9+pZ+zXKAprmz0d6XwghA0AIKf7ooiBKKHDCY/Qdvza+Jyfiu9J43YoAvmffw217 7lygSryrhP8s/Pdxe1ItvRTWZzZrOwrAbE5/rtuecgEIIdYhr7Pxb3/EG9Rjolvv2i2zsPw67/m1 PtxQ83UaqbmtN0tsnqqPlmzX+6r8Wct9ddW2iW+lzt3bSY+lhe2jd9ci34arRL/YWK/AG+KaYhHb O9PUsu1est1K7Ymt4T3e9jZ1gugtigAQouuK/+pfxc8F4Gk3IeCyp+XX7s61+tKToHLBJpcF9Jff B2v1p6+x21VC733t01n7e546IWCMe2Ux4+/mEv+de334sz+XiuBUkQCx2zPr/NnU/lDMhIAmQXur XkchhAwAIcSWmwqda9735LwT9WXshIA+0Yd81+7VbcoN4dttwlXC/0yYv+gUpm0xaBJtu1abHVPI sU0AIYSQASDEFgl2n6B538Qx+vWabjMKoIHr0zXRmE6o++YPM2XW/k2sCFCF+bs5IamfhP9mmQAm 6mZLbxw7F4BZpYHYpflSVARQ+UAhhAwAIeQJxBKjvqnjq/OJtmfs207eF9lY8KnPq2/ttvpFbek8 V/ya+YXwdwnLVYp+fT9Mt9s0q7TZ1iy7BLsQQgaAEKKXIijFTLhPc/qttbeBFQFSlQX0iXbiI9yP yfrBd+y2WYh+Cf9uPm+XvCbJogAizkjXXr6+9jk1UBbQED+Lv0lyekIIGQBCiD4I7LUTkNVJCLjC MUZJCMg67a0/cK7TZqsmQI1z8nXvkZQJAVOo4FWub19NAB+n/Xt/tZjx9x6F+XeVmoq5N/kAUuUN iG0CtNlH0vtCCBkAQmyvCRBbifjI7cU+Rh+xvRS5AGKbAL2cdY1oAnR2VUGXQvt9vHaOy/hJ9Pfy 69S0EI1dEaATerpBo0K5AIQQMgCEEM0PEBML+8ZzAfQo0//Su09w/j5Bv/qN+mK0fCy++XNViH/H 7pdlDcUuRAGYFtszLR5aTwsKCCGEDAAhtkrxN7Rf349z9gkalI6KdRHOiQLoSi6AS7b3ffjq+7NC UzdtxzD9OYbWKwKs3V+mmf5vIBfAWu0JIWQACCG2yCioUxFgxbD9eksLLldWPuZ5+36UBexTFIBf 5T7xNf4cMd9Dp8sC1jUYWogaEGkFuKmx7dKCvS9lAWtnBVxilxe2Wc8EiB0FIBNACCEDQAgRT7R3 xARIr5YSHMI6gj2BCPNbWb7Pd/swfTu3tW/6WorWbrrWtVtLyfvaXFWQ7NxNgvOVuBdCyAAQQmPK WCZA+wLw4nwAPua+eySafORr6VPfI30zLZq4Hzb03hQtiu+6zZoN7ANVBBBCCBkAQmyv4u9Q8wnN h1b8ihrn4ztyHXujMVOVBVxl110qC7hq2xFDqIVMgKUOs+0oAJOgsxsMRYgZuq9lAEIIGQBCbIkJ 0NhSgMYEu4/WN51WwX2qXlC3IoDv3vekz9/xpUS/BvsbJepNonaTnFZfygKa7rUnhBAyAIQQcUV7 W8Jk2bKAsdtbwQSIHgWQIBJgo8sCXpi0z5//54jHvHYugDqBCrESApowk2sMGNuz0O4teBZ33QQw dcLr6yQEjBi2HzuyYCXRbhK0Z6LcFpd+yKxxHYUQMgCEEBs8Do374QiivU0ToC/XtwvRDb7pXftm m/Dd/lIbA1Yz/t3C1BRyNQVoXyIBUvdtVBMgQucljQSIXRFACCFkAAghV2Ctj6kiwFLb+g2/R6K3 m6osYN3dpizdt8pxVzP9VrP9myFUO9BusrKAsaMAGu0v09x1jXnoKgsohJABIIRYWXQkXlbgY3zC pz/vxsVyi2UBfaI+8Cn7q5mbr71j8ScizWQS/qJn+QA63KhZpU3T0snrOy+EkAEghDhXKHQ9IWCd 9padMvX1DmHZ4/T0oypA62UBU4rvK+4Bn+h418ozcMn2dW7r43F/BjYL/0r490V5Uy9kP1W7dZqt ewyxhbCpsdvGTIB6MfUrRynEnrVvy6QQQsgAEEJ0xxdot4HE7SU0Abb1ZvAJ2m0kF0DK6I0G74fF bP/iRwP1fhsGqUyA2Nu2bjCZlts06x9U8on/NcS9HiNCCBkAQmy74o+dD6CxcHy/etO+/T5PEQXQ +r2Usl3f5Q5a7Rwv+pOxZ2f7jWEzjag+qfeuqqgu5ANY9jAjGxam8b4y6T9mNus+EkLIABBCdFWL pEgK2BGNmVZ8duz6pioLGLlffRN925coAH8yADcZ2Fyz/b0xAVK11IGygL0RmiZRU6Z77cU8dz1e hBAyAITYOsXfQ3G9wnadNih6FAXgu9LmFQ6W7+r5+4t/t1jbf0b4a7a/EzrVLLNRKsXVAYVmIq8h N125sA22F7NqgSoCCCFkAAghVhIfft22EmbR97WPb8014ClK+LVcFrB2FECq65kqH0AdEyDiMccu C2hyyPJK+OcafHdK+adSZaaGuVCnbVOzzRZno5OUBTREM2OunrU3a12n1kS7TAAhhAwAIUQcNdbw WnufYCc+weYtlyX0nZ0Kj9Su78dhnvfBLIOsCP+aLPH1EmuLWRNbHZn0x9yFfot2qKb5UzerbNFg xn2T+oMyAYSQASCE2CKtnzhxYDqh1VxZwNbFcksmgE/UB50qNxjz/PzJNTAZ2ALywT1l/CT8e2EC 9Ekdxc4H0KuSk42VBVzzsDqWB0F6XwgZAEKIrVL8DTSfcI3/stt2vYLhNucCSHWEqRINXrkUYCH8 bQjvzwaQDcM6f7FhXsCqCqpnUQAmRa6DTawI0KCwN6n7Xa6AEDIAhBCbZwLEjgLwkY+xvqnQUFnA aq141KUAiRICel/vnJbefReiAOrewBGP+UITwIcZ/qwIwn8x46+Z/o6o+DXWiqcwAZZONGjqtxtb 5PWmLGAqs2LNfAArp15IYQJI7wshZAAIIRMguQnQWBp5H7m9Zq9NXyIBmrxH1zEBGuumqoRfNqxm /AswtjJgJP5b0fpp2zXN7nhDL0AyE6Dj9xEJzrtXXyQhhAwAIUR/9FbTB+Sbbs/3ueMuOMwE55Q0 CqDz5sKpPrVVNv9hJfpPJ/WT8G9Fr0TNrt+QCEpxzH2IAuiDuDaR7wXT8L1V55yl94WQASCE2HbF 3+bCed/+6UdrK1VZQAnMK/ohchTAqaR+NgNbhfhnhZL6dUHwmeZ2FU9Fmc2+JktvZvpxrEt/uMEy iyoLKISQASCEaF4U18kF4Js4Nt+o+eCTd3CE65vq/PtWEWDFW2mR1C8rIB9CMQpZ/TU47oBwM+cL lahr9utWBDCrnUpsoZoiCiCZ/u5YZvy1m1p27b6eIUIIGQBCiE4p/hQJAWOaABeGWjdkAtSpMtCX hIB1d92VhIB+yT/XbNcYyIeGYhTEv8lXWAIhGlSSibTVhQkBO1qDzaQxAWpXBDCRu8HU2G2KpQCm xocbysxvVjUV6kQByKgQQgaAEGJ7PYF0DaxhKtRs03eq4xpqk5pVAdo7zPQd6a/e3OaQjwz5yJAV HmupVS1BdMMEiCq+uyDWTaJ26zRrNvgar9ym6cStlMwEEELIABBCbJHi92mbT3eMPv3x1W3PJ+g/ 36N7qeWbyJ/361Nr+00GWQ7FjiEfGmyVzf/0NqJhodftCfbemAvRm01Vbi9imyZyX5lVGmhwaYPp 2pdECCEDQAjRY08gxVKAts4ohfGxgdUDakcBROxX31B/eRcGv1mVyb/YMWQjE0T/Yt8S/v0T/o1H AZiop75pZkGt3ZuenFcfKgJI2AshZAAIIc5VWsuK9piRAHWE1bJl/FIkGEyVwb9Ge37F63jhpqnK AkY2F1YyAZbICeFP9UE+MOQ71c+gSiUvwd+a3r9QAK5pCFz5cROjXRPtuDeyLGCKqgAmwrWv2ebV or1eFMDKa/dTRFVc9VHlAhBCBoAQYrN9gXY+3JAJ4BMdru/ShWj2GJKbAGufR2jNWChGhmLXkO2E zP6n/ixaEP6dOZgU2654DH2pCmBMj262tq9vA7uLvQxAel8IGQBCCCn+9vbrWzq5tssC+gS+gt+w ++iC4/CLiAATyvYVO4bB2GCHYLOqb52+/l1S/9Fm6k1bJ9V9c6HrIjx2FEDsY02aC8A0e7slP0Yh ROfJ1QVCiNMayiz1y2U/nPjY6n6iTiMpzidxHy1jApgU5x952+NNatx73oeZfpuFRH42B2tPxUF7 Rfq38kBpWjzUXdJRZ/sLt423jmSplmrubunNN3E5TMRzOm4qRT/FbnPN9rQySojNRhEAQoikY//6 f4y9s/O37Xzkvm9rxy2fd512/amkfgPIdwyDPUMxMkH8LxrSSLY98XXR+v6rf7XkH68+hFSn1u0G 07abLBdAxDZNKzf88geRvFhA7LKAigIQQgaAEGLTVfr62zW6dr9OWcDYJkAlMvtQFjBZQsAmKyhU /W2yKsR/1zLYteSjMEJViH+Lgj+NVlrrOEyi4zaxT8jU+NiGJgRMUhYwYgI9c/o/2kwI2JAJkNy1 EEK0gpYACCET4MxL/cKo6xWXAjQa9b7WGoY1zrnuR+qEti87eK9xrLWWAiTur9omQLW2PysMtgjl +xbhqhL+LQt/H6epKFH292wfNaT5VGNXtptySUKsvu3YreSjLMvo2Hk3GOK/8q4U9y+EDAAhhDyB WCZAzANaremLP3Vle23nDejszXDBZhHvEQ/ggllhMjAF5AMbkvktKvhpbX/7wr+DYrd2+1GOpcO5 ABJta8wGVtO44vzP/PncbevdB1e3195tKU9ACBkAQoitU/wdMRQSmw+d1u2JogA6fRv5kyiFbBCS +mUDMPes69fAtCV9dOoypBAnqXLtpRIz0aMAWhK269wPS5kAS+6/E1EAvQmXaGE3cgWEkAEghNhM EyCKaI+tGqttoyQXv6eRSw+j5jEuJdhTtFmj3doVAZbs8Fq3x73tVsLfZkH4Z7kJwt9U4f0adLaq NWpt6BMeiE98kiuI2ZP/veAAVxC0Sx1Ozf6uVREgxXVMZQKkOKdlw+yXjQK4or3jQ4tgfqws2mO3 J4SQASCE2BATIHZbjZgKa+6k5sej5gKoawIs22QXcgGcMgFsbsiGkOVgcnM8s6i1/e2pfsPFoim1 FvcxTICGcgGspqJau6ztHkYKE6CFXAArtRfxfFq/zjIBhJABIIQQyYX92s2f84mOLENo7RK1ZAL4 am0/FrIC8pHFZGDtyXF5DS7bFWlNiYMu5QLoStup8imcii7wEdvtVS6AiPfm8Z8j5ALojGPRbf9K CCEDQAjRJ2EfJQqgR7kAUkQB9MGAuGj33hOS+lWi3w4M2dAE0W9ObSO6J/xTi4J6EdOdTGx2tt0O T+G2nQugjrFQ51A7WRGg7o0d93pqKYAQQgaAECKeiO1IWcDGowBq7ia6CZCgY5aOAqh7nIs+qIS/ zcEOqvX9w1DC7zi8X4PIbgr/dfRHlzRwnaUAKasZrHBCPfMB+nGgEdu8PApgTYEthBAyAIQQjSh+ iJsQ0Kdtr865XGUCpCgLGNMEqJUAsUVjwQOmCuPPCkM2Cv/avOqTUmv7OyP4YydFiyzKohkMDZgA Z/PMxU0IuHFlAVvMBUDkNi/ftoGygJckOIwdBSDXQggZAEKILfIFTEcPqP2oggY7LtGFqF0VwJz/ ++M/GchGhnwItjDYrNrEKcy/U+I/kkhvbfvU/eS7ddlimwDGx80FUNsE6Mt1a9ME6FgfSe8LIQNA CLHtij92PoCOrIlvtGrBCp0XuyzguuYBvlrbX5Xwy0dB9BtbHa9m+9sVj6fMsl4YFA0lEEwfXh8v CqBv95uPOHtcuyxginwAsSNgGotAWOMWUhSAEDIAhBDyBEwrH07RfEMVARIbFbGFfJ0ogMUA3+aQ VSX88qE5E44q4d/uF3YRjRF1nL5Ns/pRRGe8DogeBUD8igCdun4NthfbBFhpKUBPL4MQQgaAEGIj FH9D++1LiH3sZutEAcQ+l0rUZ0PIRyas8S9OmQIaGbY7OK97U6wymr8guTmJNPCVbbO6UL/y0FY0 Aa6sChCl3TWPOVFZwHgXd/XLvPTptF0WsKE1+Y1UBAA9/4WQASCE2ApPYMWkfLHD7C9NkFfnwBMl BFxKsLccWXBuFIA/9W8Gg12DHZ5K6uc0098N5b/cZU5Rsjy60aApxub6JJEJ0KtcAI3lDWg3F0By E0AIIQNACLGpij+OYE9hAsR2L6KaAMQvC7j0piuYAN5VotKAzSAfWfIRmLxa2+9CNn+NADsgDGOo h0ij+VSl+1K2HVXIpIoCaMAE6IXB0XYugLV3ucZ9EGE75QMQQsgAEELEE+1trXVfu7018wGkOM4W l194F6IV8gHYogrzH5jjGWZPJfxFN4V/U2P0vg/0U84QJ+6bFLkAkojhVFEAbWb6bziyoMsVAYQQ MgCEEFun+DvUfFsVAdruzkgVAbwHHGAhH4VkfsWOweSn1vV7jRM3Qfw3IXRbiQJIXRFgxfajt9uz KIDYJkDM7P0p24x3YydOMLim+SH/QAgZAEKILTEBYkcBxCwL6K/SSMsuBTj1q2hLFa48uIZNgCpx n82h2AuZ/LMilPBzWtvff8F/hQiACPkA6pgAqyQKS2kCpEwIeO7H4jkmS3XlmgkSY7Xbm7KAkdq8 L4M/xIsESBWBsIaSX9lQEELIABBCbJkJsOJ++9A3UTZPlGTwONGfgWxoKHbCjL/Nw+9dGX5EB3S/ Uah+b8/3QnMhggmQ8Bxb775UJkAfbsMGlyEoF4AQMgCEEKJ5bZ54nX395teIAui4UbEI8TcWshzy nRDivxD9VEn/PC1n7hbHwv/CcXQXB9YdWyPfmWNv4DxT5ANotSxgn+6HZcsCRuq8+yILfH8fAUII GQBCiK1Q/Gs0vYFRBU1EAfiyqt5XgB0ZihEUO4A1Jwn9vEZuXRT+rQruvlcEiBnO3KRc6oK50IVc ACmiAFJVBFirv9pdVJ+8LKBcASFkAAghZBRctV1sEyB2FEDs845uApwS/piQ0C8bGvIdQz6o/uZQ Qr+eCf+UWftTj9FTJe2LagI0VBYwVc9vcxRAkt1HbDTp2n0JbCGEDAAhRBvivrGEgCmOD2olBIyd wT+aCbAQ9C482Yu9am3/IIT5e6+Efp0X/U0M5FMm7Fsli3mba5nXMQFWjKhYOnFfR6IAWi0LWOf+ ixwFAHHzC1xuAtS7sVeOUuDi9s78SVEAQsgAEEKIFTR3Cw0kbq+OYE8RMXCR6K8+bwzkBRRjS74D NgOTBUNACf26pvwvuOR11xNHHlinjDLo1kG2JL67INY7kEE+dlnATlzjtdusd3MkzwWgCAQhZAAI IcTKwnVFgRuzLOBq213+4Vb8ioUBUc3mGwu2gHxkKMaQFwbsyQDbS/h3Tvj3ThBHFLqt5ANYc6fp l9lH6qxNzgew7GGmKAvYaF+1mzEy5t4VBSCEDAAhxLZ7ArFNANptK/oOl9zWuzBotgModgz5CIqx wWacLAHwyuLfa+G/VlbxbomATpkYnT525QJoxQRo81aJMMPemSgAIYQMACHElin+ewROI2UBfQ1h tWwZv2WjAFKVBTwng/9p4Q+QD0/K92VDTkr3aW1/d0X/KoPoJpYCpDYB6k5sR5jxvrRtSJcQcMWZ 57Mfu+CEqH8x+mICLB0FUKMfklQFaKwsYEMmwIr31drf9dj7FULIABBCdMsXMK18eE0ToK327m3+ lEAwWZjlH+xCVhhsEf7mHCHhn+iW7jfNjHEbD7FNYGSkcR5aOt+Ole+LagLUTQi4iTPHjeUNaLfz kpcFFELIABBCyBVY62ONLMRfcyc1ohq8C7NNNoNsAINxmO03+YmwVEK/rgr/s9NbycNz2xDckc6j lVwAa+64mSX2qesidq/d2lUB2ooCaLQr697YcQ925SaUOFAIGQBCCLGOGI5aFnBtSX/5UoB1drhI 1mcs5MNqXf9uKN+3yBbvUZh/94V/PwRX53ff5yiAKG13Wx0pCiByUykEe/OOhfS+EDIAhBAS9t03 FaKcy7JlAc/7aLV2PxsEwV/sGPKxIctPkv0dJ/YT3RMCgLniqrcSBRBxdB4lQrlLFQFS66AVdxy9 3Q6U+qt1/qmiACL2VycqAsTO21Gnvdiz+3IFhJABIITYPBNg7YoA9yT6a3Ttfp2lAMuaAKey9AMU 4xDinw0N+TBEAPhSIf6d1v3mniyNS8zgrmUCXJE069w/Rx5Yt2ICpE4IuEbbzSQEjHPcxl96+6x8 zMa3mBAwlQhvISHg1d/zzTEBpPeFkAEghJAJEDcfQOLEgevsaBG6byxkRZjpL/bCTH+Wn4T3+7lu n04L/2Sj6i6cIOkT/NF8d7RmAqx9vB3PqNb2caTIBVDHBOhDN3YhKWXX7yMhZAAIIUQjnkBa0V7z gFLlFji9rt/moXzfYC+E+BtbJfRzmu3vgfLvxgC2ibKAqU+zJwkKuyO+4p3QxpUF3Ijre86fY+cD SPGd6GAiTSGEDAAhRGcVf4f2m0j5exfK82U5FHshod9gD7KBObMEYLG+X/RY/NcY7rYy8O2igN6W BH8pD6sPM7sdun61owA6d681FE8fO+hk2fbkCgghA0AIsZkmwFp6u05bK+zonlQDS7R3/y8XSfvy EQzGJwn9bBYiAZTBvyeCIvrg/gITIEHIfZR8AKkTAtbd7RU5ENbWSmuI6WaEegRVVm27VFfW6e+6 uQCWbLc3ZQEj3Jvn/mnZL9pa7TUk2mUCCCEDQAghVhbsiU2AusfovQdf5YC3MLpmKHYJCf0GYXtX gtO6/n5of3NqQF9nUN+0CdCUEdJC5EAruQBSmwArHuQlaSR7f7u0dQCtVwVI0Y8NZtxPfp1lAggh A0AIsb1aP10Da5gKVOv6XRCLNoNs4BnsWwY7BpuH3zkflgBoINMP0d+7AWzLg+RWcgGsKdJb7YSu LMNI3G50MdyXXACR+/a4qQjhNp0R7B3PZymEDAAhhGhD8ceuCBC5Ee9CGL8tIB+ZUL5vz5APQ0K/ xTau1ICmz+K/qdn5xqMAmsjwn7osYIRz7qm23lpzIcVSANquCLB2XzVwYzdUFlAIIQNACLElJsDa FQESlxk800S1dj/fgWJsws+OIStO1vwfr+3X4Ka3wj/1+Lz+qHq9wXSXJsC71n4qgyHaEoMLt4/n mKSoCNCZm2eZ3XcsM37KNnux5EgIIQNACCETYM3mVzcVqoRW3oXyfcN9KHYt+RiKkTk2BVS6r0+K v/4tlW6cfElVgNQmQOQogCgJAVts/9xtWe/CRzUBzj2suAkBfeT+q5UQMEVZwBYTAta6ddYuC9hA QsBLTipmAr9z21rzeyiEkAEghOiHJ9Dgh+9pygMOsGGwmY8Mw70Q5p8VBluEbZTMr4fC35xz33TD CYjtJ6QzAVJ3T0tLDVrpgI6V70sRCbD05qlMgDavc4fLM3YiEkC5AISQASCEkOJvc7++DINKm0NW resf7luyIVgbDAGchH8vtX+E++zyZFzrDO4viQLokphpUnC3KYZ6p0biRQG0fm+1eH8nWwoQ6Viv PrSGklzEFu3KGSCEDAAhhDwBs6pRUDODP1Rr9suwcT6qZvv3DYM9g8nC7331g8L8e6j8r7gHmhxU rqIyExzfRo6ju1TSrJUogHhXtS9RAMluo07U8ruiqRTmTsfOW3pfCBkAQoitUvzxtrvoY4tkfnZA Fd5vKHah2DFQle1TMr8ei8FEI821ogCW/FzqXADRRCs1PItIo/lLlwNHEEXR9PWp7aMvYT61Zv9s u2vOAHelLOCyM/Z1cwEseRFiHufxbtsuC7jsr2OX8UvRnt7JQsgAEEJsrydQpwHvT35vfMjgP9gL P9kAsiKIfoX391f0rzXG7liYerrKA8kPPZ4JkPqadGmKsWPl+1IkBKxlAizbbF9yAUQQw6m+aMkn /hXiL4QMACGEWFnx13QGFsn8PGAyyAcw2LcMdk1Y119UYw4H5UyXobfa315wrzQx5o8qUs/+ofEk XT3aR8pw/RRRAA1o9t6YC+0+LGgleV/tU0/hADYY4p88H4AQQgaAEGKLPIElTADvQlk+m0M2DGH9 wz0Y7FlsdjK+8KXGGv1W/vcn92tq/Jhuhj5FrHA7Y+1WKgJ08B5tNiKh27kAUpxGsiiADt97sc3B 5GZjzLKAQggZAEKITVf8y+PmYSCYD2F4LSTzK3YNxTCYAt5X/6q3+6/9zTaeNN2boW8q30DK/Igp owDqfnzF9lO1G/16JjqO2CZAihn75qMAGni8NHTtU5cvFULIABBCdMQEuDIKwIf/9C4MAEfXw5r+ Yies8bd5MAVcqcHCNgn+lTN510wwtXZCwCWGu1EiDS45p3P/HNEEaCWzfupEYV0JnbhwiUG8soBL d+UqiTTbuo5tlgWse07LfreWzQWwbFRQyoSasdqTCSCEDAAhxHaYAIt1/diw9ruoyvYVY8h3DFlR GQMllFN1Z++FP+Fap8q4H01LRJ8Jv0DOdXXQ29I689YmttcQSFGPuW6oQkeSJLZ+G6cwAVJEAaTo xwbzICTPBSATQAgZAEKIzTUFXBn+02ZB6Be7MLxmyXcM1oKxHu/BKZnf5oh/w8rLQhqvCNBbJXTB YTSXiqAbJkMvEiJEMgFSHX5N0dZqWcDOfeFW33alsoBt3bcdOxwhhAwAIUTXdP8imZ/1FGMbQvv3 DKN9i81PSvv5asZfbILqrzS/iTTy67WYVxRA2wZDtCiAhm7LhLdgxw90BROgThRAxPNq/uvbQEWA Ontfc3ZfSwGEkAEghNhE4b9I5jeCnRuGwZ5lsGcpRgbvPa48iQgQGyb8I46cj5fbJs4HkK4sYMT9 LHE+UQbWlwzaz9196oSAEdpPZTBcaS7ASrPElxSTXKtPolcFMGB83CiAVCZAkrKAda5xnSiAZb9o y35XI/RRbBNACCEDQAjRa7V/drBmDIweMIyuWfIdyIcGmxtc6SlnGglsovBPIZbbOI3GywJuyuC4 z/kA1jQYUuUDaLUqwIY+pnwKE2AjO6qF89X9LIQMACFED3S/q7L3W7A55CPD8LphsGsq0V9tVyLh v4nYxY3QG3258QP0c/8cufNaKXXf0tKEjbp5NzkKYBO/uxHyASRfdtTBJTRCyAAQQojYot9X4f14 8oEhHxuKPcPOA4ZsYDD25M3u5uqvTRWgi5J+jQ7Qu14RYMmDb2X9axcFdOys42uK2C4mNotaFrCP j5plTYBUZQFTRAF0LClfm8eoXABCyAAQQnRZ+J9K5je6bil2LYM9w3DX4DOgrMwBp77aBuG/9oCt yc+tkHcgTfWB5tLyp56lb2WcHmGn/a5mEM8EiB4FQPyKAElvow6L8NhlAXuRfFQIIQNACNER0b/I 0A8UIxjuW4Z7MNi15EODcyGZn9dM/+ZqfnNq4Bh7ML2qwGjABEhnUoQ/NjHzlTIh4IXbQrcSAtbV 17CyUI+6Zr9OQsA6bdfJMbBCu62aAHWTfsYW7W2XBYxtAjSUYPDc5xTIqBBCBoAQojHB76oXsIF8 CMNrluE1Qz6EbGCw1uDmnvlUb+etEf8tjOWT7KtJE6CJpls+n9YmExsM7W+1/Z6V70tlArSeC6Dt +y1CLoDO9NF2rmQRQgaAEKJ7ot+X4e1rC7BDw2AXhtcNw30bEvxl4e/OQTnXa1rCP+IgveklBKs0 39WygF0UQBHPI2W4fk+1dby99KwDUpQFrHWoLeQCuLq9NW7sFGUBGzILhBAyAIQQqwr/slrTn0Ox A8WOYXDNMNq3ZMXJe9crmd+WqP4q8nKdQVfTSwESH2MrZQEjn08vJsA7FpmR9Pg7lowxRS6AXmm3 PiTQi3SPJb8mEuxCyAAQQnRR9QfRj4diFwZjw2DfMtiFYmSC2HfhR2yZ+DdRmml2/NebtQc1mu5i RYBVmoskdFuJAkhdEWDF9qO3m8q46FEUQOzvTfMVAdYoCxjhQyvnGWkwKkcIGQBCiK0T/H7xrweb G8Y3YHTNko/DrL+xYYa/1Cz/dmn+y5L7rVPbuaH1umvliep6FMAqQo7Lm4M1EwKuEmmQ2gSI0H6q ttMnBIxbEWCp71LNYzZ+yTZrfJFjP1+SlQWM1OZ95iDEW/3RQQNIZQGFkAEghFhR9DsX/rUZZBnk Y8POA4ZibMkGkOUnZf2Q8N8y5X8q1D+p8k0nyps+zrWqDyx58L0oq7dtg/GOnm9UE2CTr2mdXAAd 7odO5AKIdLslP0YhhAwAIbZK9y/W9Gche38+MgyvG0b7BluEmX4AHJQz9ddWi/8tFvOr7itd3oHN yQew9aZEKyH48TogRT6AFGUBk0UZxb6XUpQFTHFoPS0oIISQASDEdor+4wR9nmLHMBobil3D6Jqh GJvjsn6eMOOvt+p2iv6NH8ApF0B3BXekBH+tVQSIGc7c1e9E30oiJDiG1isCrN1fDS2qXzYKIHZZ QLkCQsgAEGK7VX9Vus+Fsn3jhw2DPctg1zAYG0wWTAFl7t9y3W84s2Y09Vr58/bvG6oIACuG8K66 pjZ61voLgroTZMdPmbX/wu5MXRaw7nVMaQI0ngsgUgdXTUSPAlg2F0DNdntTFjDSuv0zu6zzRauT XyB2ZUmZAELIABBCrKj3/amXngFjYbRv2bkO+Y4hGxmywuCdD2v6S/XZVmPPmfSvMwiPKd6aXgrQ ZMm0hKXruhyeu3JfpzYB6FDbdU2AFdu+0gTo0HKK1m/jBtfEpzzvpJEFEbZLng9ACCEDQIhNFv2+ EvI2B5OHjP0718Nsvx2E5H6YsO6/nOrNufVcVcqvBROgyeRa6dboRx6ndqDMX+qZtZRRBr1RpClD 8Js0upo+vy7kAui1AdFAWUAJeyFkAAghIgr/KpFfEPwhe/9w3zLcDUn9TjasMvjr3SquEv49Gff2 cuCYamq3g6ZBK/uInXV8iYZS5dprbZl9V8yFRO32pixgo33VQD6AOo8rlQUUQgaAEOIe0V+JeeM9 xa6h2DMM9yzDvUr0V9EA3qmvxPkD4Fpmgd9cQd5UxEG6XUQ0AVrMBdDE7RJh8rPxC5++GEQ8x6Qv FQH6/ByJcpVjr92XwBZCBoAQIo3gX7xgvQsif/wwDHczijEU41Cy7ziRn17GYlXB3xUToA+fW1XM JEoIGCV3WBNLAeqaAF2rOtBgQsCo29+TC+DkXtk+E2DpKIAaX6paJkCdhIBtlgWMnRDwkv6MeXzn PqfWfjgKIQNACJFa9LvwY2z4scOQyG+4b8jHhqyALA/buBJQBn9xnnA/Lf79em01OXjqTZW+LZz9 6kWIbcfWyHfm2BsI149qAtSpNLCp38cUJkCkcJikkQCxKwIIIWQACNFZ0V8GpWYLQ75jGOzC6Hoo 2WcsmKza2EE5U5+JJYR/T0dETZUFbLJ/UkcBJB+UtyW4u1YRIGUUQCtf2wgqapNzAdSpxhE7CqBt t6HBg4id/0X5AISQASBER1V/mMH3DmwBw+uGwa6h2DEMr1uyolrLX4Vge5XsE3WFf0cHZ10S8+mE eQcuQldnw1uauUuVtC+1wdCLDujCrd+FfAAdbnSlZ12KigQ9uJZCyAAQQsTV/dVsvy1gdL1K5Dc2 FPuGfGDwzocM/wrtFxfeRNUYyXCyxjGxGO9VWcCOmgBr7WdJAbf2zFcTCQHr7j7iOUTRwHUNjDWO /8olzCu2vdTS6BX6JFVZwOj6sm4UAMQVwktGAUDcyIKVvmgxDbs6uQBM830uhAwAIcT6Os3fM5Cz MLhm2LlhKHaD4M8G4W+uhHKqt5NYbvB6ZjDVyE7XMAFiisEN2FfqHaaoDBZloN4RE6AXN0xXEgiu cMypTIDY28YuC9iJeyiVCdDQKcQ0AaT3hZABIESjon8Rrm8zMAUMdk2Y7R8bsqHB5tXgo1T2flFT hK8zI9bWiGidddBtD9J7I85brLPXlAjtcz6AlGUBo5xCxzOqdSEfwLKHGdmwqH3qaz8K1gnb2tx3 kRAyAIQQ96j+MIPvSk9WBKGf78BgLwj/bGjOTNb6snoH6UUk6gj/LhyHbyEfQEP7ayrXQbquSLFg uJ3LmbLU/UaKg1Y6bM2WOlAWsDdCM9VXO3b+i7ajGqT3hZABIERy3e/CDL7JPIM9S7FrGe5CsW8Z 7JyU9PNOLyGx4ujFnBPp38cogK0SUu3vq5XL3MV8A30u89dQ+1d+rI/LEeocwrJRAHUqAmzavZbi uxo76EQVAYSQASBEfLV/MmvvfRg0DPcMw+shc3+xY8jH4c3i5irVJ9YbkC67vr9xE6CNXAANlgVc OflgnURh9KQs4BKDfkibdDDKvVs3VL/GdUxaFvCebaPOqtddq7Bi4j4iH7PxNdqE1majk5QFjHBv nvunZXMBNJaMMH5CQJkAQsgAEGJ5ze+rUnxU6/kNDHcNw2uGwRiyHUs+AGMNvvRK4ifWHlyaFbL6 9yYSoAdlAVvpny6bAF08/67lAlj98qQxAVj3GdKluogdeG6tYwJEbLP5VQUNmQCxm1BVACFkAAix kuifg/dhPX82gnwU1vIP9yz5EIw9mZV0JTDXW0Q0JPy7crx9KgvYpMZYpSxgl8XQJtZWj73jPlcc SJW1sCuXZ1mx3qdkoynyAaQQ7B3LgyC9L4QMACHuF/0l+NJjC8PwGhRjSzE2jK5Z8lEVCVCJHq3p F50Q/uuOaHo2ImoqSV8r/dNUPoCumgYtLR1opSJAR2+VqLkAetgBtUyABsPh1zr1FC5jg8I+9lIA IYQMALH1qv9kBj/LYXTDUOxZih3DcB/ykcU7j59XpfqEiDjQjLZGdZ2EgOuaFy1UBGgqH8Bal2fV KICowjliWcArOiNKLoBVdp/aBIjQfqq2r1xiUOfmrbOcaLGBifhd8kTJvRDl+9iXsoApzr/OF+2S 79JKz80UJkDitoSQASBET8T+aWxRreffNwz3Qqm+fHQqid/U68Ug4otmE08Mk66pTpsATV+z1MfZ RFnAXgx8m4gc6NLtmDKkeZXIIn/lXRPeo67mcV+RuM/YFY7XXHL+HYvaSWYC9OER16WlNH1/Fwkh A0CI5UW/d+EBn+VgcxjsGUY3Qni/zcPvjQ2RAEriJxoT/l0ZwERYRtC4CdCHAduGLB+os5/UJkMr ZQG7VNbu1Oy7uUjoL8zuxTG4U8Kdk+VuC1x5ovr9vNreBMHqSx+2NYkF9jntGwsmO7UvE5LtLjY3 tvq9PWsInGnv3t+dNiIuu4/7kg8goriOvUyoE8lHUy/7EUIGgBDdwZVhgGOMP57VHywy9+8aTH52 vOEcUKrfRIvCv+0oAOUCaL1/YibjuujgezHLvYGJDVeqCLAQr/eIWV9WIv7Mjz+emfenfzgR+770 V4taf/WvmspV6h0wv3fHlyvYhSlgTdVZVbLexe8Xz+LjJVin+/i0iZngfm0yiWma+76hJBcqCyhE dw2ARVk0ITol/Oc+L2ee4Z5lsAv52DIYhxB/m1fGwGKQpO4SKcdZhpVCWnt7Y/appOAKuQBWFuar 7qsplZngurUyS5/62FOWNLvHJFzMPvsS3KLKjCfkozkW9/6s0Hf3zFibc8T6skZkS4J/fcegimAA ylM9fbpb7MIIsObEFKhMgoVZsDASTI2IgVr3QMcy46/d1LJr9yWwhei/ATDYM+ox0Tn9kY94fufB nMGuYbALJjP40ofQ/pn6SDQv/Budib8nkVft/bdVYqmNsoAdNgFSmxv33RtNzNBH/My5v46VUDOW CXDetuZ+Qb4Q+mXpYQ5learajANXCX3cyWz/mYiiUzPYRsOyKw2MxdII5/zZh7S5J1LgHlPAmMow sPebDnXvv5jlC49321hZwDWNxAiz9is9u+pEAYCMCiED4CJ2HtCbRnRRfJl32cKE2ZES3FxPcdHc wNN0YYajzbKALeQC6M0y+xaT27XRGakPvbUog8s+c2/Ivj8VLbmY0S9DglnnwvvJl1Vz7lS+mntF pTlZ866RV6Rn9QWizy2WAlZRF8cRAcYfLxmwVcJCYw02u8dhMOeYA03do42VJaz3xUn+GFNZQCGa MwD0FhJdxINREj/R+HjSnB2sL12qq4sivqf975tc15+4f5sqC9h4eG4TJkjqsoDniX1zIvbdQsRX Yr+sSsj6uT9ek39sCNwj9M8kthPdMQY4MXKOcysu8hEsIgeyECVwbA7ck2PgviUEbVcEWNvAayAf QMQqpjIBhIhlAOgLJDr7CheiBeGvQcbJILqNsoAN9XlTUQBrn84qceyRxXYvogDq3Nfm5P52LswW u7Jajz+Hcl6F889Dwr1L1+ErZL+XIwtzzlj4JHLDh1zC1VICaw1kJ0sLjpcYRM4r0O2H3jlNNJg4 UJ6AELENACGE2Mpx4CIed/kpmTajANrIBdCrpQArfLCpbN7pdtFc1rAombbrehYxjAxTLfeuyuG5 ObhZJfrn/sy/fn6/sNdM/vaaBBCMoHnpYXa/ARDKG4acAsfPEb/+V7b2c2ntsoD1ogBWMgHqvMBi mgDKBSBkAAghhDgR/quNNnpRfi3yAWtmJVKnJOzIJtbSpy63tXZUBvcsI/FB7JdzX/1bld4rfZWY 72ziPZPpthb331dn0gGU4Kp7K5gB/jipYDAFTLyIkBR5A7r0vFm3reYKogghA0AIIXo7ljNmtcUl 6+YD6HB5p06q/6bX9DcZBRDdODj5Yyulutpa23/KxDsuCetD9n039ZQzKKf+OOP+IgP/6fXcVoJf rGoILO69e4wkKkPAVpEBp3MIUBkHSXIBXPGhpLkAIhgVySO/5AoIGQBCCLFtAzbTflaJPg9AGhbW rZQF7Po1XdIE2Njb+FRIvnfVTGz1b1kJfjf1uNPZ+k8dszGABL9IZQgsODaiKlPOnqoycFyKsEbe gMbKAnbswdBWKVshZAAIIcQGDM4W8ZhXpQKvOVxofIDRdi6CnngOvdhhU0sBunrNa8zaLUS/m0M5 JQj9mT8O63fze4SYuUCYCdHUvX2KYFaFe5XTkQFLmAHNf33XyAWQYu9rzu6nXrIkhAwAIYTokuhf afTfQCr0tssCtpFheZ19NlQW8Dg6d9XwfJb7XLqygBH3s8T5JEsIeDphH2H9/mzqKadV4r5K9Ht/ TzZ2IfpgCvhgXnlO7l1rq9KD2flG9XE01JLPmKVfYxe22VBCQB/52aKlAELIABBCbOk4y5pGBXyb Y4k2Zsh7VRawowO9dCZAg1N1sfrCnBzbYh3/bOqZT6pw/vKkRJ+BEEKdaWZf9NsMWNy/rgxLWCjB VrkDFlUFTn9vO/H1bTDEXxpdCBkAQgix3KAqSurlHtSEa9l16E1ZwA53bS8GuCkqAphTYc9uUYov zIrOjsK/zi1qsZ+YBErWJzbytXU6MmCRpHJ+KolgdmKSGWpEQ6UoC8g67bX3wJSZIGQACCHEJg6e 6gj/TYkCWGdmSCOiDe6fCyoCNHVeF4T1H6/jL8M6fjcPYf2zo/DvvU2YM2U6hdiS587CD3BQOo+Z nUQELMyANpIH9uZZq1wAQgaAEEJs9mhpqdx+Kw066i+C3raygI1HATSUC+D4I4lzAZw5tKbKAia4 XpedsrFhA+9gfgTlxDM/ztZfbWSJVzNdiA3DA34ecgac5Ao4Vc7Wr/79XSkK4Ir2WOWZFlu0ywQQ MgCEEGLDZH+lFjohGvpuAvRqhzSfC6DJ1SBNmQCpzul0zk0Lfg7Tu55ycipr/6z63lZCRgix/HfL u7BMwMzBWI89nTiwyUdqg8n2kj+CZQIIGQBCCNHxcVBmjsPe9Q6n9VwCTVcFWHlmvumu2bSkBRfN qJ0O03dQltUsfzXb71yV4MwH0W81MhFibSMAwveqdGDmHixkWVU+44IlOEtXBfCRHzANJg5c6pkl vS9kAAghRE/GPWZRGyzii70rI4GIIn4b8gE0XopwQ8R8tCiA0+v552F2v5zAfOKZH3l8ebJGWSX6 hEj4rKBaFlXCvDyVONCG793SuQJWeTC1WRFASwGEkAEghNjcAY45E1fcUbmZIKlgr67RBpcFTBee H/nyN1AW8DgBmavE/iQI/9lhEP3Y6qtqTv4VQjSHd1CWHmMNJg8mgLXL5U5Z6VmnWXYhZAAIIURj wj9mFAAskRBweROgZh646D5FG7kAWikLuGFLAdYyG5Y0AWrPfJmTXBvzqWd+UM32T0Pm/sUMv9bz C9Gd96f3HjetxP9i6Y01ocTgys+SBsoCXvLyjB0FINdCyAAQQoiujF1sw+X8urmz5g8xwjKElU2A HlyRrRkbLgS/D7OGbhbK9M0Pqsz98zDLaLSeX4huf5XNSdLA8J312Hzd9+saJkDHHszS+0IGgBBC dEJ4mJU+F+UtniCMv5WcBFUbvcoF0PR+N7UiwJIHf26OsFPl+soZzI88s7thlt/78PvFdlrTL0SP 3qtU3+ESnPOhlKA1x9/5td5ZdT7U5tKCuhEIQsgAEEKI1MK/L3qygXwAfZ6WaCEKYBMT+6VbcnD/ aN9mleifQDn1zA5hfgiuPCm1YZDoF2Ij8OBKoPSYzGCz+3MExDYBGilBuoWvWyFkAAghJPw7+mJv 8zhUEaDnO0y0L1MJ/3IO01swmzjmBzCfVmI/k+AXYuO9gNJTluArIwC77POm3eQrySsCCCEDQAgh 4osPTOS3bqNlAesfeONLAdosC7hqFMA6aznNclmu193ncX6qVSsCQNJKAhd+5nRWfm+YHbkw038U svn7slrTr0R+Qmwd5dyfyuthzj5CLnxu1SsLGDsKQCaAEDIAhBB9Ef8pZxU7nAuglTb6uBShB2UB m+qftQfMpyJsvAuz/bMjz+yuYz4N64Hx1Zp+jRaE2N73cmWg+jl4Vy0NsNXv6z4EG8zMnzwfgBAy AIQQYj01c264f5NJ1XrQ6kZd7z6VBezMGv0I+1mU5TMhmV9ZJfObHoZZPu9OthFCiNPPjmAEeBwh GsBm1XMV4s/a67UshAwAIcTmDSYg7Tr/ZQcAbWbjb3Vssk5FgJ7eclubD2CR0K+E+aFnPoHpXcf8 8NT3UMJfCLEkbu7xzoScINlFJsAaSwEiPPtiLgWQfyBkAAghxJpiZWnhH2l2Ifpb/Mp2ljjwbS4L 2EIUQNPaf+XbNmYUQCXqXQmTm57pgWd24HFzlewTQqyHd1V+gBJszjLrApZ/pkUoC5jquS6EDAAh hFj25Xl63fFGnBDtRwJEHPhshQmwYbkAzhswm1NJNOeTIPhnB6GMn1sk9NMIQAgRywgooXRgMo/N lpDJsXMBXLKtcgEIIQNACNH0wKD6164709hkUrWetLwRA5WGj32tXAAd7hcDkAGuCvOfwPS2O17b HxbtSvgLIdI9r3wJrkoUeBJdtGZlnNjPawl7IQNACCHSDgoMDa/zX2MA0Nq4oO18AG2WBeyT59DF KIBqbT8epkcwP3RM78L86GSHxlTmgBBCpHywcpIo0NiQJBDL+a5rg++N2GUBhZABIIQQ5700zeXr 5fRe7Yqq3UJB3qCYX2k965L7MtWM/+SOZ34Ik1uOchZ+b7RYVQjRIt55Sg82C4kCz32WSYgLIQNA CLEBOtRyVvkvnwOv2UFAzIoAsERCQF/reNpYj99aFMC2lAWMYAIs1vd7B0c3PbM7VQm/Mgh/hfgL IbrjAoRqAcYRlgWY5V+6K7+HuLi9M3+S+SBkAAghxJp62tBMitwumgCNH3hH+7aPJkAPuvbYVHNV Nv/bjultKGce55TUTwjRcR+gDBEBNq9XeSRpLgCZAEIGgBBCrP7+xK7+4mz9vdpYWcD6bbTSN+uU Bezj/WvCmtWuHpvJgugvDz3TOzC94yhLjrP9W63tF0L0YqBAKD+aVUmBLUlzo0iwCyEDQAiR4AVr Tr3YG31X9zaxfv2lAFs18GmjLGCD/bz0sgMTZvT9DCa3PdO7nslNjwesaTDaRgghIrMoGWizU9EA lzwXOxMFIIQMACHE1ur+VcRH11/ajUYB1DMBWsnKfyoKABo2Z9YxAZq+/rE/V83ouzkcvOCYHcDs bijjZ3NpfiHEprgAp6IBlohiWskEuOAF1krSWSFkAAgh+qn84834d9IE6PD7vnfjjp5FMbSaC8Cc ZOx3JRze9Exue+aHHu+rWTK9rYUQm+gDLKIBFrkBXHvP4VqmghAyAIQQG6/9Y4QcKxdAs81GFOGt RCE03Pcr5wJYIwrA2pDNv5zC9I5nctvhZuF3xqqUnxBiC3DgZqdMgIaS8mlCX8gAEEKIVMK/TyZA Y8fUQC6Ano9wWgnTbGgpQJYHs2F+GDL6T26GbP6L75xRYj8hxNYMNCof4HSCwGUes7Hfb3IEhAwA IcTWv5DNlp53jLKAsXIB9FaF93NAlfpwbVXOb3rHM70bxH85pXZpLCGE2ER8Cc5fnBcgdjRaclNB CBkAQojOCyBzSvy3VJ5nJbENyRMCtmICbHNZwCoZ4EqXtktLAU5l7Z8deI5e9hzd9fhZWNtv9SYW Qoj7TACTnb8MSiaAEDIAhBCx9FaTM5DKB7ByG62UTFzHBGgjJL8DN9FC9HsPs0PP0c1Qzs/NwnfN FnrmCCHEec9u7zhJgmojPecl7IWQASCEOCtUOieg2hC6vXYbNnTgs05ZwKbL+3Gyht/NYX7oObrl md7x+DK0qxl/IYRY4hlMqIxiud8EWKks4La8M4WQASCEuFRYKct4rQFAa9nwu7AUoO0+6Po5Emb1 3Rymt8KM/+wglPJTYj8hhFgNVwYT2MZ4hsZa4ieEDAAhRK90bZ0Efy3mAuhMm43son5VgK0qC9jC 6KxOLoBFyb7pHc/hS57p7fDBi9awCiGEWB7vwHHWBIgdBaBcAEIGgBBiM4U/dCu7fw/LAvZFwKY+ jqZPqXNlAasIGg/MDzyHN0Oov5tXg1QJfyGEiGcClOF5e2E01bLP+joJAYWQASCE6CuLurqNC6i+ i+1GwwVVFvCqzzadC8AA/t7Pmmo9qquy+t/0zO4G4a81/kIIke7941y1HCBv6K0pR0DIABBC9O1l CWBNx99lPa0I0GY2/rWabFPE93BAdfpwbRYMgfldOHzZheR+rjIFtMZfCCGS4z2UM8jWqaSisoBC BoAQYuOwkSOQU78AY5sAm1wRYJsHI21UBKBa42+rrP43YXLTUZZLlKgSQgiRwAUIJoDNT5ZiSawL IQNAiO3UR0sk+GtlLXUz0jjd8caMAuCqD9UzAZZqMnbfVJ9fad99MgFMWD5TzuDuc57JLUc5AZNH ykgthBBi5We5m0O2qglwyQtMUQBCBoAQYiOE/yaYAK0eb6PnvuH5ACIYECubAMs0X83quzncfcFz dNszP/IYQqk/IYQQHXgHAeVckQBCyAAQYtvegZsSgqwX9lr91WaERCu5CBJ9l4wNdacntzwHLznK o3CcmvEXQohu4so1qq80muxXCBkAQog1VZfZtDdUioSAifuo15egzwe/6rGf9zlTJfgrYXLbc/hS KOm3MAWEEEJ0GA//f/buPF7Wq67z/Wc9T9Xe+ww5GYAWxOlqK9rq9dJqi6J9b6vQYquN3BYVcLwO 7YjIJHMYgkgIEOapZZJBVEhAmQVCS5gMcxgCgSRnzDk5w67aNdez1v1jPSecIEnOHmv6vF+v/SLs s3ft2r+qc6p+32et30rjvELr5pNbtvr1zURABgCSJtb3fO1y/80ccTaNL4LTfCrAFM8C2HBttmgp /yRmEWzFc7goIUXor+Yj/YZrieQVf0matQyAWG8H2NA8AFcByABA0vR1/nWTFbauE3IWwARDgHkp 9ISPBdzIt58O0VKCfivRPxUZdvMKACf7S9KMhgApbwfYymNZDQFkACBpMo1/OLuvm5tXqWleBbCV d2ArbmcrVgHM6jukdf7c0439zUv9T+Wp/rHKf8cKXxUlabZDgFj/e7/eEOA2Xk8MAWQAIGlH+5sN DbXZid5t1rYC7MAr+MyuApjxWQC3dyJAKPKbwWoIw7VE70RkPODmfaIu95ekOQ0B7N4lAwBpZpqa LZxmO7MhwJQ/Rju3CmB9acgkVwFM1aDGAGUJ1aje438yL/UPoV4NEPynRpLmMgSoV3axni1dhgUy AJC04z1U2IKmZKdDgFnqwTc0qW59d2D7GuBtDgG2cDvCJIYR3mIVQICiPs6vczwP9xt1EwGv9kvS oohVfmkJxTpeXxwIKAMASTvWzDp4zFfcLa7XJLdJTCQEqAOeVEGvFemdgnH3jKn+XvGXpIV6PUzx jBVfWxACSAYAkjb/GrUVV/0XuEmfxoxgpnOLGbzzp4c9xQH0WolBOw/3O/3GL/iuTZIWMwSg3g7g PADJAECahhembWtM5mkWwLS/YG/VcsF5eWNyxu+x3asAQpE/qiEMWoneyUQ1SFDUyz5d7i9JSmeE AJIBgKRJ9EcUO/SDFiQEmMZZANsTApzFHd+KgYCbfSy3+/vryf3VEPqrkX4Lxr2UA4EGN0/3lyTp 5hAg1Rdezub1ydUCMgCQtCV94qwv959o8bY4BJjR33MjtzHJ2mzlzz490TmO6uF+rci4XwcCja/5 oZIknfm6EPNrCIYAMgCQtGPN/4x0XwtzLOCWdqfs4OTgGSj0Vg4ULPNtxREM2oneqUg1zFdzCl/J JElnKUW3AsgAQNI8Nv6TDAHmpJ+f6B2YhlUAU3AsYAj1Hv/BLRv/03+vPDlDkrRukbNfKeYqABkA SJqZxn8eu/DtuO2ZfXE/izs+6b38m/i7ExpQ9evhfqci40G+amPTL0najFTPiXG3mAwAJNn4z0Hf O5Ghd9tx89twnzY0+3CL7sdZ/ewzh/sdTwxaiXE/D/crfcWSJG1xCLB9L56SAYBk4z/FTfOW936L vGTOWQDrvounr+rHMXRPRAarMB4k9/hLkrbtpckTY2QAIGk+m/95bMqn/USAKZ4FMJHbOOP7z7yp 08P9qhEM24n+aqQa5M+F0vdlkiRJBgCSzf9s9LLb3YVvdQiwA6nBxFYBTFn4E4p6uN8wD/frn0pU gwT15+38JUk79iYHXN4vAwBJ63jRWIBu3mMBt+62tieYWN+tTuRhqX9o0ciNf7eVGKwmxoNEUXgs kyRpAtbzYmg4LQMAycZ/Zu//vIQA0z4QcEe3AqyvGDu5QuLm4/xG0DmWGLQioz43D/2TJEmSAYBk 4z9lIYC/6rSHAOu7je0OAW4e7jeCfjvRb+U9/inWw/28miJJmhZuA5ABgKS5a/zNDabiF92+m5+O QQahzFf9qwEM1hK9U5FqWP9ZgOCrjyTJNzmSAYAkX1QX5QV7Ynd7s6sAbuumQ27+bx7utxoZ96Eo 8ockSdPM/l8GANKiNqs25VvfuDoLYPM/YhsGAm7J71Pv5a+G0D8RGbRg3E+Ewj3+kqQZemsUIJkC yABAkmbhVXsbQoAZ/D03chsbDUhOH4EZx9A5GRm2YDRIedp/06ekJGlGX2YNAWQAIGkRm+Yt70E9 FnCHSrK9hQ5Fbv7jOO/x75/KS/1JXvGXJM3BeyNwP4AMACQZAkx9Lz/tqwB2dCvA+m7jbG4yFHmP fxxBfy3RP5kY94AQ8moA9/lLkuaC3b8MACRpR5r0qfvxM7t34GzG9Z/971Y08hX/fivRX02MOnUg 0PB9kiRpzt6qFIFU+eImAwBJNuVb0xvP2qkAO7AVYHtuZ30hwL9Z9Rhyk58q6J9I9NuJUTf/Udn4 mtuQJGmu3hsFksMAZAAgyRDA+sx7+UPIdyhFGKzmK/5VD2Ks9/jb8EuS5v1lv8ivg743kgGAJE17 bjCjswAmXfwQ6j3+Yxj28pF+o17+GSHkbQCSJC3MexxXAcgAQJJmJDmYwWMBJ3YiQMhX9lOEYRt6 rcSwk4/zCw72kyQt8lsVV0jKAECSTfkWNa6zFgJM47GAZ3Vc0a3f6ukGf9DOy/2HnURMLvWXJCnP wnEgoAwAJBkCzE4IMCX12dYQYL0/LNT7/BOMutA7mRj2EmmctwAUXvWXJCm/ZAZXAcgAQJIhwNz8 Lgs1DyDk5j5GGPehv5oYrOXGn8I9/pIk3WoIAI4ElAGANAWOW4I5yA0m3IVPdCvADilKSARGvcig BYN2ytONHe4nSdLtvIgGUkz/ru6fRhZEBgDSZDSB+1iG6ermXSW3NbXeUB2/3u2EvM9/1E8MVnPj H6scCDjgT5Kks3h5zcNyD5GIVkMGANJk/CTwFOBHLcX8NsFTfdtnNXxvgnc7QBFgPIT+amSwloiD fLW/KH26SZJ0lo4DT4bwegIDyyEDAGln3Ql4GvDLwB7LMcNN+ZT9LvMyCyCUkBLEIfTakcEaVMOU r14s+ZSWJOksDYHnAs8jcZ3lkAGAtLMK4AHAY4DvthxzmhvM2iyAKbpPocxfW42hfyoxbEWqcf2X xyv+kiStx9uApwL/YilkACDtvB8AHkW+6q8Z6YqnMgSY9hUNGzkWsMiT/atRYtjOk/3Hw0QR3OMv SdI6fQJ4DvBySyEDAGky7dAj64/zLIchwE78Lhs6EYAtvL/rCAGKEmIF3ZORQTsx7uWmv7DxlyRp PY4CzwReBKxaDhkASDvv54FHA/ewFNppU71QINTnEScYrCb6rciomz9fNn3sJElahwS8JCWeCVxj OWQAIO28u5D3+f8OsGw5Zr8rntV5ABO9v7dxnF+sYNBJDFcTo36CWO/xDz5FJUlah/cDFwLvtRQy AJAm4+eBZwPfbikWoMmd8t9jmn7VogGpglEn0TuVGPVSvnMhD/+TJEln7TN8dZ//2HLIAEDaef+B fNX/AZZC0xQCTPo2Q5FvcthJDFqJwVpu/EOBV/wlSVqfNvlC08X1f0sGANIEPAR4BHBnS2GvvSNN +jpuf2KrAOrl/lUf+q1Iv51IVV4JIEmS1u2VwHNJXGUpZAAgTcaPAX8J/GdLsRjdvLMAzqLpr6/q VwPorUZGnUQ1zp+3+Zckad2uAJ6I+/wlAwBNzAXAnwAPBc6xHIYA0/677MR9DvWxfdUoMWzDoBWp RvmHF+7xlyRpvfYDFwGvAAaWQzIA0GT8NPB04O6WQlOVHGx1CHCW3xCKeqn/CIatSG81Eesr/g73 kyRp3drk4X4XAUcth2QAoMm4M/A44A8thU35rG4F2OoQIJQQxzBaTQza+Ui/UHjFX5KkDfob4IUp caWlkAwANDn3B54CfKelMASYkl5+cvWp9/mnRJ7qvxoZD/LX2PhLkrQhHwGeBPyTpZAMADQ53wJc AtzX55pmslnf4tsOBVDBsJvor0bGvfzzXOovSdKGHCFvLf1rYNVySAYAmowCeFD9D/I3WA7NTJN+ Fre/kR8fGpAqGHXzgL9hN5JiHQgEH1JJktapDfwDiccAhyyHZACgybk78FjgfpbCpnzbevkZ2T9w esDfqJPotxLDTspX/IuvTv2XJEnr8o/AxcD7LYVkAKDJeijwGOB8S2EIMNMhwGZXAdTL/asB9FuR 0VqiGtd7/L3iL0nSRlwNPB54o6WQDAA0WT9AXu5/b0uhubGBEOD0Vf1qBMN2ZNhOVKM89K90n78k SRtxE/CMBK8AbrQckgGAJucc4MHAI4G9lkOLeizg6cY/VTDs5AF/cZQ/V/ivrCRJG9EHXgVcQuIa yyEZAGiyfoR81f8/WwrNbQhwFrddNCCOc+M/bCXGg/TVif+SJGkjrgD+CnibpZAMADT558yfA08F XNSsnW/Kp+VXLIEIw1Zi0E6MevkXtvGXJGnDPgW8GHiBpZAMADR5PwFcAvywpdDC+JowI4T8uXE3 0W/nyf4pOuBPkqRNWAOeSuJlwDHLIRkAaLL2ABcBv03e9y/tRK+9A9+4jh9xesDfEHqtyKiTiBUU BQT/JZUkaSNGwOXAo4EvWg7JAECT95PA0/Cqv3aoKZ+23QOhyHcqDmHQTvTbkVjllQCFm2AkSdqo D9XvMS+3FJIBgCbvXOAJwEMshWbCNiQHRQPiKDf+g3akGuZAoHCfvyRJG3UN8HzgOZZCMgDQdLgP 8GTgBy2FJtGUT3orwOkBf/3VxLCdGPcSFB7pJ0nSJkTgUhLPTHDAckgGAJq888h7sP4UWLYcWqgQ IORl/SnBaC0xWEuMuomUbPwlSdqky4AnAp+wFJIBgKbDvcjnrd7dUmhaQoAdu3tlvn/jPgzaMTf+ MQcCHusnSdKGfRZ4JPAO8sA/SQYAmrBdwIOBp+IhZlqw3CAUuckfD3LjP1yz8ZckaQscAJ4HPAsY Wg7JAEDT4Z7kvf7/xVJo0ZKDUEAcw3CtHvA3ro/0K5nq1QqSJE2xCLwAeC552J8kAwBNyeP+aODh wF7LoWlpyrfw277+N56xz7/fSgzbkfHw6xzp51oYSZLW603AM4ArDdIlAwBNjx8iH73ynyyFZiUE 2IqfGwKkCMMeDFuR8QBSDLds/CVJ0np9Bng6pNfjPn/JAEBTYwl4CPB4YLfl0ELkBqf38sd6n/9q PtIvpXqfv82/JEkbdQh4ZcrbSXuWQzIA0PT4P4GLgJ+zFJrVbn7d31bkPf3VAAbtxLB9RuPvEn9J kjYqAa8FngBcazkkAwBNlz8kJ7MXWAotSggQCogV9FZz4x9H+Wq/jb8kSZvyTvKx0e9xn79kAKDp 8m3AJcD9LIUWwpn7/Ndg0IpUg/rzLvWXJGkz9gOPA/4W6FsOyQBA0+XXgL8E7mopNM0N+1ZdPQhF vq1Rv97n30+QbPwlSdqk48CLgOcARy2HZACg6XIX4EnA71gKLUJuEIr8iXE/MVyDUSeRqJf6F9ZK kqRNeBPwaBKftxSSAYCmz72AS4HvsRRahBAglBBH0G8nhmuJGPPQP7f5S5K0KR8Eng28wVJIBgCa PucAjwIeAbjgWbPXya9zG0AIkBL0V3PjPx7kMKDwir8kSZtxEHgi8HqgbTkkAwBNnx8FXgj8gKXQ XIcAp4/uSzDq5QF/o0H+1tJ/xSRJ2owB8OwEzwMOWA7JAEDTpwT+CLgYWLIcmucQINRX9scDGLYT o34i1cv9Xe8vSdKGJeDtwFNIXGk5JAMATafvAi4C/oel0LyHAkUB4xEM1/Jy/xRzIBBc7i9J0mZ8 mLzP//WWQjIA0PR6IPBXeLyf5rThP70KIBRf3ec/6CTi0MZfkqQtcBx4OvlYv77lkAwANJ32Ac8A ftdSaK4zgLrxH3YSw04+3g/ykD9JkrQpzwOeC1xjKSQDAE2v/0JOab/PUmieG3+Aagj9VmLUS5Dq z7vPX5KkjUrAu4HHkviI5ZBkADC9SuAhwIXAHsuhuWz8A1CQ4jjv8x+spZCq3PS73F+SpE35HHlg 9MsthSQDgOn2HcCzgJ+3FJpXRQExwrCd0rCdQjUkhDJ/PlkeSZI2ahW4FHhm/d+SZAAwxX4NeArw LZZCcylACMRhL8VBKzWqPgUBivIWXyJJktbvBcBLEnzSUkgyAJhuu4GnAX9iKTSXfX8AAjGOGPfX UnPUTUWq6gF/dvySJG3GFcCFJN5nKSQZAEy/HyIntj9sKTSPjX8IVLFiPOykMFxLjVgRQshL/iVJ 0oZdR97n/zJgaDkkGQBMv98mT/l30J/mTr2ffzDsEobtyHjIUnDAnyRJm3UKeCXwZOC45ZBkADD9 7gxcAjzAUmhOm/9qPGA0WEtp1Eu7bj7WT5IkbcargecCH7UUkgwAZsO9gOcD32kpNDfCzcv9iSP6 vVaKw25aTmPKUAI2/5IkbcZVJB4LvN1SSDIAmA1N4OHAY4FdlkPzomhAqoijThpXFb1xP+2JY8qU CMF/ZSRJ2ozrycdDvwKP9ZNkADAzvhl4NnA/S6F5EQooGoFRL47XDqdB51gsQ6DR3BuGS3vDStkg pAgpWStJktZpjTzc7xnAQcshyQBgdtybPOX/OyyF5kXRhFRRrR2pRu1DMYy6rJRLlCQYrqZR7Keq uTcMmrvDrhAgRWsmSdJZejPwzJSP95MkA4AZ8jjgQtwBrTlxeop//2Tqrd0YU/9ELCnCcrkMJPIs gJLmeAjjE6ka9RguncO4sRx2GwJIknSbPgxcSuJ1lkKSAcBs+Vbykv/7WgrNReNfQChI4x5V+1Ds 907EZjWmWTZCQaib/6/5ehIr426K1YDU3JP6y+cUzVDmVQJuC5Ak6WbHgSeRJ/yftBySDABmy8/U zf/dLIVmv/Ovh/yNqTo3pnHrcDWuBuwKUJbN2//eUFKkyPJwjVj1Y3dpb1hp7A6EkkaqLK8kaaF1 gcuAR5OH/UmSAcCMeSzwZMugeVA0gBBS/0QcrB2Jqb+adoWC5aJcZ4aQN8AUccze3sk0bnQZLO2D xkoogMKtAZKkBfQu8oC/d1oKSQYAs+euwIuB/2YpNPMClE0YddOgfSiOuzfFIlXsKpqbv90QaIz7 qVENGTX30GvuDY1ymeVUcfMMAUmS5tinSTwDeJWlkGQAMJt+GngRTvnXHDT+RQFVRWwfTsO1w1U5 7KTlcik0Nt38n/ljSiDRHLZTMe6nUXNPWFvay17KkEMA5wNIkuZPG7gEeNFd3/vZGy2HJAOA2VMA DyVP+d9tOTTTT+YGpEjsr6ZR+1AcD9tpOSUajeVtuiSf5wOUcUw5WE3jUZfB8r4Qm7tZDgVFMgiQ JM2HPvDmlLeJftFySDIAmE3nAZcCv24pNMtCAUUzMOrGYedwGnSOxUaM7A4FoQg78/OBRhxT9k7E 8agXRsvnhLKxTIMAzgeQJM2wq8gD/tznL8kAYIbdHXgBcA9LoVlWNIEIa4erfvtwjOMee4oGxXqH /G1JEBAIQHPcTYx7abC8N6Slc0IqlllKY1wNIEmaJdeSB/y9yFJIMgCYbQ8Engucbyk0u50/FCX0 T6Xe2pHY6J+IBUVYKabgX4RQAInlQSuNR72UlvaF4dKe0KiPE5QkaZoNgWcCLyJ5rJ8kA4BZFoCL yXv+pdl8Ehf5oxpSrR6Io7WjMcQhZdEMRQjT9bctlDTiCPonUjXqpvHy3kBzd2gSCM4HkCRNodfV 7xU/bikkGQDMtm8CXgb8V0uhWVU0IVWMuzcl2oeq/rjHbqAol6b3PtenBZRVn6I7SKNmN/WWzy2W iiWKEFwRIEmaCh8FngZcBvjKJMkAYMb9FPA84LsthWZRKPKE/2E7jdqH06B3Iq4k2FsU5HUtU/8L 1PMBEkujLkvjfuwtnRPK5b0hFE2aMeJqAEnSJHwZeDnwFEshyQBgPvwxeSnXiqXQLCoaECuq1oHU XztcNcYD9pZLs9H330oQALBrcCox6qbe8t4Qm+eE5VBCqm75tZIkbZMR8GISFwM3WA5JBgDzUZdL gT+0FJrJXrm+ut87mfprh2PZX03NULJULjMXV8tDCXHErt6JNBr16S/vIzR2heUELr6UJG2nN5Ov +H/UUkgyAJgP/x54DnAfS6FZbPxDQRoPSGsHq2HnphRSRbNs5EBgnpbK16cFNMfdVIwHsLSHwfK+ 0CiblADOB5AkbaEvAI9PcDkwsBySDADmw08BzwfuZik0a8omVBWxeywO24diNe6zOwRC0ZzjXzqf FlCmBMN2KkbdNFrZF6qlvaEsGpTOB5AkbdIB4MXklaFtyyHJAGB+/AHwbGDJUmimeuAiL4kftFKv dSjSP5maoWSlKBeoBgEIBCJL3RNpPOykuHJuGDf2hGZRUMTK54kkad1eDTwOuN5SSDIAmC+XAn9q GTRrihJixbh9OMb24UgasVw0KRa2IAGKkkY1hM6xNGh2icv7wqixwnJKuBpAknQ23gVcArzD1w1J BgDz5ZuAlwI/41NBM9XnlkAi9VdTbB2Ig+FaWiGwNNfL/ddTnzwfYHm4ltK4l9LSHgbL5xaNYomS CMk3dJKkf+ta4FHAPwI9yyHJAGC+/CfglcB3+zTQLDW2oYBxP1XtQ6nXOxF3xTG7i5Lg0XdfWywo SkKKNAdt4rgf+0v7QrO5JxRFgzI5H0CSlJ0Cngs8CzhpOSQZAMyf+5OH/d3Rp4BmRdGElIjdm+Kg fTAWoy67Q4OicCPPbecAeUNEUY3Z3T+e4qjDcHkfRXNvAAjJ+QCStMj+FrgYuMpSSDIAmE9/St7z L82MsgnDtTRoHY5V76ZUhIJll/uvMwjIgwKLcS+tjPvEpR6j5X2hLFdopAR4bKAkLZJ/rt8PvsXV YJIMAOb3d30B8Ls+7JqNjhWKkPvS1sHYWTscw3jAcrlEaXE2UdZcvWKwmhrjbmLpnNBb2sdK2QjB QYGSNPcOAk9L+Wi/keWQZAAwn+5K3u//Uz7kmpUmNQTSoEW/faiifzItE2iUHlK5ZYoGZaygfzIt jTrElfPCuLk3LIWCQHJQoCTNmTXghZCeDRyyHJIMAObXDwF/DXy/D7dmQdmE8YBR91ikfSSSxqyE BiE45G/L1acFlNUIOjdFmmsMl88riuau0CwKiM4HkKRZF4G3kqf7f8ZySDIAmG/3Bl4OfKMPtaa+ GS2hKELqnYyj1f1xNOqkXUVJM7jgf5sLX88HgHLUoxz347C5N1Qr5xZVYxdLscL5AJI0mz4CPAP4 O0shSfMfAPxP4HngfmlNv6IB1ZBR60g1WDsSl1LFHof8TSALyCcGLA1WUxx3Y1o+j9HyviIUDRqu BpCkmXEcuAh4MYmu5ZCk+Q8AngI8xodXM9Jwpu5NcdQ+nKrhWlwpytAolnAY3QQVDYo4Tsu9m6iG nVgt7wvDpb2hGQIOCpSk6ZWAZwIvAa6xHJI0/wHAMvBC4Ld8aDXtjX8oYdyjah2qer3jaSlVrJTN ejG6DebkH6OSPB+gl8ruII1HHbor55UrjRWgoEyuCJCkafJ24AnkZf+SpAUIAM4DXgX8vA+rplnR gASxeywN24cio27aFUrKomFtpi8FuDkIaIw6lONeNVjeF1g+twjFEkWKOB9AkibrauDZwMsshSQt TgDwvcD/An7Eh1TTrGzCqJuGrYMxdI+lFEp22fjPSBAQCMBK70Ri2KnGK+cWo6V9YbloeFqAJE3A UfKqz0tItC2HJC1OAHBP4O+BO/twamr7xyI3kWtHYrd1KDLusbts0sSj/WZO0YA4otE9GtNoLQyX zwvV0t6wCyC5GkCSdsLz6ub/s+6Yk6TFCgB+BXgxsM+HUtPa+IcSxl0GrYNV6t6UloBGuWRtZv1x JdAc9lI1GqRiqRMGu84rGuVyPnXEIECStsW/AI8D3mcpJGnxAoAHkvf8Fz6MmkZFE1JF7ByNVftg HFUD9oSCEHzGzkkKAEVJmRIM26kcd6vR0r5QrZxblOVSHhKYvDQlSVvh8+R9/q8ABpZDkhYvAHgU 8CSbf01lXxhy8z/qpMHqgTTqn4i7CewNpbWZ18ebQEiRpd6JVI3WYrVyfqiW94WyKCnj2BpJ0ga1 gecAFwOrlkOSFjMAuJB8zIs0fc1gCSEQ126Mo9b+mMZ9dpVNCvf6L8KDn1cEVKNUdo6k4agT0sr5 YdjcHZZixKMdJWl9XgM8l8SHLYUkLWYAsEQe+vK7Pmyaut4v5H3ho16K7YOx0z2RVkg0y2Ubv4V7 LhRAwdKgnRh102jpnDBYOb8oy2UaRLcFSNLteB/wNOAdlkKSFjcAKICXAr/uQ6ape3I2IEWqzrHU bx+qlkY9dhclZX1+vBb7edEcrKY46laDlfNCtbyvaIQGpUGAJP0bh8jbO/8G6FgOSVrcAOBOwCXA r/lwaZrcvNe/m8atA3HUO55KoFk2rY3q50ieUlLEil3dmxLDduwsnx+Wl/aGUJSUsbJGkhZeC3gd eYvnEcshSYsdAHwT8I/AD/hQadoau6KAzrHUae2vynGPXYWNv27t+ZIHBTIepD3jI6ka7g39XeeF YmlP2JUiRI8NlLSY/o485O9fLIUkGQB8G/BPwH/wYdI0KRpQDYinDlbDzrFUAis2/zqrICCvCCiH rbSr6qbh8rlFe+W8sLtconRQoKQFchV5uf+b3Q4lSQYAAN8KvNHmX1PVvJUQIPVOxMHq/hhHXZaL kjJ4GKXWqWhQxMhK93gsh2vElfOLwfK+sCsUBJLzASTNraPA04GXAycshyQZAAB8V/3CcHcfHk1N w9aEasho7Ugcrx2JZYosl00P99PGhQJCQbMaQedoDMM2g5ULinJpT2gUBcH5AJLmSBu4HHg0sN9y SJIBwGn3IF/5v4sPjaalSSsa0D+ZqlM3VINRhz1FSQiltdHWPceAxqhPY3Qw9pfPCaxcEFJzd1hK FSTnA0iabe8Bngi831JIkgHAmX4EeAtwRx8WTYOiAali1DqQqvaBqhEr9rrXX9sWBORBgSv91ZSG 3TTcdV4YL59fpLJJM46tj6SZ8zHgr4A3ON9EkgwAvtaP183/eT4kmoZGLBQw7KSqdX0c9FfTUiho FEs4pE3brmgQUsVy51iqBmtVtXJeMVg+NyyFQEjJ56CkqXcKuBh4MXDcckiSAcDXuid52b/Nv6ah +SJF4tqNsd8+HJfHfXaXDQqCjZd2Tj0foBz3KTtHYzVq01m5Q7G7uSskSsrkiQGSpk8feA1wCfA5 yyFJBgBfzz2A1wF38qHQRBuukAf9jXpp1Nqfhr3jsQGUpUv+NUFFCSTKYZc9w14crZxbjHddEJbK ZRopOh9A0tR4N/mq/zsthSQZANyaHwbeBNzZh0GTbv5DI9A9FrutA1Ux7LKrbOLhfpqSJyiEQACW eifj0miNwcr5xWD5vLBcNmjEymMDJU3M1cBLgUsthSQZANyWHwTeDlzgQ6BJKkqIFbSuq3rtIzGQ WCnd668pfr5WY5bXboxh0A7DXeeHwfK5YU/A1QCSdlSffMX/BcARQ0hJMgC4Ld9G3iNm86+JCQWE Eoat1F/dX5WDU2kpNEIZSpt/zcBzt2Bp1E3NcT+NB63Q2X2notFYYdkQQNI2S8DfAE8FPm85JMkA 4PZ8I/Ba4G6WXpNS76uOa4fjsHUwxjhiOTRDCMHaaIaexw1CSjSHa6k56lesnBdO7L5DYbAqabt8 DHgycDlG5ZJkAHAW7kye9v8jll0Ta5qaMO4xah2squ5NqQwFK0XDumg2hQCUfC6OuXKwli7bdR53 Dg3+nMT3WB1JW+SLwAuBZ9v4S5IBwNm6APhH8t5/aSKNUtGA7ok0XL0hDse9tKcoyaPVpNlzPfAW 4F+Bt4bAsTNWsFxO4BHAHwB7LJWkDaqA55C4BDhoOSTJAGA9P+NlNv+alKKEFImtAzG2DsQiRvaU TVt/zZwOOUi9DPgw8JVb+bpjwMPJ+3T/DPhNSydpnS4HnkIOGSVJBgDr8hLgFy21dloIedDfqMu4 daDq906kPSEQyqa10cw4BVxJHpz6AeAA+arc2fgk8FvAq4CLgB+1nJJux+eARwDvBIaWQ5IMANbr wvoNqLRzUl7uTyD2jse0ekNM4wG7Q4mD/jQLbgS+RF7i/w/1f2/Ge4F7klcF/D7w7ZZY0tfYD7wY eCbQsxySZACwEY8CnmCJtdOKJUiRcev62GvfGFdCoumgP82AfwbeXTf+V2/xbSfg6eTVAA8H/ghY tuTSwkvklZpPA66zHJJkALBR9yefESvtbPPfgHGXdPK6atQ/mVaKJs1QWBdNrfcB7wA+WgcA2+0I 8FDgH0IeEvggHwJpYV2e8mT/91kKSTIA2IyfBV5nabWTQgEEUvdY7LcOpqVxN62USw7609SpgM8A rwbeT95vuzaB+3ElcCWBy4G/wCGt0iL5OPBsEq8FxpZDkgwANuP7yBP/veaqHVM0ICXi6v7Y6RyJ S0TKYsm6aGoMyUtrryAvtf0C0J6S+/b3wNvJWwL+DLizD5c0t47W79H+kskEj5KkOQsAzqnf3N7F smpHBCiaMO4RV2+oRr2b0lJosBzc76/pcBV5Ev9byEdqpSm9n2vAXwGvJ89t+RVglw+fNDciOex7 LPBFyyFJBgBbYYl85rTHTGnHFCX0bkrd1oHYHHXScuHxfpq8T5MH+V0JvJnZOkbreuC3yYMCHwHc x4dTmnnvBC4F3mopJElbGQA8CfgFy6mdEApICVoHY6d9MIYUadr8a4KuBV5L3tP/KfIy21n2PvJ2 hf8XeDLw3T7E0sw5CDy6/rfJff6SpC0NAH4DeKSl1PZ3/nm/f9VntLq/GnePpWYoWPKIP+2wAfnM 7LcBfwdcA9w4Z79jAv6ewBXA75OPDtznQy9NvTbwXOD5JA5ZDknSVgcAPwhcYhm17b1/gKIZGKzG 3ur+GAettDs0CME5/9oZFfB58r7+0xP8hwvwex8DnsJX9w//EnnLl6Tp+zfqcvIcj89YDknSdgQA e4GXA3ewjNqJ5r9ztBqdui6mVLHHq/7aIR8DPkBeFn95/SZ7EX0eeBD5iNeHAD/lU0OaGh8hD/J8 o6WQJG1nAPDXwPdbQm1r818Cibh6Q5Va+6uCIuwuSuuibfUp8vL+jwD/DKxakpv9U/1xelvAd1gS aWIOAk8H/hfQsRySpO0MAB5MXgoqbVPnD2UJo0Earl4fR73jcVcoQhFs/rX1Enl6/+ml/dcx+4P8 ttuL6yDgd8hbA/ybKe2cMXn75Yvqf68kSdrWAODHgIssnbat9w8QGjBopfHJ66rhqMPu0AiF+/21 hVrkQX5vBN5EnuTfsizrcgC4MORBiBcBPwt4Hoe0fRLwDuCxKc8jkSRp2wOAvcDzgT2WTtvx1iaU UBTQuSmOVq+LVGP2FA1s/bUVjpGHY11Rv4n+kCXZElcD9yVwP/K2gHtYEmnLfQx4NvBqksWQJO1c APAM4P+ybNoORQMSjFcPxGH7YCwTLBWlzb825SbyAL+rgLcDn7Ak2+aN9cfDgT8GvsWSSJt2CHge 8EzyEaSSJG1KOPXL33u2X3vv+g20DZm2/olYQhwzXr0+djrH4u6ipBkK66INOQm8G7gM+MTdPv/5 z1qSnXX8vt/7HcAfkOfFeGaHtDEvAp51h8uuvsZSSJK2ytm+Mbsj8Fybf22HogGjboqnrou9QSvt LRqU7vfXOgyA43XT/7fkJekHWNwj+6bBtcDDyIMVLwLuAxjpSWfnXcATgA9aCknSpAKAxwHfZbm0 lUKAooT+WhqfuraKox57ipLCmElnYRW4nrwv9tXk/fxdyzJ1Pgn8AvDLdUNzN0si3apryYHZqzDA lCRNMAD4GfJSTmnrmv8CQoPUORYHp66LxBHLDvvT7VgDPlA3lZfh1bFZEYHXEXgr8PvkbQHfaFmk m50iD/i7lMQpyyFJmmQAsJs8eMajnbS1zX9BbB+M3db+uJwSzaIJTjbWrXg9eXL/x4EPW46ZtQo8 HbicPCTwjy2JxEvJe/0/ZikkSdMQADwM+B7LpC1r/ktIkXTqy7HfORaXQ6BZlDb/+jc+CryTvK// fZZjrnwB+BPg74FHAf/VkmgBvR94IvAeSyFJmpYA4G54hUZbqGhANSatfqXqdm5KS0761xlOAl8C 3ga8ibwXtm1Z5toV5BUdv1QHAYbNWgT7yfMw3gB0LIckaZoCgIcDd7JE2gplE8ZD4okvVaPBqbRS Nijd8b/wDgBXAR8B3gx8xpIsnD55iOMbgCcDv+nrjubUKfJ2pscDxyyHJGnaAoAfBX7V8mgrFA0Y dtL41JdjGLRTo2hSWpWFdTV5eN/HyEddfcmSCBgEeATwWvLWswdaEs2RvweeAXzY3W6SpGkMAErg QvIAQGlzzX8Jw3YanfxyFUZdymIJ9/svZtN/ed34/ytwxJLoVnyCwIOAVwKPBv4fS6IZ9kHyPv93 +LonSZrmAOAngXtbGm1GCBAa0L0prbVuqJrjPstO+l8YnbrRfxt5kN9B4Khl0Tq8q26e7k8OpL/Z kmiGHCJf8f9r8ukXkiRNdQDwMMuiTTX/BRRN6NwYO6eui2Uc182/5tmXgGvIA/zeC9wAjCyLNmGt bqD+EXgM8CDgAsuiKdYir165BLjeckiSZiEA+AnyCgBpY81/gKIMrB2u1lb3x0aKrBQN6zKHxsDH yXv5/wW4rG7YpK12FHgwhFfVQcAvWhJNoTcDT4f0AUshSZqlAOAPue2TAaTb6P7z1f/VA1WndSA2 QsGKx/zNlRHwdvLRbR8EPgR0LYt2yFXA/cjbAv4c+BFLoinwr8DzgVdYCknSrAUA3wX8rCXRhpv/ Elr7Y7d1sCpDEVaCx/zNg0PkvfzvAr4AfBqoLIsm6A318/EB5BUBd7EkmoATwFPIS/5PWA5J0iwG APcD9lkSrbv3LyCUIbX2V53WgaoRiuCV/9nVAq4F3k/ee/1p4EbLoilzknzV9Z8IPAz4LTy5Rjuj D7yGxEXAVyyHJGlWA4Al4L9bDm2w+ad9oOq0D1RlKG3+Z9BX6qb/fcA7yEtapVlwHfDH5HPWH4cz bLS9rgD+irwqSpKkmQ4A7g78R8uhdTX/1Mv+D4zXWgdSoyjDCi77nwWRvI//4+R9/O8FDlgWzbD3 1R+/DjzY1zNtsc8AzwFeaikkSfMSANyLvApAOvsAoAGt/bHTOpAaocTmf7p1gH+uP64CPlF/Tpon rwLeAvwR8GfAHSyJNvnv5tOAl5BPo5AkaS4CgHOAX7AUOuvGP+Rl/60D405rfyxC6cC/KdQnX9V/ C3nZ6mfJy6VHlkZz7iR5ONtrAjweeCDQtCxahzHwDwmeQB5+KknSXAUAd8Xlkjrb5r843fxXa60D sQxl2OWe/6kQgf3kvfzvqRv/LwNrlkYL6ivk4YAvB/4S+DFLorPwCeAR5NVS0XJIkuYxAPgeoLQU uv3uH4omrB2uOq390T3/k7dWv1n9IvBO4N3ATZZFuoX3E7gneVvA7wPfb0n0dXwBeCHwHBLJckiS 5jkA8M2QzkpRQudo6rRuiGXhnv9J2U8edvZR8l7+Ky2JdFaeD7wO+HPgkdzyGFwtrhF5wN8lwGHL IUlahADgHpZBt9v8N6B7PK2d+krVSBUrwTUjO6UC3k8+nu8q8rL+L1sWaUNOAI8F3kQeEvggS7LQ Xl83/h59KklaqADgWy2Dbqf5T8NOGrf2V81qxHLpOK3t1CJPm34PX53YfxjoWhppy1xFPjLwtcCj gR+3JAvlX4BnAZeTQ1ZJkhYqALirZdBtNP9UQ8anvhzjuGfzvw0ScA15YNmVwD8Bn/RNqbQjf/fe BrwLeBh5PsC3WZa5dh3wCuDJOOBPkrTAAYD09Zv/EmKEE9dWabiWGoXN/1Y5CnwM+AzwQfLV/lOW RZqIMfms99cADyefHLDXssyV0RmN/37LIUkyAJC+RggQI+nUV6pu/1TaVS5ROBd5U64iT+m/Cvhc 3fxLmh77gT8FXk3gUcAvWpK58CYSlwAfsBSSJBkA6NYCgILUPhg73WNpqWza/K/TCDgCvJV8PN81 wCHyADJJ0+2jwC8BP0deGfDdlmQmXUue7/APuKVKkqRbBAAe5qZbKJrQO5GqtSNxJZSGRGehCxwE Pk1ezv8B8l7TU5ZGmkkVeUDc+4DfAx4C3MWyzIQjwAuB5wInLYckSQYAujUJimZg3E+xdUMV4piy sP2/NV+oP67mqxP7XSchzZdV4GLgb4HHAL/ra+Y0v4LxauCJeFSqJEm3GQAcAL7HUig0IMY0OvXl qjfspN3lcrClvWXD/6/AZ4FP1P991LJIC+EG8ikBbyLPCbiPJZkq7wWeDrzdUkiSdPsBwMcNABQC BEjtg1XVP5V2l0uhseDN/2HgfwNX1M3/58nL/CUtrrcD7wrwP4DHAd9rSSbqy8DjE7wR6FkOSZLO LgD4MPAAS7HgAUAJvZNp3L4xFUVj4fb994AWeUL/+8nT+g+Tr/CPfXZIOkNF3hLwbvKqgEcC+yzL jmoBlwLPw5VYkiStOwD4oGVY9O4fqiHj9oFqkCr2hHIh3jweJk/mv6L++BDQ98kg6SwdB54KvBl4 LHlVQGlZttXp4YxPwKNUJUnacABwNXmp809YjsVUNOHUgTgcdtkdirkccNUBvlQ/1z9FntL/qToI kKTN+AzwKwTuC/wR8NOWZFu8H3g28CZn00iStLkAoAu80gBgcZv//snU7xyLRYAQ5qP9H5CP5PsA 8DHyHv4vAid8xCVtk8vqjwcDfwZ8myXZEtcBzwJegFuyJEnakgAA4O+Ah+IwwIUSCkgV47XDMcYh K+XSTF79T+Q9/O8HPgJ8lDwY6ogNv6QJuJQ8lO6P6o+9lmRDxnUtLwX2Ww5JkrY2AGiRh+k835Is jqIR6Bytxv2TsSyboZiRu71K3nv7ReA95OP4Pl1/fuijKmkK7Af+AngdeT7AL+J8gLNVAW8ln7Lw ScshSdL2BAAALwF+BbcCLEbzX8Kon+LakRQowvIUX/s/Qj6C73ryoL5P1E2/S0ElTbtPAr8E/Crw cODuluQ2fRy4mBycSJKkbQ4AxsDvkZdRn2Np5luCODiZhsN2ahbNqblbQ+Aa8hX9z9WN/+dw2rOk 2fY68nyA/498bOA3WZJbOAZcRL4Q0bMckiTtTABA3XDdn3zGsecaz6kQII2hc7QahQYrE7wrJ4AP k6fzn967f4B81V+S5kmPvNXu7XUQ8BeWBMiT/V9CDnslSdIOBwDUb07+FHjZrfy5Zj4BgP5qHI56 7N6hqf+D+s3vAeCDddP/CfJVn6NA3wdF0oL4EvAo8nn2TyQfG1gsWA0i8G7gwvo1QZIkTTAAgHws YBt4NbDbMs1fANC9KY1ILG3D285R3dTfRB6EdSVwFfDZ+vMO6pOkPNPkPgR+FXgMi3MKzxeBJ5J4 XR0ESJKkKQgAIB9jdAp4KfDtlmpOFDDup/G4n85JOQvYrIPAV8hD+r5CniHxafLZzZKkWxeB15CP 4n0MeWvAXef0dz1GXln4l+QLDJIkacoCAMjHrP0k8BTgQZZrDvr/AjonOVUN2VsU697/f5S8X//T wA11w381cC1O5ZekjRoCTwBeCzwE+P05+/1eTD5m+NM+1JIkTXcAAPnK7q+RZwM8FfgWyza7QhEY dasL4piiXLrVL4v14/5Z8n7VD9X//yh5QF/HSkrSlvsC8D/J2++eRA7gZ9l7gMcDH/ChlSRpdgKA 015ThwCPBn4DuIPlm7XmH8aDRDWgCHnvfwdYJU/j/wzwKfIxfJ8HDtd/PrBykrSjPgD8HPBA8mkB 3zFj9/9LwDOBV+CxfpIkzWwAAHAceCh5H9+fAPeewTcmi2gNWCVwJI7SwVilrxD4GHlI39XkK/uS pOnRA14W8mkBDwV+h+kP3o/X7w8uSXnPvyRJmvEA4LTPAX9IHlb0m8C9gP/bck7cmLxU/xB5j/6X 6/8+3eR/CagskyTNjGPkVQB/Bzwc+OUpvZ+vB55BPvVFkiTNWQBw2kHgIuAS4MfJKwLuC3ynpd1W q+TBe18kX8X/Mnlv/uG64b8J6FomSZobVwG/AryqDgR+Ykru1/8mL/e/zIdIkqT5DwBO6wPvrj8u Af4P8vCi+wDfD+xjS06cWwjDMz5ON/bX1I3+58ihy1odAqziOcqStEjeWjfdvwpcCNxlQvfjcP3z X4fH+kmStHABwJlurD8+BFwM3BH4KeCHgP8IfANwJ+D8Baz3GBjVjXsbaAGngOvqj4PkpfsH6o9R /T02+ZKk09rASwi8BXgM8IAdfE1tk1chXETisA+FJEkGAGcaka8S/E39AbAb+D7gh4F/D9wZ+OY6 FLgjcMGM1rKqG/hIvmrf56tL8a8n7+M8ffX++jP+W5KkjTgM/HHdkD8G+IVt/nlvJi/3v8LSS5Jk AHC2usBH6o8z78c3AP/ujP+9APim+n/3kQcODuvP3bFuuMv6z7ZCqhv2Zn1/2nWjPgZWyHvr99f/ faL+/9SNfJc8sfmGOgA4iMfnSZJ2xkeA/w7cnzwo8Ie2+Pb/lbyi7w2WWpIkA4CtMK6b5oO38TXn 1U3/ecDeutEuyMciNbfgPpwiX5Ev69sdkI80qurbX8UJ+pKk6fUG4J+BB5FXBNxpk7d3jDzo92/q 10NJkjTjQkrJKkiStszx+37v13m1uZ0Xo9v9urCuT5/dbbLu27zVP97omNuwiT++7e+9K/AE8nyA Peu8Vx3gTcBjySvhvr7bePtwu+8sNvPWI23zz0pn8W1pnX+QNn5f73DZ1f6jIknaMoUlkCRp7hwE fg/4b8CV6/i+K+vv+bXbbP4lSZIBgCRJmipXAPcEfgP4+G183cfrr7knDvmTJMkAQJIkzaxXAfcC LuSWJ9Cs1Z+7V/01kiRpjjUsgSRJC+E48ETgjcDD6s89A/i0pZEkaTH8/wMAdxshDa0yg0YAAAAA SUVORK5CYII=",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.8",
                  "provider": {
                    "name": "PlanetScale"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"planetscale.com/v1alpha1\",\n    \"kind\": \"PsCluster\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": {\n      \"monitored\": true,\n      \"lockserver\": {\n        \"endpoint\": \"\u003cLockServer IP and Port\u003e\",\n        \"root_path\": \"/vitess/example/global\"\n      },\n      \"cells\": [\n        {\n          \"name\": \"example1\",\n          \"useGlobalLockserver\": true,\n          \"gateway\": {\n            \"count\": 2\n          },\n          \"vtctld\": {\n            \"count\": 1\n          },\n          \"keyspaces\": [\n            {\n              \"name\": \"messagedb\",\n              \"shards\": [\n                {\n                  \"range\": \"-80\",\n                  \"replicas\": [\n                    {\n                      \"type\": \"replica\"\n                    },\n                    {\n                      \"type\": \"replica\"\n                    },\n                    {\n                      \"type\": \"rdonly\"\n                    },\n                    {\n                      \"type\": \"replica\"\n                    }\n                  ]\n                },\n                {\n                  \"range\": \"80-\",\n                  \"replicas\": [\n                    {\n                      \"type\": \"replica\"\n                    },\n                    {\n                      \"type\": \"replica\"\n                    },\n                    {\n                      \"type\": \"rdonly\"\n                    },\n                    {\n                      \"type\": \"replica\"\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n]",
                    "capabilities": "Deep Insights",
                    "categories": "Database",
                    "certified": "False",
                    "containerImage": "registry.connect.redhat.com/planetscale/operator:0.1.8",
                    "createdAt": "2019-03-06 21:40:00",
                    "description": "PlanetScale's operator for Vitess deploys and manages instances of MySQL with Vitess, a database clustering system for horizontal scaling of MySQL.",
                    "support": "PlanetScale"
                  },
                  "description": "The Vitess Operator deploys and manages instances of MySQL with Vitess, a database clustering system for horizontal scaling of MySQL\nthrough generalized sharding.\n\n\nBy encapsulating shard-routing logic, Vitess allows application code and\ndatabase queries to remain agnostic to the distribution of data onto\nmultiple shards. With Vitess, you can even split and merge shards as your\nneeds grow, with an atomic cutover step that takes only a few seconds.\n\n\nVitess has been a core component of YouTube's database infrastructure since\n2011, and has grown to encompass tens of thousands of MySQL nodes. For more\ninformation, visit [https://planetscale.com](https://planetscale.com)\n\n### New Features\n\nWe have support for Orchestrator, backups, and restores from GCS and S3. We also have seamless upgrades for all containers.\n\n### Supported Features\n\n* **Dashboard** - The Operator deploys a dashboard for monitoring and introspecting your cluster.\n\n* **Scale Gateways** - Scale out the Gateway, which is the component that responds to queries and returns consolidated results from the MySQL shards.\n\n* **Configure Keyspaces** - Configure how your data is sharded with in your cluster.\n\n### Before You Start\n\n1. Create a RedHat registry image pull secret called\n`planetscale-operator-pull-secret`, which is required to pull the operator\nimage.\n\n2. Create an etcd cluster, which is used as a lock server by PlanetScale Vitess clusters. Try out the [etcd Operator](https://www.operatorhub.io/?keyword=etcd).\n\n### Permissions\n\nThis operator only supports running in the same namespace as the PsCluster resources it is watching.\n\n\nThis operator should be deployed in an isolated namespace since the Pods it creates use the `default` service account and require the `use` permission on the `anyuid` Security Context Contraint (SCC) to run correctly. Running this operator in a shared namespace is not recommended since unrelated pods will have access to use the `anyuid` SCC.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "psclusters.planetscale.com",
                        "version": "v1alpha1",
                        "kind": "PsCluster",
                        "displayName": "PsCluster",
                        "description": "Instance of a PlanetScale Vitess Cluster"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "beta"
          }
        },
        {
          "metadata": {
            "name": "portworx",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/portworx",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Portworx",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Portworx"
            },
            "packageName": "portworx",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "portworx-operator.v1.0.5",
                "currentCSVDesc": {
                  "displayName": "Portworx Enterprise",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.0.5",
                  "provider": {
                    "name": "Portworx"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"core.libopenstorage.org/v1alpha1\",\n    \"kind\": \"StorageCluster\",\n    \"metadata\": {\n      \"name\": \"portworx\",\n      \"namespace\": \"test-operator\",\n      \"annotations\": {\n        \"portworx.io/is-openshift\": \"true\"\n      }\n    },\n    \"spec\": {\n      \"image\": \"portworx/oci-monitor:2.1.2\",\n      \"stork\": {\n        \"enabled\": true,\n        \"image\": \"openstorage/stork:2.2.4\"\n      },\n      \"userInterface\": {\n        \"enabled\": true,\n        \"image\": \"portworx/px-lighthouse:2.0.4\"\n      },\n      \"storage\": {\n        \"useAll\": true\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"core.libopenstorage.org/v1alpha1\",\n    \"kind\": \"StorageNodeStatus\",\n    \"metadata\": {\n      \"name\": \"example\",\n      \"namespace\": \"test-operator\"\n    }\n  }\n]",
                    "capabilities": "Deep Insights",
                    "categories": "Storage",
                    "certified": "false",
                    "containerImage": "portworx/px-operator:1.0.5",
                    "createdAt": "2019-08-07 08:00:00",
                    "description": "Cloud native storage solution for production workloads",
                    "repository": "https://github.com/libopenstorage/operator",
                    "support": "Portworx, Inc"
                  },
                  "description": "### About Portworx\n\nPortworx Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\n\nPortworx Enterprise enables you to migrate entire applications,\nincluding data, between clusters in a single data center or cloud, or between\nclouds, with a single kubectl command.\n\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the\ninstall, configuration, upgrades and manages the Portworx Enterprise cluster\nlifecycle.\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx service running on the nodes to avoid application downtime.\nTo uninstall Portworx completely without wiping the data, you should add the following delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\nTo uninstall Portworx and **wipe all the data**, you should use the following delete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift/)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes/)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes/)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes/)\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "storageclusters.core.libopenstorage.org",
                        "version": "v1alpha1",
                        "kind": "StorageCluster",
                        "displayName": "Storage Cluster",
                        "description": "Storage Cluster installs any Open Storage cluster like Portworx in the environment. It has all the necessary configurations to setup and update a storage cluster.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "DaemonSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "conditions",
                            "displayName": "Cluster Conditions",
                            "description": "Conditions describe the current state of the cluster",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          },
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "Status of the Portworx cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "image",
                            "displayName": "Image",
                            "description": "The docker image name and version of Portworx Enterprise."
                          },
                          {
                            "path": "imagePullPolicy",
                            "displayName": "Image Pull Policy",
                            "description": "It is the pull policy for the image. Takes one of Always, Never, IfNotPresent. Defaults to Always."
                          },
                          {
                            "path": "imagePullSecret",
                            "displayName": "Image Pull Secret",
                            "description": "It is a reference to secret in the kube-system namespace which is used for pulling images used by this storage cluster."
                          },
                          {
                            "path": "customImageRegistry",
                            "displayName": "Custom Image Registry",
                            "description": "CustomImageRegistry is a custom container registry server (may include repository) that will be used instead of index.docker.io to download Docker images. (Example: myregistry.net:5443 or myregistry.com/myrepository)"
                          },
                          {
                            "path": "stork.image",
                            "displayName": "Stork Image",
                            "description": "The docker image name and version of Stork."
                          },
                          {
                            "path": "userInterface.image",
                            "displayName": "Lighthouse Image",
                            "description": "The docker image name and version of Lighthouse."
                          },
                          {
                            "path": "secretsProvider",
                            "displayName": "Secrets Provider",
                            "description": "The secret provider that Portworx should integrate with to provider features like volume encryption, security, cloud backup and migration."
                          }
                        ]
                      },
                      {
                        "name": "storagenodestatuses.core.libopenstorage.org",
                        "version": "v1alpha1",
                        "kind": "StorageNodeStatus",
                        "displayName": "Storage Node Status",
                        "description": "Do not create Storage Node Status as it is internally created by the operator. It represents the status of a Portworx node.",
                        "statusDescriptors": [
                          {
                            "path": "nodeUid",
                            "displayName": "Node UID",
                            "description": "Unique identifier for the Portworx node."
                          },
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "Status of the Portworx node.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "network.dataIP",
                            "displayName": "Data IP",
                            "description": "IP address used by the storage driver for data traffic"
                          },
                          {
                            "path": "network.mgmtIP",
                            "displayName": "Management IP",
                            "description": "IP address used by the storage driver for management traffic"
                          },
                          {
                            "path": "conditions",
                            "displayName": "Node Conditions",
                            "description": "Conditions describe the current state of the storage node",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "Version of Portworx on the node."
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "postgres-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/postgres-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Zalando SE",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Zalando SE"
            },
            "packageName": "postgres-operator",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "postgres-operator.v1.2.0",
                "currentCSVDesc": {
                  "displayName": "Postgres-Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.2.0",
                  "provider": {
                    "name": "Zalando SE"
                  },
                  "annotations": {
                    "alm-examples": "[\n    {\n        \"apiVersion\": \"acid.zalan.do/v1\",\n        \"kind\": \"postgresql\",\n        \"metadata\": {\n            \"name\": \"acid-minimal-cluster\"\n        },\n        \"spec\": {\n            \"databases\": {\n                \"foo\": \"zalando\"\n            },\n            \"numberOfInstances\": 2,\n            \"postgresql\": {\n                \"version\": \"11\"\n            },\n            \"teamId\": \"ACID\",\n            \"users\": {\n                \"foo_user\": [],\n                \"zalando\": [\n                    \"superuser\",\n                    \"createdb\"\n                ]\n            },\n            \"volume\": {\n                \"size\": \"1Gi\"\n            }\n        }\n    },\n    {\n        \"apiVersion\": \"acid.zalan.do/v1\",\n        \"kind\": \"OperatorConfiguration\",\n        \"metadata\": {\n            \"name\": \"postgresql-operator-default-configuration\"\n        },\n        \"configuration\": {\n            \"aws_or_gcp\": {\n                \"aws_region\": \"eu-central-1\"\n            },\n            \"debug\": {\n                \"debug_logging\": true,\n                \"enable_database_access\": true\n            },\n            \"docker_image\": \"registry.opensource.zalan.do/acid/spilo-11:1.5-p9\",\n            \"etcd_host\": \"\",\n            \"kubernetes\": {\n                \"cluster_domain\": \"cluster.local\",\n                \"cluster_labels\": {\n                    \"application\": \"spilo\"\n                },\n                \"cluster_name_label\": \"cluster-name\",\n                \"enable_pod_antiaffinity\": false,\n                \"oauth_token_secret_name\": \"postgresql-operator\",\n                \"pdb_name_format\": \"postgres-{cluster}-pdb\",\n                \"pod_antiaffinity_topology_key\": \"kubernetes.io/hostname\",\n                \"pod_management_policy\": \"ordered_ready\",\n                \"pod_role_label\": \"spilo-role\",\n                \"pod_service_account_name\": \"operator\",\n                \"pod_terminate_grace_period\": \"5m\",\n                \"secret_name_template\": \"{username}.{cluster}.credentials.{tprkind}.{tprgroup}\",\n                \"spilo_privileged\": false\n            },\n            \"load_balancer\": {\n                \"enable_master_load_balancer\": false,\n                \"enable_replica_load_balancer\": false,\n                \"master_dns_name_format\": \"{cluster}.{team}.{hostedzone}\",\n                \"replica_dns_name_format\": \"{cluster}-repl.{team}.{hostedzone}\"\n            },\n            \"logging_rest_api\": {\n                \"api_port\": 8008,\n                \"cluster_history_entries\": 1000,\n                \"ring_log_lines\": 100\n            },\n            \"logical_backup\": {\n                \"logical_backup_docker_image\": \"registry.opensource.zalan.do/acid/logical-backup\",\n                \"logical_backup_s3_bucket\": \"\",\n                \"logical_backup_schedule\": \"30 00 * * *\"\n            },\n            \"max_instances\": -1,\n            \"min_instances\": -1,\n            \"postgres_pod_resources\": {\n                \"default_cpu_limit\": \"3\",\n                \"default_cpu_request\": \"100m\",\n                \"default_memory_limit\": \"1Gi\",\n                \"default_memory_request\": \"100Mi\"\n            },\n            \"repair_period\": \"5m\",\n            \"resync_period\": \"30m\",\n            \"scalyr\": {\n                \"scalyr_cpu_limit\": \"1\",\n                \"scalyr_cpu_request\": \"100m\",\n                \"scalyr_memory_limit\": \"1Gi\",\n                \"scalyr_memory_request\": \"50Mi\"\n            },\n            \"teams_api\": {\n                \"enable_team_superuser\": false,\n                \"enable_teams_api\": false,\n                \"pam_role_name\": \"zalandos\",\n                \"protected_role_names\": [\n                    \"admin\"\n                ],\n                \"team_admin_role\": \"admin\",\n                \"team_api_role_configuration\": {\n                    \"log_statement\": \"all\"\n                }\n            },\n            \"timeouts\": {\n                \"pod_deletion_wait_timeout\": \"10m\",\n                \"pod_label_wait_timeout\": \"10m\",\n                \"ready_wait_interval\": \"4s\",\n                \"ready_wait_timeout\": \"30s\",\n                \"resource_check_interval\": \"3s\",\n                \"resource_check_timeout\": \"10m\"\n            },\n            \"users\": {\n                \"replication_username\": \"standby\",\n                \"super_username\": \"postgres\"\n            },\n            \"workers\": 4\n        }\n    }\n]",
                    "capabilities": "Full Lifecycle",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "registry.opensource.zalan.do/acid/postgres-operator:v1.2.0",
                    "createdAt": "2019-07-24 10:30:00",
                    "description": "Postgres operator creates and manages PostgreSQL clusters running in Kubernetes.",
                    "repository": "https://github.com/zalando/postgres-operator",
                    "support": "Zalando SE"
                  },
                  "description": "The Postgres operator manages PostgreSQL clusters on Kubernetes.\n\n### Key principles\n\n* **Hands free:** Configuration happens only via manifests and its own config\n* **Cloud native:** Easy integration in automated deploy pipelines with no access to Kubernetes directly\n* **Scalable:** Run highly available PostgreSQL clusters powered by Patroni\n\n### How it works\n\nThe operator watches additions, updates, and deletions of PostgreSQL cluster manifests and changes the running clusters accordingly. For each PostgreSQL custom resource it creates StatefulSets, Services, and also Postgres roles. For some configuration changes, e.g. updating a pod's Docker image, the operator carries out the rolling update.\n\n### Creating a Postgres cluster\n\nAfter installing the Postgres Operator via OLM you can use the provided YAML examples to create a minimal cluster setup with two instances.\n\n```\n# First, make sure the operator is running\nkubectl get pod -l name=postgres-operator -n operators\n\n# Then create a new Postgres cluster with a manifest file\nkubectl create -n \u003cnamespace\u003e -f manifests/minimal-postgres-manifest.yaml\n\n# check for deployed clusters\nkubectl get postgresql -n \u003cnamespace\u003e\n```\n\nThe StatefulSets, Services and Pods will be given the same name as you cluster manifest. The database pods can be identified by their number suffix, starting from `-0`. With the default setup they run the Spilo container image by Zalando. As for the services and endpoints, there will be one for the master pod and another one for all the replicas (`-repl` suffix), plus a headless service `-config` for communication with Patroni. Check if all components are coming up. Use the label `application=spilo` to filter and list the label `spilo-role` to see which Pod currently contains the master.\n\n```\n# check created database pods\nkubectl get pods -l application=spilo -L spilo-role\n\n# check created service resources\nkubectl get svc -l application=spilo\n```\n\n### Configuring the operator\n\nThe operator can be configured by defining an `OperatorConfiguration` custom resource or by creating a ConfigMap that contains the parameters to be changed. The YAML example shows the default configuration used internally when creating the operator via OLM. For a detailed description of each parameter checkout out the [operator reference](https://github.com/zalando/postgres-operator/blob/master/docs/reference/operator_parameters.md)\n\nIn order to obtain changes from the configuration first create an `OperatorConfiguration` or ConfigMap. Then edit the Postgres Operator CSV and add a reference to this resource in the `spec.containers` section of the `postgres-operator` deployment. Then delete the running operator deployment so that the CSV respawns an updated deployment.\n\n```\n# for CRD-based configuration\n- env:\n  - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT\n    value: postgresql-operator-default-configuration\n\n# for ConfigMap-based configuration\n- env:\n  - name: CONFIG_MAP_NAME\n    value: \"postgres-operator\"\n```\n\nPlease, check out the [user guide](https://github.com/zalando/postgres-operator/blob/master/docs/user.md) for more details about how to use the operator.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "postgresqls.acid.zalan.do",
                        "version": "v1",
                        "kind": "postgresql",
                        "displayName": "PostgreSQL",
                        "description": "Creates a PostgreSQL cluster managed by Postgres-Operator."
                      },
                      {
                        "name": "operatorconfigurations.acid.zalan.do",
                        "version": "v1",
                        "kind": "OperatorConfiguration",
                        "displayName": "OperatorConfiguration",
                        "description": "Configuration for PostgreSQL cluster managed by Postgres-Operator."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "postgresql",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/postgresql",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "CrunchyData.com",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "CrunchyData.com"
            },
            "packageName": "postgresql",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "postgresoperator.v4.0.1",
                "currentCSVDesc": {
                  "displayName": "Crunchy PostgreSQL Enterprise",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "4.0.1",
                  "provider": {
                    "name": "CrunchyData.com"
                  },
                  "annotations": {
                    "alm-examples": "[{\n    \"apiVersion\": \"crunchydata.com/v1\",\n    \"kind\": \"Pgcluster\",\n    \"metadata\": {\n        \"labels\": {\n            \"archive\": \"false\",\n            \"archive-timeout\": \"60\",\n            \"crunchy-pgbadger\": \"false\",\n            \"crunchy_collect\": \"false\",\n            \"current-primary\": \"fromcrd\",\n            \"deployment-name\": \"fromcrd\",\n            \"name\": \"fromcrd\",\n            \"pg-cluster\": \"fromcrd\",\n            \"pgo-backrest\": \"false\",\n            \"pgo-version\": \"4.0.1\",\n            \"primary\": \"true\"\n        },\n        \"name\": \"fromcrd\",\n      \"namespace\": \"pgo\"\n    },\n    \"spec\": {\n        \"ArchiveStorage\": {\n            \"accessmode\": \"\",\n            \"fsgroup\": \"26\",\n            \"matchLabels\": \"\",\n            \"name\": \"\",\n            \"size\": \"\",\n            \"storageclass\": \"fast\",\n            \"storagetype\": \"dynamic\",\n            \"supplementalgroups\": \"\"\n        },\n        \"BackrestStorage\": {\n            \"accessmode\": \"ReadWriteOnce\",\n            \"fsgroup\": \"26\",\n            \"matchLabels\": \"\",\n            \"name\": \"\",\n            \"size\": \"1G\",\n            \"storageclass\": \"fast\",\n            \"storagetype\": \"dynamic\",\n            \"supplementalgroups\": \"\"\n        },\n        \"ContainerResources\": {\n            \"limitscpu\": \"\",\n            \"limitsmemory\": \"\",\n            \"requestscpu\": \"\",\n            \"requestsmemory\": \"\"\n        },\n        \"PrimaryStorage\": {\n            \"accessmode\": \"ReadWriteOnce\",\n            \"fsgroup\": \"26\",\n            \"matchLabels\": \"\",\n            \"name\": \"fromcrd\",\n            \"size\": \"1G\",\n            \"storageclass\": \"fast\",\n            \"storagetype\": \"dynamic\",\n            \"supplementalgroups\": \"\"\n        },\n        \"ReplicaStorage\": {\n            \"accessmode\": \"ReadWriteOnce\",\n            \"fsgroup\": \"26\",\n            \"matchLabels\": \"\",\n            \"name\": \"\",\n            \"size\": \"1G\",\n            \"storageclass\": \"fast\",\n            \"storagetype\": \"dynamic\",\n            \"supplementalgroups\": \"\"\n        },\n        \"backuppath\": \"\",\n        \"backuppvcname\": \"\",\n        \"ccpimage\":\"crunchy-postgres\",\n        \"ccpimagetag\": \"centos7-11.4-2.4.1\",\n        \"clustername\": \"fromcrd\",\n        \"customconfig\": \"\",\n        \"database\": \"userdb\",\n        \"name\": \"fromcrd\",\n      \"namespace\":\"pgo\",\n        \"nodename\": \"\",\n        \"policies\": \"\",\n        \"port\": \"5432\",\n        \"primaryhost\": \"fromcrd\",\n        \"primarysecretname\": \"fromcrd-primaryuser-secret\",\n        \"replicas\": \"0\",\n        \"rootsecretname\": \"fromcrd-postgres-secret\",\n        \"secretfrom\": \"\",\n        \"status\": \"\",\n        \"strategy\": \"1\",\n        \"user\": \"testuser\",\n        \"userlabels\": {\n            \"archive\": \"false\",\n            \"archive-timeout\": \"60\",\n            \"crunchy-pgbadger\": \"false\",\n            \"crunchy_collect\": \"false\",\n            \"pgo-backrest\": \"false\",\n            \"pgo-version\": \"4.0.1\"\n        },\n        \"usersecretname\": \"fromcrd-testuser-secret\"\n    }\n},{\n    \"apiVersion\": \"crunchydata.com/v1\",\n    \"kind\": \"Pgreplica\",\n    \"metadata\": {\n        \"name\": \"fromcrd\",\n        \"namespace\": \"pgo\"\n    },\n    \"spec\": {}\n},{\n    \"apiVersion\": \"crunchydata.com/v1\",\n    \"kind\": \"Pgpolicy\",\n    \"metadata\": {\n        \"name\": \"fromcrd\",\n        \"namespace\": \"pgo\"\n    },\n    \"spec\": {}\n},{\n    \"apiVersion\": \"crunchydata.com/v1\",\n    \"kind\": \"Pgtask\",\n    \"metadata\": {\n        \"name\": \"fromcrd\",\n        \"namespace\": \"pgo\"\n    },\n    \"spec\": {}\n},{\n    \"apiVersion\": \"crunchydata.com/v1\",\n    \"kind\": \"Pgbackup\",\n    \"metadata\": {\n        \"name\": \"fromcrd\",\n        \"namespace\": \"pgo\"\n    },\n    \"spec\": {}\n}] \n",
                    "capabilities": "Full Lifecycle",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "crunchydata/postgres-operator:centos7-4.0.1",
                    "createdAt": "07/04/2019",
                    "description": "A Postgres Operator from Crunchydata.com",
                    "repository": "https://github.com/CrunchyData/postgres-operator",
                    "support": "crunchydata.com"
                  },
                  "description": "The PostgreSQL Operator runs within a Kubernetes cluster and provides a means to deploy and manage PostgreSQL clusters.\n\n## Before You Begin\n\nThere are several manual steps that the cluster administrator must perform prior to installing the operator. The\noperator must be provided with an initial configuration to run in the cluster, as well as certificates and\ncredentials that need to be generated.\n\nStart by cloning the operator repository locally.\n\n```\ngit clone -b 4.0.1 https://github.com/CrunchyData/postgres-operator.git\ncd postgres-operator\n```\n\n### Operator Configuration\n\nEdit `conf/postgres-operator/pgo.yaml` to configure the operator deployment. Look over all of the options and make any\nchanges necessary for your environment.\n\n#### Image\n\nUpdate the `CCPImageTag` tag to configure the postgres image being used, updating for the version of postgres as needed.\n\n```\nCCPImageTag:  centos7-11.3-2.4.1\n```\n\n#### Storage\n\nConfigure the backend storage for the Persistent Volumes used by each cluster. Depending on the type of persistent\nstorage you wish to make available, adjust the `StorageClass` as necessary. In this case, we are deployed on AWS using `gp2`\nis the default for the cluster.\n\n```\nstorageos:\n  AccessMode:  ReadWriteOnce\n  Size:  1G\n  StorageType:  dynamic\n  StorageClass:  gp2\n  Fsgroup:  26\n```\n\nOnce the storage backend is defined, enable the new storage option as needed.\n\n```\nPrimaryStorage: storageos\nXlogStorage: storageos\nBackupStorage: storageos\nReplicaStorage: storageos\nBackrestStorage: storageos\n```\n\n### Certificates\n\nYou will need to either generate new TLS certificates or use existing certificates for the operator API.\n\nYou can generate new self-signed certificates using scripts in the operator repository.\n\n```\nexport PGOROOT=$(pwd)\ncd $PGOROOT/deploy\n$PGOROOT/deploy/gen-api-keys.sh\n$PGOROOT/deploy/gen-sshd-keys.sh\ncd $PGOROOT\n```\n\n### Configuration and Secrets\n\nOnce the configuration changes have been updated and certificates are in place, we can save the information to the cluster.\n\nCreate the pgo namespace if it does not exist already. This single namespace is where the operator should be deployed to. Postgres clusters will also be deployed here.\n\n```\noc create namespace pgo \n```\n\nCreate the `pgo-backrest-repo-config` Secret that is used by the operator.\n\n```\nkubectl create secret generic -n pgo pgo-backrest-repo-config \\\n  --from-file=config=$PGOROOT/conf/pgo-backrest-repo/config \\\n\t--from-file=sshd_config=$PGOROOT/conf/pgo-backrest-repo/sshd_config \\\n  --from-file=aws-s3-credentials.yaml=$PGOROOT/conf/pgo-backrest-repo/aws-s3-credentials.yaml \\\n  --from-file=aws-s3-ca.crt=$PGOROOT/conf/pgo-backrest-repo/aws-s3-ca.crt\n\n\n```\n\nCreate the `pgo-auth-secret` Secret that is used by the operator.\n\n```\nkubectl create secret generic -n pgo pgo-auth-secret \\\n  --from-file=server.crt=$PGOROOT/conf/postgres-operator/server.crt \\\n  --from-file=server.key=$PGOROOT/conf/postgres-operator/server.key \\\n  --from-file=pgouser=$PGOROOT/conf/postgres-operator/pgouser \\\n  --from-file=pgorole=$PGOROOT/conf/postgres-operator/pgorole\n```\n\nRemove existing credentials for pgo-apiserver TLS REST API, if they exist.\n\n```\nkubectl delete secret -n pgo tls pgo.tls\n```\n\nCreate credentials for pgo-apiserver TLS REST API\n```\nkubectl create secret -n pgo tls pgo.tls \\\n  --key=$PGOROOT/conf/postgres-operator/server.key \\\n  --cert=$PGOROOT/conf/postgres-operator/server.crt\n```\n\nCreate the `pgo-config` ConfigMap that is used by the operator.\n\n```\nkubectl create configmap -n pgo pgo-config \\\n--from-file=$PGOROOT/conf/postgres-operator\n\n```\n\nOnce these resources are in place, the operator can be installed into the cluster.\n\n## After You Install\n\nOnce the operator is installed in the cluster, you will need to perform several steps to enable usage.\n\n### Service\n\n```\noc expose deployment -n pgo postgres-operator --type=LoadBalancer\n```\n\nFor the pgo client to communicate with the operator, it needs to know where to connect. Export the service url as the PGO_APISERVER_URL for the pgo client in the shell\n\n```\nexport PGO_APISERVER_URL=https://\u003curl of exposed service\u003e:8443\n```\n\n### Security\n\nWhen postgres operator deploys, it creates a set of certificates the pgo client will need to communicate. \n\n### Client Certificates\n\nCopy the client certificates from the apiserver to the local environment - we use /tmp for this example. \n\n```\noc cp \u003cpgo-namespace\u003e/\u003cpostgres-operator-pod\u003e:/tmp/server.key /tmp/server.key -c apiserver\noc cp \u003cpgo-namespace\u003e/\u003cpostgres-operator-pod\u003e:/tmp/server.crt /tmp/server.crt -c apiserver\n```\n\nConfigure the shell for the pgo command line to use the certificates\n\n```\nexport PGO_CA_CERT=/tmp/server.crt\nexport PGO_CLIENT_CERT=/tmp/server.crt\nexport PGO_CLIENT_KEY=/tmp/server.key\n```\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "pgclusters.crunchydata.com",
                        "version": "v1",
                        "kind": "Pgcluster",
                        "displayName": "Postgres Primary Cluster Member",
                        "description": "Represents a Postgres primary cluster member",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicaSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Status Details",
                            "description": "Explanation for the current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "size",
                            "displayName": "Size",
                            "description": "The desired number of member Pods for the deployment.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "pgreplicas.crunchydata.com",
                        "version": "v1",
                        "kind": "Pgreplica",
                        "displayName": "Postgres Replica Cluster Member",
                        "description": "Represents a Postgres replica cluster member",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicaSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Status Details",
                            "description": "Explanation for the current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "size",
                            "displayName": "Size",
                            "description": "The desired number of member Pods for the deployment.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "pgpolicies.crunchydata.com",
                        "version": "v1",
                        "kind": "Pgpolicy",
                        "displayName": "Postgres SQL Policy",
                        "description": "Represents a Postgres sql policy",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Pgpolicy",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Status Details",
                            "description": "Explanation for the current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "name",
                            "displayName": "Name",
                            "description": "The pgpolicy name.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:name"
                            ]
                          },
                          {
                            "path": "sql",
                            "displayName": "SQL",
                            "description": "The pgpolicy sql.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:sql"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "pgtasks.crunchydata.com",
                        "version": "v1",
                        "kind": "Pgtask",
                        "displayName": "Postgres workflow task",
                        "description": "Represents a Postgres workflow task",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Pgtask",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Status Details",
                            "description": "Explanation for the current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "name",
                            "displayName": "Name",
                            "description": "The pgtask name.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:name"
                            ]
                          },
                          {
                            "path": "tasktype",
                            "displayName": "TaskType",
                            "description": "The pgtask type.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:tasktype"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "pgbackups.crunchydata.com",
                        "version": "v1",
                        "kind": "Pgbackup",
                        "displayName": "Postgres backup task",
                        "description": "Represents a Postgres backup task",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Pgbackup",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Status Details",
                            "description": "Explanation for the current status of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "name",
                            "displayName": "Name",
                            "description": "The pgbackup name.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:name"
                            ]
                          },
                          {
                            "path": "backupstatus",
                            "displayName": "BackupStatus",
                            "description": "The pgbackup status.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:backupstatus"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "prometheus",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/prometheus",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Red Hat",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Red Hat"
            },
            "packageName": "prometheus",
            "channels": [
              {
                "name": "beta",
                "currentCSV": "prometheusoperator.0.27.0",
                "currentCSVDesc": {
                  "displayName": "Prometheus Operator",
                  "icon": [
                    {
                      "base64data": "PHN2ZyB3aWR0aD0iMjQ5MCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+PHBhdGggZD0iTTEyOC4wMDEuNjY3QzU3LjMxMS42NjcgMCA1Ny45NzEgMCAxMjguNjY0YzAgNzAuNjkgNTcuMzExIDEyNy45OTggMTI4LjAwMSAxMjcuOTk4UzI1NiAxOTkuMzU0IDI1NiAxMjguNjY0QzI1NiA1Ny45NyAxOTguNjg5LjY2NyAxMjguMDAxLjY2N3ptMCAyMzkuNTZjLTIwLjExMiAwLTM2LjQxOS0xMy40MzUtMzYuNDE5LTMwLjAwNGg3Mi44MzhjMCAxNi41NjYtMTYuMzA2IDMwLjAwNC0zNi40MTkgMzAuMDA0em02MC4xNTMtMzkuOTRINjcuODQyVjE3OC40N2gxMjAuMzE0djIxLjgxNmgtLjAwMnptLS40MzItMzMuMDQ1SDY4LjE4NWMtLjM5OC0uNDU4LS44MDQtLjkxLTEuMTg4LTEuMzc1LTEyLjMxNS0xNC45NTQtMTUuMjE2LTIyLjc2LTE4LjAzMi0zMC43MTYtLjA0OC0uMjYyIDE0LjkzMyAzLjA2IDI1LjU1NiA1LjQ1IDAgMCA1LjQ2NiAxLjI2NSAxMy40NTggMi43MjItNy42NzMtOC45OTQtMTIuMjMtMjAuNDI4LTEyLjIzLTMyLjExNiAwLTI1LjY1OCAxOS42OC00OC4wNzkgMTIuNTgtNjYuMjAxIDYuOTEuNTYyIDE0LjMgMTQuNTgzIDE0LjggMzYuNTA1IDcuMzQ2LTEwLjE1MiAxMC40Mi0yOC42OSAxMC40Mi00MC4wNTYgMC0xMS43NjkgNy43NTUtMjUuNDQgMTUuNTEyLTI1LjkwNy02LjkxNSAxMS4zOTYgMS43OSAyMS4xNjUgOS41MyA0NS40IDIuOTAyIDkuMTAzIDIuNTMyIDI0LjQyMyA0Ljc3MiAzNC4xMzguNzQ0LTIwLjE3OCA0LjIxMy00OS42MiAxNy4wMTQtNTkuNzg0LTUuNjQ3IDEyLjguODM2IDI4LjgxOCA1LjI3IDM2LjUxOCA3LjE1NCAxMi40MjQgMTEuNDkgMjEuODM2IDExLjQ5IDM5LjYzOCAwIDExLjkzNi00LjQwNyAyMy4xNzMtMTEuODQgMzEuOTU4IDguNDUyLTEuNTg2IDE0LjI4OS0zLjAxNiAxNC4yODktMy4wMTZsMjcuNDUtNS4zNTVjLjAwMi0uMDAyLTMuOTg3IDE2LjQwMS0xOS4zMTQgMzIuMTk3eiIgZmlsbD0iI0RBNEUzMSIvPjwvc3ZnPg==",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.27.0",
                  "provider": {
                    "name": "Red Hat"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"monitoring.coreos.com/v1\",\"kind\":\"Prometheus\",\"metadata\":{\"name\":\"example\",\"labels\":{\"prometheus\":\"k8s\"}},\"spec\":{\"replicas\":2,\"version\":\"v2.7.1\",\"serviceAccountName\":\"prometheus-k8s\",\"securityContext\": {}, \"serviceMonitorSelector\":{},\"ruleSelector\":{},\"alerting\":{\"alertmanagers\":[{\"namespace\":\"monitoring\",\"name\":\"alertmanager-main\",\"port\":\"web\"}]}}},{\"apiVersion\":\"monitoring.coreos.com/v1\",\"kind\":\"ServiceMonitor\",\"metadata\":{\"name\":\"example\",\"labels\":{\"k8s-app\":\"prometheus\"}},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"prometheus\"}},\"endpoints\":[{\"port\":\"web\",\"interval\":\"30s\"}]}},{\"apiVersion\":\"monitoring.coreos.com/v1\",\"kind\":\"Alertmanager\",\"metadata\":{\"name\":\"alertmanager-main\"},\"spec\":{\"replicas\":3, \"securityContext\": {}}},{\"apiVersion\":\"monitoring.coreos.com/v1\",\"kind\":\"PrometheusRule\",\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"prometheus\":\"example\",\"role\":\"alert-rules\"},\"name\":\"prometheus-example-rules\"},\"spec\":{\"groups\":[{\"name\":\"./example.rules\",\"rules\":[{\"alert\":\"ExampleAlert\",\"expr\":\"vector(1)\"}]}]}}]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Monitoring",
                    "certified": "false",
                    "containerImage": "quay.io/coreos/prometheus-operator:v0.27.0",
                    "createdAt": "2019-01-08 16:12:00",
                    "description": "Manage the full lifecycle of configuring and managing Prometheus and Alertmanager servers.",
                    "repository": "https://github.com/coreos/prometheus-operator",
                    "support": "Frederic Branczyk"
                  },
                  "description": "The Prometheus Operator for Kubernetes provides easy monitoring definitions for Kubernetes services and deployment and management of Prometheus instances.\n\nOnce installed, the Prometheus Operator provides the following features:\n\n* **Create/Destroy**: Easily launch a Prometheus instance for your Kubernetes namespace, a specific application or team easily using the Operator.\n\n* **Simple Configuration**: Configure the fundamentals of Prometheus like versions, persistence, retention policies, and replicas from a native Kubernetes resource.\n\n* **Target Services via Labels**: Automatically generate monitoring target configurations based on familiar Kubernetes label queries; no need to learn a Prometheus specific configuration language.\n\n### Other Supported Features\n\n**High availability**\n\nMultiple instances are run across failure zones and data is replicated. This keeps your monitoring available during an outage, when you need it most.\n\n**Updates via automated operations**\n\nNew Prometheus versions are deployed using a rolling update with no downtime, making it easy to stay up to date.\n\n**Handles the dynamic nature of containers**\n\nAlerting rules are attached to groups of containers instead of individual instances, which is ideal for the highly dynamic nature of container deployment.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "prometheuses.monitoring.coreos.com",
                        "version": "v1",
                        "kind": "Prometheus",
                        "displayName": "Prometheus",
                        "description": "A running Prometheus instance",
                        "resources": [
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1beta2"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "replicas",
                            "displayName": "Size",
                            "description": "Desired number of Pods for the cluster",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "ruleSelector",
                            "displayName": "Rule Config Map Selector",
                            "description": "A selector for the ConfigMaps from which to load rule files",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                            ]
                          },
                          {
                            "path": "serviceMonitorSelector",
                            "displayName": "Service Monitor Selector",
                            "description": "ServiceMonitors to be selected for target discovery",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:selector:monitoring.coreos.com:v1:ServiceMonitor"
                            ]
                          },
                          {
                            "path": "serviceAccountName",
                            "displayName": "Service Account",
                            "description": "The ServiceAccount to use to run the Prometheus pods",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:ServiceAccount"
                            ]
                          },
                          {
                            "path": "resources",
                            "displayName": "Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "prometheusrules.monitoring.coreos.com",
                        "version": "v1",
                        "kind": "PrometheusRule",
                        "displayName": "Prometheus Rule",
                        "description": "A Prometheus Rule configures groups of sequentially evaluated recording and alerting rules."
                      },
                      {
                        "name": "servicemonitors.monitoring.coreos.com",
                        "version": "v1",
                        "kind": "ServiceMonitor",
                        "displayName": "Service Monitor",
                        "description": "Configures prometheus to monitor a particular k8s service",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "jobLabel",
                            "displayName": "Job Label",
                            "description": "The label to use to retrieve the job name from",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "endpoints",
                            "displayName": "Endpoints",
                            "description": "A list of endpoints allowed as part of this ServiceMonitor",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:endpointList"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "alertmanagers.monitoring.coreos.com",
                        "version": "v1",
                        "kind": "Alertmanager",
                        "displayName": "Alertmanager",
                        "description": "Configures an Alertmanager for the namespace",
                        "resources": [
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1beta2"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "replicas",
                            "displayName": "Size",
                            "description": "Desired number of Pods for the cluster",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "resources",
                            "displayName": "Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "beta"
          }
        },
        {
          "metadata": {
            "name": "radanalytics-spark",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/radanalytics-spark",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "radanalytics.io",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "radanalytics.io"
            },
            "packageName": "radanalytics-spark",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "sparkoperator.v1.0.2",
                "currentCSVDesc": {
                  "displayName": "Apache Spark Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.0.2",
                  "provider": {
                    "name": "radanalytics.io"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"radanalytics.io/v1\",\n    \"kind\": \"SparkCluster\",\n    \"metadata\": {\n      \"name\": \"my-spark-cluster\"\n    },\n    \"spec\": {\n      \"worker\": {\n        \"instances\": \"2\"\n      },\n      \"master\": {\n        \"instances\": \"1\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"radanalytics.io/v1\",\n    \"kind\": \"SparkApplication\",\n    \"metadata\": {\n      \"name\": \"my-spark-app\"\n    },\n    \"spec\": {\n      \"mainApplicationFile\": \"local:///opt/spark/examples/jars/spark-examples_2.11-2.3.0.jar\",\n      \"mainClass\": \"org.apache.spark.examples.SparkPi\",\n      \"driver\": {\n        \"cores\": 0.2,\n        \"coreLimit\": \"500m\"\n      },\n      \"executor\": {\n        \"instances\": 2,\n        \"cores\": 1,\n        \"coreLimit\": \"1000m\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"radanalytics.io/v1\",\n    \"kind\": \"SparkHistoryServer\",\n    \"metadata\": {\n        \"name\": \"my-history-server\"\n    },\n    \"spec\": {\n        \"type\": \"remoteStorage\",\n        \"expose\": true,\n        \"logDirectory\": \"s3a://my-history-server/\",\n        \"updateInterval\": 10,\n        \"retainedApplications\": 50,\n        \"customImage\": \"quay.io/jkremser/openshift-spark:2.4.0-aws\",\n        \"sparkConfiguration\": [\n          {\n              \"name\": \"spark.hadoop.fs.s3a.impl\",\n              \"value\": \"org.apache.hadoop.fs.s3a.S3AFileSystem\"\n          },\n          {\n              \"name\": \"spark.hadoop.fs.s3a.access.key\",\n              \"value\": \"foo\"\n          },\n          {\n              \"name\": \"spark.hadoop.fs.s3a.secret.key\",\n              \"value\": \"bar\"\n          },\n          {\n              \"name\": \"spark.hadoop.fs.s3a.endpoint\",\n              \"value\": \"http://ceph-nano-0:8000\"\n          }\n        ]\n    }\n  }\n]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Big Data",
                    "certified": "false",
                    "containerImage": "quay.io/radanalyticsio/spark-operator:1.0.2",
                    "createdAt": "2019-01-17 12:00:00",
                    "description": "An operator for managing the Apache Spark clusters and intelligent applications that spawn those clusters.",
                    "repository": "https://github.com/radanalyticsio/spark-operator",
                    "support": "jkremser@redhat.com"
                  },
                  "description": "**Apache Spark** is a unified analytics engine for large-scale data processing. Using this operator you can deploy and manage Spark clusters that run in standalone mode. You can expose the metrics for Prometheus, prepare data for Spark workers or add custom Maven dependencies for your cluster. Operator also supports `SparkApplications` that share the same API with the GCP Spark operator. These applications spawn their own ad-hoc clusters using K8s as the native scheduler.\n\nUsage:\n```\n# create cluster\ncat \u003c\u003cEOF | kubectl create -f -\napiVersion: radanalytics.io/v1\nkind: SparkCluster\nmetadata:\n  name: my-spark-cluster\nspec:\n  worker:\n    instances: 2\nEOF\n```\n\nFor more advanced examples please consult [examples](https://github.com/radanalyticsio/spark-operator/tree/master/examples).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "sparkclusters.radanalytics.io",
                        "version": "v1",
                        "kind": "SparkCluster",
                        "displayName": "Spark Cluster",
                        "description": "Apache Spark cluster",
                        "specDescriptors": [
                          {
                            "path": "worker.instances",
                            "displayName": "Instances",
                            "description": "The desired number of worker instances in the Spark cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "sparkapplications.radanalytics.io",
                        "version": "v1",
                        "kind": "SparkApplication",
                        "displayName": "Spark Application",
                        "description": "Apache Spark application"
                      },
                      {
                        "name": "sparkhistoryservers.radanalytics.io",
                        "version": "v1",
                        "kind": "SparkHistoryServer",
                        "displayName": "Spark History Server",
                        "description": "Server that keeps track of finished Spark jobs"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "redis-enterprise",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/redis-enterprise",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Redis Labs, Inc",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Redis Labs, Inc"
            },
            "packageName": "redis-enterprise",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "redis-enterprise-operator.v0.0.1",
                "currentCSVDesc": {
                  "displayName": "Redis Enterprise",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.0.1",
                  "provider": {
                    "name": "Redis Labs, Inc"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"app.redislabs.com/v1alpha1\",\"kind\":\"RedisEnterpriseCluster\",\"metadata\":{\"name\":\"redis-enterprise\"},\"spec\":{\"nodes\":3,\"persistentSpec\":{\"enabled\":\"true\",\"storageClassName\":\"gp2\"},\"uiServiceType\":\"LoadBalancer\",\"username\":\"admin@acme.com\",\"redisEnterpriseNodeResources\":{\"limits\":{\"cpu\":\"400m\",\"memory\":\"4 Gi\"},\"requests\":{\"cpu\":\"400m\",\"memory\":\"4 Gi\"}},\"redisEnterpriseImageSpec\":{\"imagePullPolicy\":\"IfNotPresent\",\"repository\":\"redislabs/redis\",\"versionTag\":\"5.4.0-19\"}}}]",
                    "capabilities": "Full Lifecycle",
                    "categories": "Database",
                    "certified": "false",
                    "containerImage": "redislabs/operator-internal:562_ee119ea",
                    "createdAt": "2019-02-24 11:35:59",
                    "description": "An operator to run Redis Enterprise Clusters",
                    "support": "Redis Labs"
                  },
                  "description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\n\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements\n* Nodes Per Cluster -  1 node minimum with at least 2 nodes for advanced cluster features\n* RAM - At least 2GB with 4GB recommended \n* Storage - At least 10GB of free space with 20GB recommended  \n* A kubernetes version of 1.8 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "redisenterpriseclusters.app.redislabs.com",
                        "version": "v1alpha1",
                        "kind": "RedisEnterpriseCluster",
                        "displayName": "Redis Enterprise Cluster",
                        "description": "Instance of a Redis Enterprise cluster",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1beta2"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "serviceAccountName",
                            "displayName": "Service Account",
                            "description": "The ServiceAccount to use to run the Prometheus pods",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:ServiceAccount"
                            ]
                          },
                          {
                            "path": "persistentSpec.storageClassName",
                            "displayName": "Storage Class",
                            "description": "Storage class configured for persistent storage",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:core:v1:StorageClass"
                            ]
                          },
                          {
                            "path": "nodes",
                            "displayName": "Redis Nodes",
                            "description": "Number of Redis Nodes",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:text"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "ripsaw",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/ripsaw",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Red Hat Performance",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Red Hat Performance"
            },
            "packageName": "ripsaw",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "ripsaw.v0.1.0",
                "currentCSVDesc": {
                  "displayName": "Ripsaw",
                  "icon": [
                    {
                      "base64data": "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",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.1.0",
                  "provider": {
                    "name": "Red Hat Performance"
                  },
                  "annotations": {
                    "alm-examples": "[{\n\"apiVersion\": \"ripsaw.cloudbulldozer.io/v1alpha1\",\n\"kind\": \"Benchmark\",\n\"metadata\": {\n\"name\": \"example-benchmark\",\n\"namespace\": \"my-ripsaw\"\n},\n\"spec\": {\n\"cleanup\": false,\n\"workload\": {\n   \"name\": \"uperf\",\n   \"args\": {\n      \"hostnetwork\": false,\n      \"pin\": false,\n      \"pin_server\": \"node-0\",\n      \"pin_client\": \"node-1\",\n      \"samples\": 2,\n      \"pair\": 1,\n      \"test_types\": [\n         \"stream\",\n         \"rr\"\n      ],\n      \"protos\": [\n         \"tcp\",\n         \"udp\"\n      ],\n      \"sizes\": [\n         16384,\n         512\n      ],\n      \"runtime\": 10\n   }\n}\n}\n}]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Developer Tools",
                    "certified": "false",
                    "containerImage": "quay.io/repository/benchmark-operator/benchmark-operator",
                    "createdAt": "2019-06-28 06:42:43",
                    "description": "Ripsaw is a benchmark operator to benchmark k8s and certain applications.",
                    "repository": "https://github.com/cloud-bulldozer/ripsaw/",
                    "support": "Red Hat Performance"
                  },
                  "description": "[Ripsaw](https://github.com/cloud-bulldozer/ripsaw/) is a benchmarking tool to benchmark your kubernetes cluster. Ripsaw fully supports running following:\n* Micro-benchmarks:\n  * [fio](https://github.com/cloud-bulldozer/ripsaw/tree/master/docs/fio_distributed.md)\n  * [uperf](https://github.com/cloud-bulldozer/ripsaw/tree/master/docs/uperf.md)\n* Application-benchmarks:\n  * [ycsb](https://github.com/cloud-bulldozer/ripsaw/tree/master/docs/ycsb.md)\n  * [pgbench](https://github.com/cloud-bulldozer/ripsaw/tree/master/docs/pgbench.md)\nYou can also run following benchmarks through Ripsaw, but it'll be missing certain functionalities such as indexing to Elasticsearch, or running multiple samples:\n* [iperf3](https://github.com/cloud-bulldozer/ripsaw/tree/master/docs/iperf.md)\n* [sysbench](https://github.com/cloud-bulldozer/ripsaw/blob/master/docs/sysbench.md)\n* [byowl](https://github.com/cloud-bulldozer/ripsaw/blob/master/docs/byowl.md)\n\nYou can use Ripsaw for:\n* Getting benchmark data from your current cluster classification\n* Making a performance driven decision from data Ripsaw provides, on choices such as:\n  * Which distribution to use\n  * Which platform to deploy the k8s cluster on\n  * Which storage class to provision storage volumes\n* Getting an estimate of expected network/ storage performance data\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "benchmarks.ripsaw.cloudbulldozer.io",
                        "version": "v1alpha1",
                        "kind": "Benchmark",
                        "displayName": "Benchmark",
                        "description": "The type of benchmark for Ripsaw to be run"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "robin-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/robin-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Robin.io",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Robin.io"
            },
            "packageName": "robin-operator",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "robin-operator.v5.1.1",
                "currentCSVDesc": {
                  "displayName": "Robin Storage",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "5.1.1",
                  "provider": {
                    "name": "Robin.io"
                  },
                  "annotations": {
                    "alm-examples": "[{ \"apiVersion\": \"robin.io/v1alpha1\", \"kind\": \"RobinCluster\", \"metadata\": { \"name\": \"robin\", \"namespace\": \"placeholder\" }, \"spec\": { \"host_type\": \"physical\", \"image_robin\": \"robinsys/robin-storage:5.1.1\", \"k8s_provider\": \"openshift\", \"source\": \"operatorhub\", \"image_provisioner_v04\": \"robinsys/csi-provisioner:v0.4.1_robin\", \"image_provisioner_v10\": \"robinsys/csi-provisioner:v1.0.0_robin\"} } ]",
                    "capabilities": "Full Lifecycle",
                    "categories": "Database,Big Data,Storage",
                    "certified": "true",
                    "containerImage": "robinsys/robin-operator:5.1.1",
                    "createdAt": "2019-05-06 14:00:00",
                    "description": "Robin Storage operator enables advanced data management capabilities to Kubernetes apps like snapshot,clone,rollback,backup,restore,import,etc.",
                    "support": "https://robin.io/support/"
                  },
                  "description": "ROBIN Storage is an application-aware container storage that offers advanced data management capabilities and runs natively on any Kubernetes distribution including OpenShift, GKE, PKS, EKS, and AKS. ROBIN Storage delivers bare-metal performance and enables you to Protect (via Snapshots, Backups), Secure (via encryption), Collaborate (via Clones and git like push/pull workflows), and make Portable (via Cloud-sync) any Stateful application that is deployed using Helm Charts or Operators.\n\nThe ROBIN Storage Operator provides virtualized storage backed by the pool to all cluster members in a global namespace. ROBIN Storage is available FREE for up to 30 days, with no restrictions on nodes or storage capacity. For more information visit [get.robin.io](https://get.robin.io)\n### Supported Features\n \n* **Enterprise-class data services** - such as inline compression, thin provisioning and data-at-rest/at-motion encryption\n* **Day 2 management capabilities** - such as point-in-time snapshots, backup \u0026 recovery, app cloning, \u0026 multi-cloud migration\n* **Data protection** - Replicate ROBIN volumes synchronously up to 3 copies\n* **Quality of service** - Set maximum IO bandwidth for each volume to address the “noisy neighbors” problem\n* **Rapid volume failover** - Re-attach ROBIN volumes immediately when a pod is rescheduled to another node, irrespective of where the data is located within the cluster\n* **Works with any infrastructure** - on-premises, VM, bare metal or cloud\n* **Scale on demand** - Scale up or scale out storage based on application requirements\n\n\n### About Robin.io\nROBIN brings advanced storage and data management that extends the Agility, Efficiency and Portability of Kubernetes to All Stateful Applications, even complex Big Data, Databases, AI/ML and Custom Apps, on Any Infrastructure, On-Premise, Hybrid Cloud or Multi-Cloud\n\nEnterprise customers are realizing unparalleled agility and cost benefits by running Stateful workloads such as Cloudera, Hortonworks, Spark, Mongo, Cassandra, Kafka, Postgres, MySQL, Elastic, ELK, Splunk, Oracle, Oracle RAC, SAP HANA, etc. on Kubernetes using ROBIN.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "robinclusters.robin.io",
                        "version": "v1alpha1",
                        "kind": "RobinCluster",
                        "displayName": "Robin Cluster",
                        "description": "Robin storage operator brings advanced data management capabilities for all apps including helm charts.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "RobinCluster",
                            "version": "v1alpha1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ServiceAccount",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Node",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "master_ip",
                            "displayName": "Robin Master IP",
                            "description": "IP of current Robin master",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:masterIP"
                            ]
                          },
                          {
                            "path": "connect_command",
                            "displayName": "Connect Command",
                            "description": "Command to Connect to Robin Master",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:connectCommand"
                            ]
                          },
                          {
                            "path": "get_robin_client",
                            "displayName": "Get Robin Client",
                            "description": "Command to Download Robin Master",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:getRobinClient"
                            ]
                          },
                          {
                            "path": "pod_status",
                            "displayName": "Pod Status",
                            "description": "The status of each of the Pods for the Robin cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                            ]
                          },
                          {
                            "path": "robin_node_status",
                            "displayName": "Robin Node Status",
                            "description": "The status of each of the Robin nodes in the cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:robinNodeStatuses"
                            ]
                          },
                          {
                            "path": "phase",
                            "displayName": "Phase",
                            "description": "Phase of the Robin cluster",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:phase"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "host_type",
                            "displayName": "Host Type",
                            "description": "Type of the host, valid values physical, ec2, azure, gcp",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "image_robin",
                            "displayName": "Robin Image",
                            "description": "Robin Storage container image e.g, robinsys/robin-storage:5.1.1",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "image_provisioner_v04",
                            "displayName": "Provisioner Image V0.4",
                            "description": "CSI Provisioner Image for k8s versions 1.11 and 1.12",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "image_provisioner_v10",
                            "displayName": "Provisioner Image V1.0",
                            "description": "CSI Provisioner Image for k8s versions 1.13",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "node_selector",
                            "displayName": "Node selector",
                            "description": "Node selector to select nodes on which Robin is to be deployed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "k8s_provider",
                            "displayName": "Kubernetes Provider",
                            "description": "Kubernetes provider, allowed values openshift",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "source",
                            "displayName": "Deployment source",
                            "description": "Robin deployment mode, allowed values operatorhub",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "options",
                            "displayName": "Options",
                            "description": "Options, refer to the Robin documentation to get details about various options",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "rook-ceph",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/rook-ceph",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "The Rook Authors",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "The Rook Authors"
            },
            "packageName": "rook-ceph",
            "channels": [
              {
                "name": "beta",
                "currentCSV": "rook-ceph.v1.0.1",
                "currentCSVDesc": {
                  "displayName": "Rook-Ceph",
                  "icon": [
                    {
                      "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIzLjAuMiwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA3MCA3MCIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgNzAgNzA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCS5zdDB7ZmlsbDojMkIyQjJCO30KPC9zdHlsZT4KPGc+Cgk8Zz4KCQk8Zz4KCQkJPHBhdGggY2xhc3M9InN0MCIgZD0iTTUwLjUsNjcuNkgxOS45Yy04LDAtMTQuNS02LjUtMTQuNS0xNC41VjI5LjJjMC0xLjEsMC45LTIuMSwyLjEtMi4xaDU1LjRjMS4xLDAsMi4xLDAuOSwyLjEsMi4xdjIzLjkKCQkJCUM2NSw2MS4xLDU4LjUsNjcuNiw1MC41LDY3LjZ6IE05LjYsMzEuMnYyMS45YzAsNS43LDQuNiwxMC4zLDEwLjMsMTAuM2gzMC42YzUuNywwLDEwLjMtNC42LDEwLjMtMTAuM1YzMS4ySDkuNnoiLz4KCQk8L2c+CgkJPGc+CgkJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik00Mi40LDU2LjdIMjhjLTEuMSwwLTIuMS0wLjktMi4xLTIuMXYtNy4yYzAtNS4xLDQuMi05LjMsOS4zLTkuM3M5LjMsNC4yLDkuMyw5LjN2Ny4yCgkJCQlDNDQuNSw1NS43LDQzLjYsNTYuNyw0Mi40LDU2Ljd6IE0zMCw1Mi41aDEwLjN2LTUuMmMwLTIuOS0yLjMtNS4yLTUuMi01LjJjLTIuOSwwLTUuMiwyLjMtNS4yLDUuMlY1Mi41eiIvPgoJCTwvZz4KCQk8Zz4KCQkJPHBhdGggY2xhc3M9InN0MCIgZD0iTTYyLjksMjMuMkM2Mi45LDIzLjIsNjIuOSwyMy4yLDYyLjksMjMuMmwtMTEuMSwwYy0xLjEsMC0yLjEtMC45LTIuMS0yLjFjMC0xLjEsMC45LTIuMSwyLjEtMi4xCgkJCQljMCwwLDAsMCwwLDBsOS4xLDBWNi43aC02Ljl2My41YzAsMC41LTAuMiwxLjEtMC42LDEuNWMtMC40LDAuNC0wLjksMC42LTEuNSwwLjZsMCwwbC0xMS4xLDBjLTEuMSwwLTIuMS0wLjktMi4xLTIuMVY2LjdoLTYuOQoJCQkJdjMuNWMwLDEuMS0wLjksMi4xLTIuMSwyLjFsLTExLjEsMGMtMC41LDAtMS4xLTAuMi0xLjUtMC42Yy0wLjQtMC40LTAuNi0wLjktMC42LTEuNVY2LjdIOS42djEyLjRoOWMxLjEsMCwyLjEsMC45LDIuMSwyLjEKCQkJCXMtMC45LDIuMS0yLjEsMi4xaC0xMWMtMS4xLDAtMi4xLTAuOS0yLjEtMi4xVjQuNmMwLTEuMSwwLjktMi4xLDIuMS0yLjFoMTEuMWMxLjEsMCwyLjEsMC45LDIuMSwyLjF2My41bDcsMFY0LjYKCQkJCWMwLTEuMSwwLjktMi4xLDIuMS0yLjFoMTEuMWMxLjEsMCwyLjEsMC45LDIuMSwyLjF2My41bDYuOSwwVjQuNmMwLTEuMSwwLjktMi4xLDIuMS0yLjFoMTEuMUM2NCwyLjYsNjUsMy41LDY1LDQuNnYxNi41CgkJCQljMCwwLjUtMC4yLDEuMS0wLjYsMS41QzY0LDIzLDYzLjQsMjMuMiw2Mi45LDIzLjJ6Ii8+CgkJPC9nPgoJPC9nPgo8L2c+Cjwvc3ZnPg==",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "1.0.1",
                  "provider": {
                    "name": "The Rook Authors"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"ceph.rook.io/v1\",\n    \"kind\": \"CephCluster\",\n    \"metadata\": {\n      \"name\": \"my-rook-ceph\",\n      \"namespace\": \"my-rook-ceph\"\n    },\n    \"spec\": {\n      \"cephVersion\": {\n        \"image\": \"ceph/ceph:v14.2.1-20190430\"\n      },\n      \"dataDirHostPath\": \"/var/lib/rook\",\n      \"mon\": {\n        \"count\": 3\n      },\n      \"dashboard\": {\n        \"enabled\": true\n      },\n      \"network\": {\n        \"hostNetwork\": false\n      },\n      \"rbdMirroring\": {\n        \"workers\": 0\n      },\n      \"storage\": {\n        \"useAllNodes\": true,\n        \"useAllDevices\": true\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"ceph.rook.io/v1\",\n    \"kind\": \"CephBlockPool\",\n    \"metadata\": {\n      \"name\": \"replicapool\",\n      \"namespace\": \"my-rook-ceph\"\n    },\n    \"spec\": {\n      \"failureDomain\": \"host\",\n      \"replicated\": {\n        \"size\": 3\n      },\n      \"annotations\": null\n    }\n  },\n  {\n    \"apiVersion\": \"ceph.rook.io/v1\",\n    \"kind\": \"CephObjectStore\",\n    \"metadata\": {\n      \"name\": \"my-store\",\n      \"namespace\": \"my-rook-ceph\"\n    },\n    \"spec\": {\n      \"metadataPool\": {\n        \"failureDomain\": \"host\",\n        \"replicated\": {\n          \"size\": 3\n        }\n      },\n      \"dataPool\": {\n        \"failureDomain\": \"host\",\n        \"replicated\": {\n          \"size\": 3\n        }\n      },\n      \"gateway\": {\n        \"type\": \"s3\",\n        \"sslCertificateRef\": null,\n        \"port\": 8080,\n        \"securePort\": null,\n        \"instances\": 1,\n        \"allNodes\": false,\n        \"placement\": null,\n        \"annotations\": null,\n        \"resources\": null\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"ceph.rook.io/v1\",\n    \"kind\": \"CephObjectStoreUser\",\n    \"metadata\": {\n      \"name\": \"my-user\",\n      \"namespace\": \"my-rook-ceph\"\n    },\n    \"spec\": {\n      \"store\": \"my-store\",\n      \"displayName\": \"my display name\"\n    }\n  }\n]",
                    "capabilities": "Full Lifecycle",
                    "categories": "Storage",
                    "certified": "false",
                    "containerImage": "rook/ceph:v1.0.1",
                    "createdAt": "2019-05-16T22-53-57Z",
                    "description": "Install and maintain Ceph Storage cluster",
                    "repository": "https://github.com/rook/rook",
                    "support": "https://slack.rook.io/",
                    "tectonic-visibility": "ocs"
                  },
                  "description": "\nThe Rook-Ceph storage operator packages, deploys, manages, upgrades and scales Ceph storage for providing persistent storage to infrastructure services (Logging, Metrics, Registry) as well as stateful applications in Kubernetes clusters.\n\n## Rook-Ceph Storage Operator\n\nRook runs as a cloud-native service in Kubernetes clusters for optimal integration with applications in need of storage, and handles the heavy-lifting behind the scenes such as provisioning and management.\nRook orchestrates battle-tested open-source storage technology Ceph, which has years of production deployments and runs some of the worlds largest clusters.\n\nCeph is a massively scalable, software-defined, cloud native storage platform that offers block, file and object storage services.\nCeph can be used to back a wide variety of applications including relational databases, NoSQL databases, CI/CD tool-sets, messaging, AI/ML and analytics applications.\nCeph is a proven storage platform that backs some of the world's largest storage deployments and has a large vibrant open source community backing the project.\n\n## Supported features\n* **High Availability and resiliency** - Ceph has no single point of failures (SPOF) and all its components work natively in a highly available fashion\n* **Data Protection** - Ceph periodically scrub for inconsistent objects and repair them if necessary, making sure your replicas are always coherent\n* **Consistent storage platform across hybrid cloud** - Ceph can be deployed anywhere (on-premise or bare metal) and thus offers a similar experience regardless\n* **Block, File \u0026 Object storage service** - Ceph can expose your data through several storage interfaces, solving all the application use cases\n* **Scale up/down** - addition and removal of storage is fully covered by the operator.\n* **Dashboard** - The Operator deploys a dashboard for monitoring and introspecting your cluster.\n\n## Before you start\nhttps://rook.io/docs/rook/v1.0/k8s-pre-reqs.html\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "cephclusters.ceph.rook.io",
                        "version": "v1",
                        "kind": "CephCluster",
                        "displayName": "Ceph Cluster",
                        "description": "Represents a Ceph cluster."
                      },
                      {
                        "name": "cephblockpools.ceph.rook.io",
                        "version": "v1",
                        "kind": "CephBlockPool",
                        "displayName": "Ceph Block Pool",
                        "description": "Represents a Ceph Block Pool."
                      },
                      {
                        "name": "cephobjectstores.ceph.rook.io",
                        "version": "v1",
                        "kind": "CephObjectStore",
                        "displayName": "Ceph Object Store",
                        "description": "Represents a Ceph Object Store."
                      },
                      {
                        "name": "cephobjectstoreusers.ceph.rook.io",
                        "version": "v1",
                        "kind": "CephObjectStoreUser",
                        "displayName": "Ceph Object Store User",
                        "description": "Represents a Ceph Object Store User."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "beta"
          }
        },
        {
          "metadata": {
            "name": "rook-edgefs",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/rook-edgefs",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "The Rook Authors",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "The Rook Authors"
            },
            "packageName": "rook-edgefs",
            "channels": [
              {
                "name": "beta",
                "currentCSV": "rook-edgefs.v1.0.1",
                "currentCSVDesc": {
                  "displayName": "Rook-EdgeFS",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.0.1",
                  "provider": {
                    "name": "The Rook Authors"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"edgefs.rook.io/v1beta1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"my-rook-edgefs\",\n      \"namespace\": \"my-rook-edgefs\"\n    },\n    \"spec\": {\n      \"edgefsImageName\": \"edgefs/edgefs:1.1.18\",\n      \"serviceAccount\": \"rook-edgefs-cluster\",\n      \"dataDirHostPath\": \"/var/lib/edgefs\",\n      \"storage\": {\n        \"useAllDevices\": false,\n        \"useAllNodes\": true,\n        \"directories\": [{\"path\": \"/mnt/disks/disk1\"}, {\"path\": \"/mnt/disks/disk2\"}, {\"path\": \"/mnt/disks/disk3\"}]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"edgefs.rook.io/v1\",\n    \"kind\": \"ISCSI\",\n    \"metadata\": {\n      \"name\": \"iscsi01\",\n      \"namespace\": \"my-rook-edgefs\"\n    },\n    \"spec\": {\n      \"annotations\": null\n    }\n  },\n  {\n    \"apiVersion\": \"edgefs.rook.io/v1\",\n    \"kind\": \"ISGW\",\n    \"metadata\": {\n      \"name\": \"isgw01\",\n      \"namespace\": \"my-rook-edgefs\"\n    },\n    \"spec\": {\n      \"direction\": \"send+receive\",\n      \"remoteURL\": \"ccow://192.168.1.43:14000\"\n    }\n  },\n  {\n    \"apiVersion\": \"edgefs.rook.io/v1\",\n    \"kind\": \"NFS\",\n    \"metadata\": {\n      \"name\": \"nfs01\",\n      \"namespace\": \"my-rook-edgefs\"\n    },\n    \"spec\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"edgefs.rook.io/v1\",\n    \"kind\": \"S3\",\n    \"metadata\": {\n      \"name\": \"s301\",\n      \"namespace\": \"my-rook-edgefs\"\n    },\n    \"spec\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"edgefs.rook.io/v1\",\n    \"kind\": \"S3X\",\n    \"metadata\": {\n      \"name\": \"s3x01\",\n      \"namespace\": \"my-rook-edgefs\"\n    },\n    \"spec\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"edgefs.rook.io/v1\",\n    \"kind\": \"SWIFT\",\n    \"metadata\": {\n      \"name\": \"swift01\",\n      \"namespace\": \"my-rook-edgefs\"\n    },\n    \"spec\": {\n      \"instances\": 1\n    }\n  }\n]",
                    "capabilities": "Full Lifecycle",
                    "categories": "Storage",
                    "certified": "false",
                    "containerImage": "rook/edgefs:v1.0.1",
                    "createdAt": "2019-05-16T22-53-57Z",
                    "description": "Install and maintain EdgeFS Storage cluster",
                    "repository": "https://github.com/rook/rook",
                    "support": "https://slack.rook.io/",
                    "tectonic-visibility": "ocs"
                  },
                  "description": "\nThe Rook-EdgeFS storage operator packages, deploys, manages, upgrades and scales EdgeFS storage for providing persistent storage to infrastructure services (Logging, Metrics, Registry) as well as stateful applications in Kubernetes clusters.\n\n## Rook-EdgeFS Storage Operator\n\nRook runs as a cloud-native service in Kubernetes clusters for optimal integration with applications in need of storage, and handles the heavy-lifting behind the scenes such as provisioning and management.\nRook orchestrates innovating, next generation clould-connecting storage solution EdgeFS.\n\nEdgeFS is high-performance, low latency and fault-tolerant object storage system with Geo-Transparent data access to file, block or object.\n\nEdgeFS is capable of spanning unlimited number of geographically distributed sites (Geo-site), connected with each other as one global name space data fabric running on top of Kubernetes platform, providing persistent, fault-tolerant and high-performance volumes for stateful Kubernetes Applications.\n\nAt each Geo-site, EdgeFS nodes deployed as containers (StatefulSet) on physical or virtual Kubernetes nodes, pooling available storage capacity and presenting it via compatible S3/NFS/iSCSI/etc storage emulated protocols for cloud-native applications running on the same or dedicated servers.\n\nEdgeFS can utilize local node directories or raw block disks, and capable of running on top of existing SAN/NVMe Fabric.\n\n## Supported features\n* **Geo-Scalable** - EdgeFS spans unlimited number of geographically distributed sites, connected as one global Geo-Transparent data layer.\n* **Multi-Cloud Transparency** - EdgeFS can stitch AWS S3, GS, Azure Blob and on-prem clouds together, presenting synchronized S3 dataset in very cost effective way (cacheable dynamic data fetch).\n* **Multi-Purpose** - Outstanding performance characteristics for variety of deployment use cases: HDD-only, SSD/HDD hybrid and SSD/NVMe only.\n* **Multi-Protocol** - EdgeFS can expose your data through several storage interfaces, solving all the application use cases\n* **High Performance** - EdgeFS enables high throughput and low latency access for stateful applications via standard storage protocols (NFS, S3 and iSCSI).\n* **High Availability and Resiliency** - EdgeFS has no single point of failures (SPOF) and all its components work natively in a highly available fashion\n* **Data Protection** - Data placement is replicated and offline erasure encoded. Fault-tolerant with built-in self healing and advanced snapshotting capabilities.\n* **Consistent storage platform across hybrid cloud** - EdgeFS can be deployed anywhere (on-premise or bare metal) and thus offers a similar experience regardless\n* **Scale out** - addition of storage is fully covered by the operator.\n* **GUI and CRD Wizards** - The Operator deploys an easy of use GUI for monitoring your cluster and Service CRD Wizard Editor.\n\n## Before you start\nhttps://rook.io/docs/rook/v1.0/edgefs-quickstart.html\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "clusters.edgefs.rook.io",
                        "version": "v1beta1",
                        "kind": "Cluster",
                        "displayName": "EdgeFS Cluster",
                        "description": "Represents a EdgeFS cluster."
                      },
                      {
                        "name": "nfss.edgefs.rook.io",
                        "version": "v1beta1",
                        "kind": "NFS",
                        "displayName": "EdgeFS NFS Service",
                        "description": "Represents a EdgeFS NFS service."
                      },
                      {
                        "name": "iscsis.edgefs.rook.io",
                        "version": "v1beta1",
                        "kind": "ISCSI",
                        "displayName": "EdgeFS ISCSI Service",
                        "description": "Represents a EdgeFS ISCSI service."
                      },
                      {
                        "name": "isgws.edgefs.rook.io",
                        "version": "v1beta1",
                        "kind": "ISGW",
                        "displayName": "EdgeFS ISGW Service",
                        "description": "Represents a EdgeFS ISGW service."
                      },
                      {
                        "name": "s3s.edgefs.rook.io",
                        "version": "v1beta1",
                        "kind": "S3",
                        "displayName": "EdgeFS S3 Service",
                        "description": "Represents a EdgeFS S3 service."
                      },
                      {
                        "name": "s3xs.edgefs.rook.io",
                        "version": "v1beta1",
                        "kind": "S3X",
                        "displayName": "EdgeFS S3X Service",
                        "description": "Represents a EdgeFS S3X service."
                      },
                      {
                        "name": "swifts.edgefs.rook.io",
                        "version": "v1beta1",
                        "kind": "SWIFT",
                        "displayName": "EdgeFS SWIFT Service",
                        "description": "Represents a EdgeFS SWIFT service."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "beta"
          }
        },
        {
          "metadata": {
            "name": "seldon-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/seldon-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Seldon Technologies",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Seldon Technologies"
            },
            "packageName": "seldon-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "seldonoperator.v0.1.5",
                "currentCSVDesc": {
                  "displayName": "Seldon Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/jpeg"
                    }
                  ],
                  "version": "0.1.5",
                  "provider": {
                    "name": "Seldon Technologies"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\": \"machinelearning.seldon.io/v1alpha2\",\"kind\": \"SeldonDeployment\",\"metadata\": {\"labels\": {\"app\": \"seldon\"},\"name\": \"seldon-model\"},\"spec\": {\"name\": \"test-deployment\",\"oauth_key\": \"oauth-key\",\"oauth_secret\": \"oauth-secret\",\"predictors\": [{\"componentSpecs\": [{\"spec\": {\"containers\": [{\"image\": \"seldonio/mock_classifier:1.0\",\"imagePullPolicy\": \"IfNotPresent\",\"name\": \"classifier\",\"resources\": {\"requests\": {\"memory\": \"1Mi\"}}}],\"terminationGracePeriodSeconds\": 1}}],\"graph\": {\"children\": [],\"name\": \"classifier\",\"endpoint\": {\"type\" : \"REST\"},\"type\": \"MODEL\"},\"name\": \"example\",\"replicas\": 1,\"labels\": {\"version\" : \"v1\"}}]}}]",
                    "capabilities": "Seamless Upgrades",
                    "categories": "Logging \u0026 Tracing",
                    "certified": "false",
                    "containerImage": "seldonio/seldon-core-operator:0.4.0",
                    "createdAt": "2019-05-21 15:00:00",
                    "description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
                    "repository": "https://github.com/SeldonIO/seldon-operator",
                    "support": "Clive Cox"
                  },
                  "description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "seldondeployments.machinelearning.seldon.io",
                        "version": "v1alpha2",
                        "kind": "SeldonDeployment",
                        "displayName": "Seldon Delpoyment",
                        "description": "A seldon engine deployment"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "sematext",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/sematext",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Sematext",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Sematext"
            },
            "packageName": "sematext",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "sematext-operator.v1.0.9",
                "currentCSVDesc": {
                  "displayName": "Sematext Operator",
                  "icon": [
                    {
                      "base64data": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEwAACxMBAJqcGAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAACAASURBVHic7Z13dBXF28efmd29Pb0TkgAJvRepAlJURESxi1JUsCtYXxX9YUUFC3ZU7IgUKTakd6R3kJZAQnpvt+7uzLx/hMTcmksSDBfmc47nYJK9d3Z3vjNPmxnEGLMAh8PxCG7qBnA4FzNcIByOD7hAOBwfcIFwOD7gAuFwfMAFwuH4gAuEw/EBFwiH4wMuEA7HB1wgHI4PuEA4HB9wgXA4PuAC4XB8wAXC4fiAC4TD8QEXCIfjAy4QDscHXCAcjg+4QDgcH3CBcDg+4ALhcHzABcLh+IALhMPxARcIh+MDLhAOxwdcIByOD7hAOBwfcIFwOD7gAuFwfMAFwuH4gAuEw/EBFwiH4wMuEA7HB1wgHI4PuEA4HB+ITd0AjncIIUAIAQAAVVVBURRU/XNXJEkCSZKYJEkgCMJ/29BLGC6QiwRKKVRUVKB/MovQ/vQSnJZvxpkVMiqzU0AIgVkBlFdBkEIZWBSKKKu6Tith0IuYRegRizGJLFIP0CJMSzs1D6XdW0awuIhQajQaASHUtDcYoCB+ym3ToigKHE/PwV+sPyVuSHcI2VaEkKgFwA2ZBRgAUQGIA9qHYzqohZ6O6pGo9kiOowaDodHafjnABdJEUEph/8mz+JN1p6Q/Ux2CIhgBLtgoz4DJNugRyejkAc3VG/u2VrlQ/IMLpAmwWq0wZ+UB6YO/y0QzMvyntg9THNAxVKHTRrRSrunVhogit7J9wQXyH5OdX4ge+2GPZmOuKIAgNVk7RNUCj10RrDw3ppei1+ubrB0XO1wg/yHpWXl44rd7NAfLDRhQ00fYmSrD2HZYfW/8AJmLxDNN/5YuEzJzC9HYL3drDpYbLwpxAAAgUQPzj1Px9V92ahRFaermXJRcHG/qEsdms8GUn3ZrjlmN+MI54vUDiRqYs9cqLt/2D0+eeIAL5AJDCIHZv+2TNuRIwsUyc7jCJAO8vzFLKi+vvLjUexFwcb6xS4jdxzPwhzvLpaZ0yP3heIUGL9l+gs8iLnCBXEDMZgu8uPQfjUMIgJyDIMEvBwsFh8PR1C25qOACuYAs3HJM3FcsBcwz3p2rCqcy8wOmvf8F/GFcIMxmM3yzM09Ekrapm+I3qmiCH7ekiYyxpm7KRQMXyAXit12p4tGywJk9AAAAIVh3xoKtVmtTt+SiIbBeYIDgcDhg4b48IZBmj2rSygEfP1vI+8U5+IO4AJzIyMPbMtXAjAhJBvhj/9nAbPsFgAukkWGMweKd6QKRAiBy5QmEYV+OFcuy3NQtuSjgAmlkrFYrbEi3XLRJQX84UUSwzWbjSUPgAml0MvJL8LFiFtDPNd9KUXG5hQsEuEAanbWHczAVdE3djAbBsAjZ5XwGAeACaVQopXAwq1xo2HLZiwCEoajc3tStuCjgAvECIQTKy8uRxWIBfxNndrsdjhWpl8DIi8ChkEvgPhoOF8g5VFWt+TchBHb+cwb3eH2jrs8bG/VLNh8W/BFJcXklOlVCA/+ZMgbBRomn04Fv+wOMMdi4/6Tw1ebT4k3dmqlpBWa8N7MCnyxRUQkEIVAxTFtxVrPpRAF5eHhbtV2LeIqxZw3sP12MFSRBwA+9jECoQcsAqkpmVh/IENrHh7DYUCMrNduRJGJm0IhgMBiYTqe7pLcUuuwFkpVXgCbMO6GpFILRijPZAhI1APjc8tNz772AmtC8U0xcfvyA8MmYMnn0lZ2Ip05xKr8cI/HiLmv3ByMmrHVsCCspLUU3f7JNe6BYwuHSGcYYg1JH1VMxiIh1jRVp9zgtu6tfS7VtUjOq0WiauumNTuCbAw2EUQoqrfo30hgAsLcxA4FZCEJTlqdr0s7menxumcVWFMj5j2o6RQtUFDB8seYf8UCxiJGkhVIwoTKqQwgBhGsRC9MhOFWs4m/3VYhD3/tbN+Hj1Vqz2dzUTW90LusZxGKxwpMLDmpsosl9OqAEmHpubQQWAIlVdVXlyITmrDsuzro3Tq49i6iqCjlmFQEEeASLUcguseJJc//WrMsRBSTpAIgKbYNs9O4e0WR4l/akWXgQA6gyTyml4FAI2GQVabWBV3tWF5elQAghsP9kJl6+N0NYny0IINQe9RmEg4U90j9cvbpLCmEM4ODZEvzplizxpNWEASHYmG7DFosFTCYTAFStObdarajEFvh+LSMKZIsRKLsABCQiAKLC3W2ROuPuIXLwufv1dul/1cb/kstSIAdOZeKRcw7qZKQFJDkn9YzEwn6Y2M7Rv3MyrY5cdW2TRGWFwLNryzSARbAqDDHGkMViZZ+u2C+tTa3EBVaCci0YB/QEQlXoFWYje0qgphI5US+z12/vr9QhjkuWy1Igy/ZkCIoU7B59YRQm9ghS+3VqRRFC8PP6A+Lu9FJ8Q/cE8vO+fAGwEQAYdIgSqdlqh0d/3KPdkCMJUJ05D2RxAINOIXZ6e7cosmeDpeZOtCIwjebyDfkGvkdZD0Z1TyBYcd8vD8kWGHdlMqkO44qSCN8esos3/5Cq3VdmEIBRSNSY6fMjkpWXlxzQbMjVCCA08hjDaNV//ykMEjRm+sU9XeUThQ6MxH+jUSfLMZ634ajo6ciFy4HLcgYxaUUgDLnlK+JMmDWLCKkZLW+4IkV9MK0I/5VqE0xaOxuYoKWPjeitnMgpxUtPKgI0Ykm7hlhgWKJAeiSEUBEjOJxTgdecUXAlMiC4kJkVqkLXUDv9/J7ucrBBy7ZmWDHAv+YUknQwfX2RRhL2wbjh3VRJCvww9vlwWQokp8yGPNVLaUXEEEI1AtHr9TBj/CD5JasVIYSYwWAAjDG8+8cRgTWiOBI1Zvr5ne3k3u1b0OrNpCmlcDIjGz8y75Bmf4UBN7pIGAM9tcD4rib1/24cqISFhrDNB1OFkxUYg4sGHIIBnl1dqCmz7kKPj+6tXE4iuSxNLI2IwVPQpcBMkN3hcOqJgiBAUFAQM5lMgDEGVVUhq7Lx6q0k1QIf395W6d85hdbeaR1jDO1aJtA547vJ4WBpVB9AUCxwQ5JMVj/SxT5j3CA5LLRq1uzdtjkZnoQJs5UDUNXpGioaYMbWcumHtQdFSv9rE7DpuCwFkhwTTEWmuv3czDRo/eEsn88EIQS6RnTGhyUJpH/HluRIjhnXLveijMGhbDNundiM3t7ZRKDBO40wEBUzDIu1kcXjUxxfPzTU0Skl0alsRqfTwVf3X+nY99wV9sGxMgHq7HcQ0QCvrc2TjqdnXzb95rI0saLCQliPWIHsLnGOOyFRCzPWZkqdkyJY+5bNPQ6TgiBASqSeQqba8FWDjEG3+CAqiiJM/eWkJrfSgbrGmyhlAIdzzLhTnJEuvK+Lo09yFPl8f5ZYnaw8r69QHBCrU9k1rfTk/qs6q+1bxPksCQkNNkFosIl+eZ9OvvPz7Zr95UanZ1SBjeidP49Jcx+KdVwOptZlMxLURqfTwW1dowlT3dddZziM+NavDmp/XLNPLCktRZ6iN7f1aUEk0hhb4zAQzyUpO8cbaU6ZA/11tFhY9U+xkFPmQN2bB1EAABEj/9NwRAWDWsn6RdrIpPZUnX9Hc8f2/xtgnz3pKrlrmyS/66WiI8LZs9e0VJniui4EwarTspBXVHLpVijW4rKcQQAAxg5ury46sFHYUyoJzg4wghzFiJ74q1jz5rpcdkW8RDvHGWirqGAaH2FkGGNIiDCxO9sb1B9PELFBi6MQhn9yKzEhBF6+rpWSVeZAG0+WCggBjOocRaYMSVQAAPafKfZdBMkYgGyG7lGIjuoYTm7t21mNjQxjDS0ebBUdzFx9EQAAO5PgYEYxToiLueRjv5etQIxGI7x3a0fl5rlHcDHzUIslSJBPJPTHWRD+OKsIQPKBUQJACTx6hUl9eGhL9ZejBwWbJrRBI+nKNBkfO5ONO6Uk0sX3d3E4VAoYIZCEqo/NKShCi46Ui4C8ZLJtZXBzWy25/6p2SveU5rQxD8I5XVCJPBZvIgSVtkthYVjdXJYmVjWdWyfRj8e0lEOYuQ4DBgEIEiBJB0hrhIVHzMLkn45qbFJwgzuJVTCih386pDmVkY0ZY6AVcY04cgsK0RM/7NZkyT7OMdSHwJ+nqTB3c7q0Py0H22y2hjapql1WK3yxKd3z1qlUhcQo02URyrrsj2BjjMHaPceFJ5akafKI0b+kHGPn/qyRBlHGIAJb2Zj2BtI3JYoIGMG+9GL867EK4azd3+PaGIBshV6xmIzuEEFu7tuSRIeHsvo40nmFxWja4n2aJaeYUDurXk2i1ky3/t9gR1BQ0CVfgnJJCoQxBoQQUFUVEEIgiiIIgm9fITUjBz+76KDUpIdrMgaMKADAAAkS1DtKRlUwMjvr21yiA1uF0Gu7xpP4yFCm0+mYKIo1NWiMMVBVFVRVBbPFio7nlOGVB7OE346ZhSyHzmMyFYgC0wealCk39VUu5ZWE1VwyAqGUQklpKfr7eB5efSRXSC9XUKmNIgEjiDYg1jHWSMcPTCFJzaKpt6OPLRYLfLPusDh7S5FUwozoYjsurV5QAgKxQ7wRscRQTEM0ABhX3RcCBOUOBrlmgjLKCLaDeK662ct9Mwb9Im1k0WODHSaT8b+7hyYk4AVCKYXsvEL07caT4s+HKsRcu4Cq7Gb3Sl09s8HEbib1udHdlNCQEI/mAWMMvl+1V5y6qkTjyby4fGHQWm+mCyb3klslxF0W/gdAgEexZFmGnzccEl9bmyeVMAMCZATkzTpCGGzICJ8fUMR92dvQj5P7yVERYW4iQQhBbrkDoYv8yLT/FEahY7CVzh3f/bISB0AAR7FsNhu89NM2zZN/FWpKwOT/WnAsws5CrfDs/F0ab8eN3dy3FRnR3EEkpRIEenlv4sxUB1yXIJNFD/Z1tGvhubrgUiYgTSxVVeGdX3ZIs3ZaJO/lFwyAqMAYAySI7g6vYoWf7khyjOzX0WOyS1EU2H/8NB774ymtxzxJE8Fs5RCmRaxUERCSdHDhdnFkYKIW9tzgSGXyNd1UnS6wt1OtLwFpYv2164Qwe2e5hER3R5EpDugYQeiQlkbaJSGG6kSBncorx4sOlggnLXpc06EkA3y7I1O8ulcb4i0U+s22TKmYGtwXjjQhSBcEo9tScnPPBPXv1CJhX3Yl3pej4mIZIyTpoTECC4JqhSEJiLw4qrPSrXUivRyiVd4IOIHYbDb4cGO6qHoQRyirZC9dG6fcOai9ajQ6/Z6MG1yijp+7Q7OzWF9TWrI7W8EVlZUoIjzczRfZeCBV+OW43KiLohoFhOHHow6xQ1w5fe6WvgpjDMxmMzqUUYQ/WXNcXJNvFBqan+kShci3Dwx0mC7Tdei1CTgfZOXeNGFPgXtSIxzM7KcJ7R33jeipGo1GsNlscDIjG+84ehqXlpWh6Mhw9uKI1iqT/800l8kIFVZY3XqT2WyGN1amSRfrIThM0sP/1hVpPv9zj8gYg9DQUDaoawoZ0i6mpgATKTYYHmsl3UOsNAKZGXPUsqQZAyZbgTnMECda2LA4mQSxc2tOGAW9AHC+CUbGGGTlFaBDJzOw2RxwVrtXAmoGoZTCX4dzRdedSJjqgGnXxir9OiVThBDsOXYGv7DsH2lPPhMYEqBjGKGrnr7K3j4+jAqMwL+eJgJZcXZBGGPw5epD0qFS7XnsUMLgvEZtokDHUJmW2ADl2ERUn7MMZdEA/1tfrMmv2I6m3dpb0el0MHFYJ9Wo+QdWHSsSOsYF06dG91QAAOx2O/p05WHx3T2KBAgDU2zw1U1xjj5tYmmwUQ8Gg4Gt33dK+Hp7ltg51kgnDe2ietvjymq1QnpuEd6VVoxzy6wIA4PoED0zSAL8b+VZKd8hooHxiCx8bLDDYLg4B5jzIaAEUllZibZnyRhc1oS2CVHpHQPbqwghKCopRQ/MP6w5Yw/GIBJAAHCqxIILSipwscUBBHBNVzaJlDWPCHYyr46dycIf/10sghBUZ3tE1Qo3t5VIsyAd/XSvRVL8PBcEKTb4+f4rHCaDDt5auk/66h9V9L6jo3eYZICP99ikzNKNeMYdveRm0ZFs/DU91XuGUxUhVJMx1+l0bOyVrcmWM/uwjQDqEaejo/q2I7ULG0f07UiG9WxDamfaa2OxWOGH9UfExYeKxQMFBDNB+2+AgNqAUQJICgKkQbAl2yrsPZUjDOyaEvDVvgElkNIKK2RWUIRc+uGA5npaPVqt2HtGOGPRYwAVHu4uqSlRJtosvBmLj4mgn8zbpkGaf0e1wUkaGhRkqhGIzWaDaUuOSGWo7qiVpNpg5oho+Z5h3VQAgFLbZvT9cSr6E26mggaO55bjq3vFERUQQM2qPgZMtkHtNtYFkrTwazoRDn74t/adm1KUod2rOrkrLZvH0l+fGuYAqDKfPG3A7c2sOpOVjx/5ca+0vUAUkKgHcM2fChhq542QpIO3V54Um4UZWXJiYOdNAsoHOVNkxm7b7DAKzcP1rHrUSyswIxBEYKodJgxMVu8b0VO99op2ZMvh08L8IzaxOsqjUa3w0FWtajYgoJTC3DWHxA05uE4nVyQ2ePPqKHnc8O6qKIogiiI8OaKDEgZWv4r3kKSFtYdzBMYYTByUrPaLtBNRMUMsNrOvxzRzDIuzE1DOoyoXC5AuB+N75p/WvvLzVqmo2PNiJq1WC1qt1qM4vFFSVo7u+3a3tKNY7164yBh4XAqMMPxdqBfGzNmjPXwqI6D6mCsBNYMUVdoRIHfHoHZviAs1MKBlgEQtfL8lTRyrUnXr8Tw8c1Oh5KiOfBEFHuhlUvt1bFkzum05mCrM3FTkMXTsBiXQv20MrV0AGRpkhOZBjJWa/XFGEKxMtQkvlFegLq2T6NIpMY6s/GKs1UiseWwUG3FFazJhzmbturzz24pOEU3w6X5VWnVym/DC8ERlZJ+2pCH5C8YYfLnmiHigVCeAUH1bVfmRa5O1tFOcicoqhaN5ZrwhXcWVuNYWRQhBpmJC935/UHNLlyxydZd40qtdi4CbTQJKICLGzG3tKUJQaLbXdMrreySQdzfmsWIwoc8PKOJne46ISNAACFUdn6ky3NEWkRfG9JKrTZFTGTn48UUnNGYc5JenLWEASXQeGPPLKtDREsBu5ocXMqwCWnswA986uAvR6XSQkhRf03kEQYASey2hVW8m54+fIoiQag/C9y/L1l67L4dMG9VB6dCqOa2rmtkTVqsVlh8tF0A4Z/IxBr3CrGT2nV2UlOYx1G63I4wxiKLIzuYX46cXHZK25WtrHUGHIM0RjGfucuD5B46Kq58MssdFRQRUiXxATX+S6GltNoIj+Q5UXTbSPDaavX9TCzkcmRkAqrLnBRGY6oAYbGavDwmRP5w4sCbCUlJWjh6Zt1/KVOryO6pCo6BY4flBEUqKS01Sy2bR9KY2Wr93H0GiFpbszxUVRXH7nVarhYcGNFPam6yUOSxwRbiNPN1LqwRTM/N7dxPJAKuydcKIzw9r/+/7TZqMrDx0vtv1lFSYUWopqekjiVoLnTuxl4IFAR6au1nb7+2tuive3Kx74KstWodC4dv7+8ldQ23uX4IwZFkAZRdXBlzGMaBKTf45nYn7zz6oQ1rnBJaomGHFgx3tV7SvMpkYY5CelYeX7T4jnC6wIEHA0D0pjI7s0YJERYTV+Ctmsxke+nqr9s+zolDX6ByNzWzmDYmyIIhwba/WHrPvmbmFaPqS/Zrd2Q6cpdY9G2lUM6x/rIu9Y3KiW6dijIHFYoEzucU4MSaCBpkMkJaZh9/646i0NJUK57XDCaMQjqxsYo8Q9YHhHdToyHDmT3b8eHoW7vv+gXPPm8FDnUH932195evfXa/bX4xwnI6yMpkhGzZBgsbCVjzRx348uwTf9mOa1jXBOijKShZNGeYItCMSAsrEigszsWAJWKWLF61KRnjt92PSzwnRDpPJCAghaJkQR5/yUXlaVFKGHvpuu2ZdllTn/roaYoH3xrSQr+/X0ePJUtUkxEWxuY8Md6zcdUwYtyBDS+tINMqCEeasOyXObhEvu5pACCEwmUzQufW/S1tbJzWjN3UrU5eeyjw/ewlhKAETen+PQ1pwaIc4vnuIOmFIOzUmMsKnUMKMOmYQAarDBQJCzG63o1OlFN3QSkM+vXegnFNUhkbNOaTNdOjRwm2nxIdGdFXahKbRkxZn68RGkN+HoV5MBJSJpdfrWYcowUOnR7A1TyM8N2+7pqys3OfQSAiBDftPCrd8ulW7LrvuzaeZ6oCn+4co1/Vp71Mc1WCMYXiP1mRUslC3uYUQLDtuE9Kz8/1+DxEhOqZHSk0ESatUuO2C6L1xIuSoRvT2Trt01bs7dW8s2Cpl5xd6Nb1Cg4NY9xjhXC4Dwdb0ql3fx3cPJpFGiRkMBpYYG0kTQjAFLMDezEosSRIkhQhuN55WQrDdbg84E0t45ZVXpjV1I/xFFEU4mZGLd+VSwa0oD2M4UkzxlsNncAiWITZYU7PMVlVVsNlssOHQGWHGrwc0b24oknIVo18l8ghh6BaF6LCuLf024AVBACTbYPmRYrGudSUKEhGylsDQLol+CbB5ZAgb1kpHNPYSaB9K6ZfjOstBpJIdy6nEdpD8WwWJMFiYBm3PVoUFO9LF/LxcnBQqsRCTgdUOAYuiCLF6Ar8dzBdVrIF8K0JnMrPwI0NT1Ou6JRKz1Ybe++Og9HtqVaKzayRjI7snkQU70sUMi3MUw+Gwo0l9otQgkymgDv0MKB8EAGDr4TR8w9cndL6KCJlihwQjYe0jJaoTGRRbKaSXEZxtO1cifj5lIVSF5/rolRduH+DuTfvg1fmbpdn7VMkfEYaBmW2c2sueGB/rtw3CGAPGGGCMgVIKqWez8e1f7ddkyMHnbxUwCnpiZaPaaOmkwclK1+R4Wu0rUEphwYaD4rN/5khWwYCAAUjECmFaxmwKQCXTIRBE0Khm+Hlca0ePVrG0/9tbdLnEOejBFDsk6mU25+6Ojv6dkgMm3BtQJhYAQM+UZrRXNPgsYUCSDrJkI1qToxF+P6sV/i7SCzmqqaoc3C9xMNDK5cBkK/SNksmjI7uelzgAAMYPbE0isH+Jw1JmQB+vPiadzxkcCKGahB/GGOIiQplVFWrd3HnY+wiDTTShxadFYeSXx3T3fLZBu2L7UcFsNgPGGO4c0lVdNrmDo1+EjYBiBUUwQAExoUpsQgAM4oRK9tENzeXBXVPIln+ycI5ddHvISNLBWauINPUINzclATeDAAB8/dce8enVF2rNOIMWmkr63fguskoBWsaFsfBQz+vXfX4KY/Dr1iPCT7uzxX25Ci4B31EtAzGztY93c3jbE7guVFWF1xZul77ZWy6amYS6hilUZQiOlkm4Ps+JKTboFcXIPT2jyY19UkhoaAiTZRl2Hc8U1h/NwQXldqSRROjZMpyO6JZIIsLDmNVqhVs/3qTdUWxwVwFVoaXeStc+PcgRHhYaMN56QArEbDbDqA826g5WmBp5BmTQSmum8+7vLte3o7pCCIF5aw+IU1cWakD0kdVmDG5LVslnk4c4vO264umzrdaqcn2tVsswxpBXVIJ2nyrAAzs2p1pJgMXbTgif/Z0nppm1uD7bGTFVhiSjQke3CyJ39k0iLZtFUU9VuuXllWjagl3STyeo6P49DEYnKmTGbd3l+NiogBEHQIAKBABg1a5/hHt+PqP1tHCq3hAVXh1kkp+4qa+fYSH/cDgccP+cDdo/M7XuwYVaSKoZ/nigo713e98BAcYYHEk9iz9ee1LalG7HAAj6NdfQ565vr3RoleB2bWlZGfpp8wnhy50FYqZN717P5g+MApIt0D4C0+6xWtolMYzGheiZXSUoNbcCLTlaKngTIVMc8O0t8Y4xAzsFXHVvwApEVVV4a/F26b1dNqnRTC1GYWoPUZk+dtB5+xx18e4vf0tv/m2RfI/iDIbF2Mm8x4Y4fNVQrd59THh4cZqmhNXeCZJBgmRhCyd7N9OKikvQD5uOi9/tLRYybbp6zSg1EBUYI4AQhirBeRd+EDWz3c/3tcdERQbU7AEQgE56NaIowtM39lRuSgYCpP4DPlPsoFErAYgCV0bbyYPXdGrU2QPgXGa/2OZ5I2gnEKzNAmHptmNe/zC3oAg9syxVKmEml21SEWQqRvT6b0ckWfa8E0tkRDh7ckw/ZeMzVzpmDAmRWxvMlKmed3apE0EEJGqhSmQ+3CvG4LaOBhIZ7r7FUiAQsDNINWazGZ77aYdm/nEqntdMwiiEIwt7fkic0ikxjB4+W4pv69+ahNXDIfeHs9n5aMycXdrT1nN77fowtRI1lXTNkwMc0ZHua+U/XL5DemWLWdJQO7SLwPRwsYBZrbITJJthzcOd7D39qJytrKxEy7afEubuzBUPFQvYdaVmY9BMtLDfH+nhCNT9tAIqUegJjUYDQzrEkmC1lB04W4btoPGdLKMEDNTKxnWUyGfjeihDuqeQhJhw1rN1M6q/gFvbhASbYGALI40RzCyjsAJVUK3XRpYrIqLmInRVpwRSO3Gnqip8uOofyWKT0XdjW8vPjeqiHE7NwKcrayXlsAQmUg7Durao097XarXQNTmO3t4rXu0RBdReUYzOltowAQ/bJNUDE6lkn9zSUr6iY6uAFAfAJTCDVEMphZNnc/A3G06Jq1KtOMOMMKB/1z4JVIE2oUCvbhNMJg5MIUnxMfUqAW8M/tpxVJi4MEMri96TnXpqgd8mdbD3quWwm81mGDVzlXbmnd2U3h2qkm3/m7dJ+vggc3Im+kfZydIpQ867MFBRFDiTU4DnbU0TNp2uEI4UMkxFPZyvU89UGdoEOej7t7aX+3dqRc9ngdbFxiUjkGqqq2Az8kvxmcJKVGGVUYhBw9o3C2UxESHUYDA0eamDqqowY9F26YM9dp9Oe/dgC13y+JWOarOvvLwcbTmSga/v37mmLGXWL39LM3Y4pNqzZgQysz0vXmkPDa1/vsFms0FGfjFeeSBb2HmmBJ8pZ+hMOcEOVrXrPML431nm3K70ZNBSnAAAGeZJREFUIpOhdzOJ3NQpgtxxZXsSEhL4xyNccgIJFMxmC4z7fLN2Y77Oe+iXqvBAJ0F9c9xAWRRFsFqtIIoi1D5a7e3F26R3dspOAsGOSjj6Ul9bbHTj5BwopWC326HSbEEnc8tQQbkdFVXaUYnZgQQBINSgY0lRJtYuLpTGVB2z0Bhfe1EQUOXulxImkxE+uqenfOOnO7RnHF7qp7AIXx20iT2SjtDbh3RVPSXoCiocbkWXBBBY7AqC86o38Q7GGAwGAxgMBhbTSKILFALXOLwESIiLZu/f0k7RE4vXTsckPby2Jtvj2eSUUiixej4rkAbg2ouLES6QJmZQ1xTyxjUxCla972KSoxrQ5B8OaHILip3EoCgK5FrcA0QCMAjWa7hCGgEukCYGYwzjhnVVn+kbrHhP2iE4WmnAd3+5Q3MmM7fmneUXl6IjBarbOwzXI6bV8PNNGgMukIsASZLgyRt7KuPbS6rXqgCEYX+ZQbhpzj7tj2v3iZm5+eit345IVqR3M7HaRIhUr9fzGaQR4FGsiwiLxQJP/7hdu/Ak83mQKFMdAKoMSKP3sBUQgwc7gfr2hCGX98k/jQSfQS4ijEYjvDeun2NCB0EF4r1eEolaQLogz/tkKTa4pXdSo9eTXa5wgVxkGI1GePOuvvJ9nQQVVPt5X98nBkinFoFZ93QxwgVyEWI0GmDG3QPkl64MVkSl0u/rBMUKj1+VpNbetZ3TMLhALlK0Wi1MubG38t0drRwttRW0rq19mOqAh3oZ1WuvaBtwi5IuZriTHgDkFxWjD/48JC0+YhFKqM5lXQkDSbXClD4hytM39VIupTKPiwEukACBUgp5hUVo0bZU8e8MMy5zMDBJCJLDJTZuQCu1Q6t46u9ado7/cIEEILIsAyEEBEFwKlzkND5cIByOD7iTzuH4gAuEw/EBFwiH4wMuEA7HB1wgHI4PuEA4HB9wgXA4PuAC4XB8wAXC4fiAC4TD8QGvbrvEmPnW2xKhBNq2bcfatmtLW7dpQy+1eq0fvvtOPH36NG7bth1t264tbduuHTMajRdkDT6vxbqEYIxB5/YdDHb7vysRBVGABYsX27t3737JrDK8cdQNuqNHjtRYPwgheGfWLPnmW29p9KXG3MS6hKjeIrQ2RCWgKo1+HlCTYrNanf6fMQYORz3POakDLpBLCEEQwNNO6qagoCZozYVDlNw9A4PRcEFMLC6QSwxJct8uyGi4MJ2nqZAkd5/KaDRdkO/iArnEEATBTQxG04XpPE2Fp5WTJtOFcdIvuigWUVVIz8jARYVFQIiKoqKiWEJiIr2U11oTQqC4uBg5HA6Ijo5m53vwTW08ziANjPBYLVbIysrERUVFSBBEFhMTwxKTEllTHYwjeTCxjMZGPO24Fo0mEFVVYeP6DcKaNWuE/fv24dycHKzT6dj23bts/qyVTktLw19/9ZW4etUqoay0zGk7Tb1eD7379CGTHpis9uvf3+9dO7KyspDJZALXg2RST53CixctEg4fOozz8nJxcHAwi42NY7379CG33XE7CQryfPBLUVERWrRggbhzx06ck5WNBEmE2NhY1q17Nzry+utJm7Zt/Y4UlZaUoIULFoqrV64UDh8+jFmt3diTU1LooMGDyaTJk9SY2NiaX+Tm5CIsYIiJifHYPqKqoKrugZzCggIUFBzs9DOEEISE+D6PcfOmzcL8efPELZs3C65OcFhYGBsydCh57InHlcSkJI+fk34mHeXn56GwsDDQ6XQsKiqK6T0c4eDK2YwMVF5ejiorKxEhFHr27EkMxn+v8+SQFxcXo7KyMrdtWIODgxsk5EYJ8x4+dAg/98wzmlMnT7m15Pt5PzoGXHml105NCIF3Z86UvvvmW0mpI9qCEIKbxoxR33hrhuxplF3xx5/C9u3bhbMZGej4sWO4uLgYPfzoI8rTzz6rAABkZmai1155RbNh3XqvZ6+FhYWx2R9/JNdus9VihbdmzNAsWbxY9HaCrCAK8PAjjypTn3rS500wxuDH778XP/xgtlReXu7zqCudTgfTXn5ZvuvusSoAwNDBg/VnM84ig8HAevfpTe+bNEntP2AAWbL4F3H5sqVCTnYOzsjI8Pv4LG/vpri4GL34f89r1q1dW+cZdTqdDp585mn5/kmT3JT54KTJ2tqf0aJFC/b7ij9tvkSybetW4d7xE7SU/jvWvDf7A0dkZCR8OecLsbi4GB0/dszvHv/y9OnyhHsn1jv82+AZZN/evfje8RO0FovF44vZumUL9iYQoqow9Ykp2r9WrPDrsEDGGCxbulTMzMzEc7/9xmEymZxGruXLlonr161z+qyDBw5iAIC/VqwQnn/2OY23dlZTWlqKHpr8gHbhkl/sHTp0oEePHMGPP/qo9mzGWZ/XEZXAJx99JBmNBpj84IMeRUIIgWkvvKD5ZdFiv5673W6Hl6dN02RnZ6M7x96lVrfBarWijRs2Ci1bJdP+AwaQRQsXiHv37D3vYTIs3P0U3cLCQjRu7N3a1FPug523Nr71xpuanKxs/PIr051GD+ZyRkl6ejp6/bXXNDPeftvjKFNaWoqeeeppTW1xAABQStGff/yBt23det6HSoaG1f8YOoAGOuk2qxWemvqkV3EAAOzft8/rTb34wosaf8VRmz27d+NnnnxK4/oCklOS3Uycf/45ij/75BPpiUcf89nO2thsNnj1f//THD1yBI8be3ed4qjNpx9/IrrmIqp5edo0v8VRmzmffSY9NWWq25SZ1KLKtKlvDkCn0zk9QLvdDhPvGee3OGrz/XffiV/Pnet0b0HB7qbq4oWLxL+3bfP4zt96402psKDA7VmHh4cz2VG/vbgbWkXQoBnkjz/+ELMyM51uSKvVwnUjR6qt27Rhcc3iaNu27TwqeNmSpeKSxc6dRRAEuP3OO9UJ905UU1JSqKIosGnDRmHm229Lp0+fdnppa9esERb+vEC8c+xdNdNnckqK23eVlZah9999r8ZzDQkNZUOHDiVJLZIYIRT+3rZV8DT67t2zF999511as9mMAAD0BgOMHj1abZ6QwMrKSuHE8RN429atgqtIzWYz2r1rtzBw0ECnWXP5smXiogULPT7v+ObN2egbR6utkpMZAEBaahr6bflyMScnp+bZ7tvr3sbExCqBREVH12uUVGTnY9penT5dc+LECafvCQ4OZg8+/LB66+23qREREay8vBz9umyZ8MF770uVlZVO737W2+9oBg0aRFu3aUMBAKZMnaqsWbVasFqtNX/HGIMXnvs/zYrVq+y1gwdrV68Rli5Z4vZ8Blx5JRl81VVk546d9RrMPflk50ODfJAnHn1Mu+LPP2tGA4wxLPxlsb17jx4+nVWbzQaD+g/Ql5aW1jw4QRDgg48+dIy8/no3c8xqscL9996r271rl9NDio+PZ+s2bawJAuzfvx/fNuZmj+EuvV4Pjzz2mDJh4kSltsMHAPDerFnS559+5vW8gaHDhpFXXn9NbtasmVNH/GnePHH6Sy+7DVHPv/iCPOmBB2rejKIoMGjAlXpPo+OkByYrTz3zjOI60tntdnjz9Tc0P//0k9dBbP2mjbbEpCRmNptRSXExZGScxQ9OmqR19ZO+mPuVQ6PRAmMUKisqwWwxI6ISGHPzGLXaHzh08BC++cYbnZ5dZGQkm/fzfEdK69Zu7/PM6TNo7B136AoLC53u6fpRo8iHn3xcM6Vt3rRJmHzf/VpCnF/rzbfcos58710ZAKCgoACNvPZanWtwJjEpkS399Vd7aGgoczgckJ+Xh4qLi9GUxx7X1h48AACmv/qK3KJlKwYAUFlRAVabFckOGYYMHUrimsXV28xq0AySn5/n1MiQkBBWlzgAABb+vECsLQ4AgIcffVTxJA4AAIPRAB9/9qlj+FVDdNUjOgBAdnY22rJ5szBk6FACUOUEero+PDyc/fDTT4527dt5bNujjz+ufPftd5JrCQMAwNh77lFfff012dPR0XeNHat+9cWXkussmpOT4yTk5cuWiZ7E8fiUKcqUJ6d69Fd0Oh28/uYbsqoqsHjhIrf3JIoixMfHMwAAk8nETCYTJCYlkYTERJqWmlrz/UFBQWzY8OF1Rv7mfOY8QCCE4IOPPpQ9iQMAoGWrluztWTPl+yfe62T6rVz5l1BZWYmqI4GDBg8mU556Unl/1rtOn790yRJx6PBhZMR115EXn39e4yoOk8nEvvz6a0d1BFKr1UJiUhJLTEpinbt2oTk5OU5m2tXXXENi4+ovBG80yAeRJOdz8EpLS9HcL7+sU3S///abs60aFMQefvQRn9GfyMhINmLkdW4veuvmLTUPKjg4mHnqyNNffVX2Jg6Aqs7YrVtXt8/u0bMn9SYOgKoZs0uXLm6fa7E4C231qlVuNnfnLp3p41OeqLNIavqrr8pxHl58WFgYEzyEz6nqfBv+5I+sFitsWO8c2es/YACpK6Q++KqrSJJLiJeoBP7ets2pXz38yCPK8Kuvdvus1155VfP5p59JG9dvcPpuhBC8MWOGnJKS4vGdUeL+Y90F2tG+QQLp0LGDW0vfnvGW5skpUzQlxSUee1VlZSU6cuSw0/f26NmT1pUcY4xBcHCwW0dJTU11MtP0BvcH1d5DO12JiIh0++xBgwcRb+KopmWrlm6frar/9ntKKezdvcftOU9+8EHFn/i8TqeDu8eNczOkvSXGVEqcGuwpcejKjh3bBdcQe7/+/et8ZoqiQGhYmNtzqz2DAVR1+Nkff+To1LmT02cW5Oej92bNcmvgY088oYwafYNXcaoejqnTai7MoaUNMrHuuOsu8uP3P7jlL37/9Tdx04aNwhNTpyrjJ05Qa3eE1NRURFxGuZKSYrR50yZBVVUwm81grjSjoqIilJ+Xh/Lz81BuTi7Kzs5Gtc2ralxNNaPRxKwWq99Rp2pcE2kAAP6c8+cpSiKK/77zoqIiVFFR4dQeQRRg8FVX+Z1UHDR4EHl35kynjmR0CXFXQ1ycUn+iOJ7yV6fT0tCWzVsEm80KFrMFmc2VUFhYiHKyc1B+fh7Kzy9AWZmZ2FNeqLio2O3563Q6+HTOHMeYG0brSko8D54AANeNHEmemDrF58zq2n8AGh6t8kaDBJKcnEynv/qq/PK0aW4h14qKCvTGa69pVq9aJXw653M57NxIU1Ls/vAOHzqM75swsV71FXq9swlhNBigsB6fIwjuoznGdUegkYdZQKpl+pS5CBgAIDws/LwW+CQkJrrXV3m5XnVxhiWNVOf3lJQUu/1s6ZIloqeokj/ovRRHxsfHs1ffeF1+/JFHPb7rqKgoNuOdt72atNW4RqYwxuDJ3GwMGlxMc+fYu9R5P8+3t2nbxuOIuGvnTuGxhx+pEZC3THR9EEURJky894ItdhBFPwQC7i+zdjm2xYPjLwjnl/oRPRQgug5I1VAXgWBU9yuWZfm8Z1xvhIWFsVtuvdVrbHXosGHEW4nLwEGDvJb51MY1IoZwozXfjUaRXZ++fenvf/5p/+7bb8WPZn8ouSbkdu7YIaz440/h+htGkTAPNqsvDAYDi4iMhPDwcBYWFsoSk5JYYmISTUhMYB06dKSuITxvHac+YD86sqfOXtvECg1xz+RWFyb6W5SYnZ3t1su9JT2VesT9Q0PP752EhoWy8LBwFhYeBpFRUSwxMZEmJiaxxKRE1qVrV+qrk783a5bXEptlS5eKw64eTq4dMcJncIAQcuEU4UKjzUuCKML9kyerN9x4I3nx+ec1rpGJVStXitffMIpERka6Xds8IYGNnzBBCQsPg4iICBYZFcXCw8JYeEQEO1/bkkHjCUT0QyCerAFWq1QiOiYaMMZQu3xCURTYsX27MPiqq/wqvHSNCgEAmM2VHjuJqw/iD5FR7gGKfv37kWuuvZaEh0ewiMgIFh4eDmHh4Sw8PJyd7wxYzcIFC8Rv5n7tNWrAGINnn35a27JlS7uvwk/XUpQLSaMbbtHR0ezzL75wDB8yVJ+dlVXzEtPT0xEAQKvkZBoaFspqx73LSkvhzrvuUl0TePWhvhOIp5nHH7sWY+x2Ye1R3Gg0so6dOtLDh5wjd19/NVf0RyBEVWHej/PcGmKuNHv+e0qdhOPqk3iiZ89ebj2OMYBxEyY02hrvf44exW+89rrbaCdJEtQO8lgtVpjy+OOapcuX270VNbr6IJRQoJR6XE3ZUC5IQb8kSRAfH+9R5hhjGDDgSqffmc1m9OHsD+qOR56DUgpzPvtcSnUJJwJ47uiMsTqnZE+REX9GY1V1n+5drxsydJjbh/+9bZuwcMGCOhX4/nvvS6fT0vw2sVy/29tMU5u27dpS13KVHdu3C/5U8/77PWb05utveKzILi0pQQ8/8KDWNRHbf0B/Mn/hArurlXDq5Cn83DPPar2Zy64+CGMMapezNCYXRCCpp07hw4cOOT3c2mUa4ydOcHuK38z9Wvrs00+lunyItLQ0fNftt+venTlTmv3++26i8iKQOtvsyXb3J6Dg6W9cR+17xo3zeDTz/156SfPTvHmip/ZRSuGTjz6Svvj8c48Dh8Ph8Pjdrp2nIL8AuZaDuIIQgnETxrs9gKemTNVs2rixTpFsWL9euO7qa3Tffv21tGD+fCfRK4oCD0yarM3OznZqQ2RkJJv90cdy9x496DPPPed2I3+tWCF8+MFsj/fuaeA6dPDgBenLDf7QM6fPoN27duH9+/bhVStXCq+/+prmjttu19psNqe/Gzr831G0Z69edOCgQU5vkjEG7896V7rt5lt0K//6S6h9fWlpKVqzarXw+COPakdec62uurhw9cpVwkmX4jpPNhbzw2ZVFPfO5p9A3CtpXV9geEQ4m3ife7SNqASmv/Sy5q7bb9ctWrhQ3LtnD967Zw9eMP9n8ZabbtLNft/3rOpaLOgJxhhMe/4FTX5+PiKqCmlpaXjVypXCV198IdWupJ4wcaIaERHh9PAsFguadO992imPPa7ds3s3ri2+zMxM9MvixeKtY27WTb7vfm1ubi4CAJjz+edS7ef23qxZ0v59+9z62fTXXpXDI6rK7Sfed696Re/ebi/ps08+kVyXL1TfkyvvvPW2lJqaihljkHn2LNqwfr3w3TffivN+/LFBbkSDfZBXp0/XbN2yxeco06JFCzb6xhudes07786Sx4wercvPy3d6yQf278ePPfyIVpIk0Ov1TJZl5K18nFIKf634S6jt0NV3BlEV1a2zOfwIf3oyKVxHcQCAqU8+qezYvkPw1Fn27N6D9+zec96ZLnNlJURERDj9LCQkhLkm4tavWyes77PObQq76+671etGjiQAVb7S7I8/ku8dP0Fb28ZnjMGff/wh/PnHH4JerwdJkpjVakXeqmTz8/LRvr17cd9+/ejGDRuEr7+a6ybyMTffXPO9AFVm96z333OMGnGdU60dpRSef/Y5zer16+y1V4V6yt4fPXIEjxh+tVtdzRW9e5N7PFQi+EuDZ5DqUcAbISEh7IOPPnS41gRFR0ezL+fOdXgr1VYUBSoqKryKAwBg5PXXE9caLs/mih8mloeO7s8ahHMl406oqrvYBFGETz771JHspb7IGxqNBl54aZrsqRDTU2WBPyUi1YSHO3e0fv37kxlvvy17ixzabDaoqKjwKg6MMbww7UW5b79+FABg/ryf3MzH+ObN2fTXXnV72M2bN2cvT5/u9vOSkhK0ccMGlzox/+8xLCzM3z/1SMMFEh7h9XcdOnakCxYvcnT2UNAHANCxUye6/Pff7L379PF7nTlAVen6E1OnKh9+8rHD9WV6FAjzw8RSPQjEHxPLzxkEACAmNpb9vHCho/8A/9bVt2jRgi1eusR+/6RJatfu3dyuqaysdLvmiSenKq4rLb0RExPr9nc333qL+uP8n+zxzZufVzwwOiaGffzZp477J0/2OloLggDvvv+e20rQam657Vb1mmuvdbtP13d6z/jxamKSe3WBJ2JiPa/f95cGm1iu0aqQ0FDWo2cPeuONN6nXjbyO1BUqjYmJYfMXLnBsWL9emPvlV+KB/fvdNgioJjY2ll0z4lry4EMPKbU3M6hNckoKFSWpRvgYI7dNGzyRmJjIWrRowXR6PTObzaiivBxCQ0PrugzatG1DmycksJCQEFZZWYEqKiogqUWSV0WGR1SV3v+6fLnw7ddfS0cOH3EbpOLj49nYe+5RJ953r1KdTOzV6wr667LlAFBVyxUaEsqCPGwIl5ycTH9ZttTx7sxZ0ratWwVXX1Cn00G79u3p1ddcQ7xt1dmzVy+6dsN624L588WFCxaKJ0+cwN5yD+3at6c3jB5NJtw7UXG1EhISE1nzhISaZ//UM0/LnnyN2rwxY4YMAJrU1FRUfK4sKTIyyun9hYSEsEVLlthnvTNTWrt6teCaeBREAVq3bkMHDR5M7pt0f4NC1Q3etEFRFMg9t3jFZAqq0+SqC1mW4cjhw7iwsBCVlpQihBFEhEewZs3jWYcOdVflBhrpZ9JR6qlTuKioCGm1WmjRsgXt2q0bdY3pK4oCebm5KDQsDPwpx6i+pvrdGIxGCAoKqteWQuXl5eifo0dxUVERVFZUIp1OB2HhYaxN27a0ek1KU0EphezsbMQoBa1OB8HBwcxTxLC+8M2rORwf8J0VORwfcIFwOD7gAuFwfMAFwuH4gAuEw/EBFwiH4wMuEA7HB1wgHI4PuEA4HB9wgXA4PuAC4XB8wAXC4fiAC4TD8QEXCIfjAy4QDscHXCAcjg+4QDgcH3CBcDg+4ALhcHzABcLh+IALhMPxARcIh+MDLhAOxwdcIByOD7hAOBwfcIFwOD7gAuFwfMAFwuH4gAuEw/EBFwiH4wMuEA7HB1wgHI4PuEA4HB9wgXA4PuAC4XB88P/pbj/LqZNM/QAAAABJRU5ErkJggg==",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.0.9",
                  "provider": {
                    "name": "Sematext"
                  },
                  "annotations": {
                    "alm-examples": "[{\n  \"apiVersion\": \"sematext.com/v1alpha1\",\n  \"kind\": \"SematextAgent\",\n  \"metadata\": {\n    \"name\": \"basic-agent-deployment\"\n  },\n  \"spec\": {\n    \"region\": \"EU\"\n  }\n}]",
                    "capabilities": "Basic Install",
                    "categories": "Monitoring, Logging \u0026 Tracing",
                    "certified": "false",
                    "containerImage": "docker.io/sematext/sematext-operator:1.0.9",
                    "createdAt": "2019-06-13 08:00:00",
                    "description": "Full stack observability with Sematext Monitoring Platform!",
                    "repository": "https://github.com/sematext/sematext-operator",
                    "support": "Sematext, Inc."
                  },
                  "description": "The Sematext Operator for Kubernetes provides an easy way to deploy Sematext Agent.\n\nSematext Agent collects metrics about hosts (CPU, memory, disk, network, processes), containers (both Docker and rkt) and orchestrator platforms and ships that to [Sematext Cloud](https://sematext.com/cloud). Sematext Cloud is available in the US and EU regions.\n\nIt installs the Sematext Agent to all nodes in your cluster via a `DaemonSet` resource.\n\n## Settings\n\nThis operator uses all the same options as the [Sematext Agent Helm Chart](https://hub.helm.sh/charts/stable/sematext-agent), please take a look to all the options in the following table:\n\n|             Parameter            |            Description            |                  Default                  |\n|----------------------------------|-----------------------------------|-------------------------------------------|\n| `containerToken`                 | Sematext Container token          | `Nil` Provide your Container token        |\n| `logsToken`                      | Sematext Logs token               | `Nil` Provide your Logs token             |\n| `infraToken`                     | Sematext Infra token              | `Nil` Provide your Infra token            |\n| `region`                         | Sematext region                   | `US` Sematext US or EU region             |\n| `agent.image.repository`         | The image repository              | `sematext/agent`                          |\n| `agent.image.tag`                | The image tag                     | `latest`                                  |\n| `agent.image.pullPolicy`         | Image pull policy                 | `Always`                                  |\n| `agent.service.port`             | Service port                      | `80`                                      |\n| `agent.service.type`             | Service type                      | `ClusterIP`                               |\n| `agent.resources`                | Agent resources                   | `{}`                                      |\n| `logagent.image.repository`      | The image repository              | `sematext/logagent`                       |\n| `logagent.image.tag`             | The image tag                     | `latest`                                  |\n| `logagent.image.pullPolicy`      | Image pull policy                 | `Always`                                  |\n| `logagent.resources`             | Logagent resources                | `{}`                                      |\n| `logagent.extraHostVolumeMounts` | Extra mounts                      | `{}`                                      |\n| `customUrl.serverBaseUrl`        | Custom Base URL                   | `Nil`                                     |\n| `customUrl.logsReceiverUrl`      | Custom Logs receiver URL          | `Nil`                                     |\n| `customUrl.eventsRecieverUrl`    | Custom Event receiver URL         | `Nil`                                     |\n| `serviceAccount.create`          | Create a service account          | `true`                                    |\n| `serviceAccount.name`            | Service account name              | `Nil` Defaults to chart name              |\n| `rbac.create`                    | RBAC enabled                      | `true`                                    |\n| `tolerations`                    | Tolerations                       | `[]`                                      |\n| `nodeSelector`                   | Node selector                     | `{}`                                      |\n\nFor example, if you want to deploy Sematext Agent in EU region, create the following resource:\n\n```yaml\napiVersion: sematext.com/v1alpha1\nkind: SematextAgent\nmetadata:\n  name: test-sematextagent\nspec:\n  region: \"EU\"\n  containerToken: YOUR_CONTAINER_TOKEN\n  logsToken: YOUR_LOGS_TOKEN\n  infraToken: YOUR_INFRA_TOKEN\n```\n\n**NOTE:** You need to create [a new Docker app in Sematext Cloud](https://apps.sematext.com/ui/integrations/create/docker) to get relevant tokens.\n\nOnce you have created the above resource, you can apply this file with `kubectl apply -f`.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "sematextagents.sematext.com",
                        "version": "v1alpha1",
                        "kind": "SematextAgent",
                        "displayName": "Sematext Agent DaemonSet",
                        "description": "Represents a Sematext Agent running on each node of your cluster."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "spark-gcp",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/spark-gcp",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "GoogleCloudPlatform",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "GoogleCloudPlatform"
            },
            "packageName": "spark-gcp",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "sparkoperator.v2.4.0",
                "currentCSVDesc": {
                  "displayName": "Spark Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "2.4.0",
                  "provider": {
                    "name": "GoogleCloudPlatform"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"sparkoperator.k8s.io/v1beta1\",\n    \"kind\": \"SparkApplication\",\n    \"metadata\": {\n      \"name\": \"pyspark-pi\"\n    },\n    \"spec\": {\n      \"type\": \"Python\",\n      \"pythonVersion\": \"2\",\n      \"mode\": \"cluster\",\n      \"image\": \"gcr.io/spark-operator/spark-py:v2.4.0\",\n      \"imagePullPolicy\": \"Always\",\n      \"mainApplicationFile\": \"local:///opt/spark/examples/src/main/python/pi.py\",\n      \"sparkVersion\": \"2.4.0\",\n      \"restartPolicy\": {\n        \"type\": \"OnFailure\",\n        \"onFailureRetries\": 3,\n        \"onFailureRetryInterval\": 10,\n        \"onSubmissionFailureRetries\": 5,\n        \"onSubmissionFailureRetryInterval\": 20\n      },\n      \"driver\": {\n        \"cores\": 0.1,\n        \"coreLimit\": \"200m\",\n        \"memory\": \"512m\",\n        \"labels\": {\n          \"version\": \"2.4.0\"\n        },\n        \"serviceAccount\": \"spark\"\n      },\n      \"executor\": {\n        \"cores\": 1,\n        \"instances\": 1,\n        \"memory\": \"512m\",\n        \"labels\": {\n          \"version\": \"2.4.0\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"sparkoperator.k8s.io/v1beta1\",\n    \"kind\": \"ScheduledSparkApplication\",\n    \"metadata\": {\n      \"name\": \"spark-pi-scheduled\"\n    },\n    \"spec\": {\n      \"schedule\": \"@every 5m\",\n      \"concurrencyPolicy\": \"Allow\",\n      \"template\": {\n        \"type\": \"Scala\",\n        \"mode\": \"cluster\",\n        \"image\": \"gcr.io/spark-operator/spark:v2.4.0\",\n        \"imagePullPolicy\": \"Always\",\n        \"mainClass\": \"org.apache.spark.examples.SparkPi\",\n        \"mainApplicationFile\": \"local:///opt/spark/examples/jars/spark-examples_2.11-2.4.0.jar\",\n        \"restartPolicy\": {\n          \"type\": \"Never\"\n        },\n        \"driver\": {\n          \"cores\": 0.1,\n          \"coreLimit\": \"200m\",\n          \"memory\": \"512m\",\n          \"labels\": {\n            \"version\": \"2.4.0\"\n          },\n          \"serviceAccount\": \"spark\"\n        },\n        \"executor\": {\n          \"cores\": 1,\n          \"instances\": 1,\n          \"memory\": \"512m\",\n          \"labels\": {\n            \"version\": \"2.4.0\"\n          }\n        }\n      }\n    }\n  }\n]",
                    "capabilities": "Basic Install",
                    "categories": "Big Data",
                    "certified": "False",
                    "containerImage": "gcr.io/spark-operator/spark-operator:v2.4.0-v1beta1-latest",
                    "description": "Apache Spark is a unified analytics engine for large-scale data processing.",
                    "repository": "https://github.com/GoogleCloudPlatform/spark-on-k8s-operator"
                  },
                  "description": "Apache Spark is a fast and general-purpose cluster computing system.\nIt provides high-level APIs in Java, Scala, Python and R, and an optimized engine that supports general execution graphs. \nIt also supports a rich set of higher-level tools including Spark SQL for SQL and structured data processing, MLlib for \nmachine learning, GraphX for graph processing, and Spark Streaming.\n\nThe [spark-on-k8s-operator](https://github.com/GoogleCloudPlatform/spark-on-k8s-operator) allows Spark applications \nto be defined in a declarative manner and supports one-time Spark applications with `SparkApplication` \nand cron-scheduled applications with `ScheduledSparkApplication`.\n\nConsult the [user guide](https://github.com/GoogleCloudPlatform/spark-on-k8s-operator/blob/master/docs/user-guide.md) and \n[examples](https://github.com/GoogleCloudPlatform/spark-on-k8s-operator/tree/master/examples) to see how to \nwrite Spark applications for the operator.\n\nSee the [API spec](https://github.com/GoogleCloudPlatform/spark-on-k8s-operator/blob/master/docs/api.md) and \n[architecture doc](https://github.com/GoogleCloudPlatform/spark-on-k8s-operator/blob/master/docs/design.md#architecture) \nfor more details on how the operator functions.\n\n## Before You Start\nThe driver pod for Spark applications requires a ServiceAccount with sufficient privileges.\nSee the doc on [ServiceAccount for Driver Pods](https://github.com/GoogleCloudPlatform/spark-on-k8s-operator/blob/master/docs/quick-start-guide.md#about-the-service-account-for-driver-pods) for more details.\nA ServiceAccount named `spark` is already created in the namespace where the Operator is deployed.\nUse this ServiceAccount in the spec for your `SparkApplication` and `ScheduledSparkApplication`.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "scheduledsparkapplications.sparkoperator.k8s.io",
                        "version": "v1beta1",
                        "kind": "ScheduledSparkApplication",
                        "displayName": "ScheduledSparkApplication",
                        "description": "A configuration file for a ScheduledSparkApplication custom resource."
                      },
                      {
                        "name": "sparkapplications.sparkoperator.k8s.io",
                        "version": "v1beta1",
                        "kind": "SparkApplication",
                        "displayName": "SparkApplication",
                        "description": "A configuration file for a SparkApplication custom resource.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "applicationState.state",
                            "displayName": "Application State",
                            "description": "Current state of the application.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          },
                          {
                            "path": "applicationState.errorMessage",
                            "displayName": "Error Message",
                            "description": "Indicates the error message in case of failures.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "spinnaker-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/spinnaker-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "OpsMx",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "OpsMx"
            },
            "packageName": "spinnaker-operator",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "spinnaker-operator.v1.13.1",
                "currentCSVDesc": {
                  "displayName": "Spinnaker Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.13.1",
                  "provider": {
                    "name": "OpsMx"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"charts.helm.k8s.io/v1alpha1\",\"kind\":\"SpinnakerOperator\",\"metadata\":{\"name\":\"spin-install\"},\"spec\":{\"halyard\":{\"spinnakerVersion\":\"1.13.1\",\"image\":{\"repository\":\"opsmx11/operator-halyard\",\"tag\":\"1.18.0\"}},\"dockerRegistries\":[{\"name\":\"dockerhub\",\"address\":\"index.docker.io\",\"repositories\":[\"library/alpine\",\"library/ubuntu\",\"library/centos\",\"library/nginx\"]}],\"spinnakerFeatureFlags\":[\"artifacts\",\"jobs\"],\"minio\":{\"enabled\":true,\"imageTag\":\"RELEASE.2018-06-09T02-18-09Z\",\"serviceType\":\"ClusterIP\",\"accessKey\":\"spinnakeradmin\",\"secretKey\":\"spinnakeradmin\",\"bucket\":\"spinnaker\",\"nodeSelector\":{},\"persistence\":{\"enabled\":false}},\"rbac\":{\"create\":false},\"serviceAccount\":{\"create\":false,\"halyardName\":\"spinnaker-operator\",\"spinnakerName\":null}}}]",
                    "capabilities": "Basic Install",
                    "categories": "Integration \u0026 Delivery",
                    "certified": "false",
                    "containerImage": "docker.io/opsmx11/spinnaker-operator:v0.1",
                    "createdAt": "2019-04-29 19:49:35",
                    "description": "Spinnaker is an Open Source, multi-cloud Continuous delivery platform to perform software releases with high velocity and confidence.",
                    "support": "OpsMx"
                  },
                  "description": "## Spinnaker as an Operator\nSpinnaker Operator allows users to spin up Spinnaker to manage continuous deployments. With the help of Spinnaker Operator, users will have the convenience and confidence of simple but powerful approach to execute CI/CD process with high velocity while managing risk and improving quality of deployments to multiple cloud environments. \n## What is Spinnaker?\n* Spinnaker is an Open Source, multi-cloud Continuous delivery platform to perform software releases with high velocity and confidence.\n* Spinnaker helps user to create deployment pipelines that run integration and system tests, spin up and down server groups, and monitor your rollouts.\n### List of Features\n* Multi-Cloud Deployment - Deploy your VM or Containers or functions across most public and private cloud including AWS EC2, ECS, EKS, Lambda, Kubernetes, Google Compute Engine, Google Kubernetes Engine, Google App Engine, Microsoft Azure, OpenStack, with Oracle Bare Metal and DC/OS.\n* Automated Releases with Pipelines - Create deployment pipelines that run integration and system tests, spin up and down server groups, and monitor your rollouts. Trigger pipelines via git events, Jenkins, Travis CI, Docker, CRON, or other Spinnaker pipelines\n* Pipeline-as-code - Manage the pipeline as code (JSON) or interact with pipeline using API or UI.\n* Safe Deployment Strategies - Deploy using Canary or Red/Black (Blue/Green) or Rolling update and enable automated Canary analysis to ensure safety of the new updates before full-rollout to production\n* 1-click Rollback - Rolling back new deployments is never been easier with a 1-click rollback of images/configurations.\n* See more spinnaker.io or docs.opsmx.com\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "spinnakeroperators.charts.helm.k8s.io",
                        "version": "v1alpha1",
                        "kind": "SpinnakerOperator",
                        "displayName": "spinnakeroperator",
                        "description": "SpinnakerOperator"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "storageos",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/storageos",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "StorageOS, Inc",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "StorageOS, Inc"
            },
            "packageName": "storageos",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "storageosoperator.v1.3.0",
                "currentCSVDesc": {
                  "displayName": "StorageOS",
                  "icon": [
                    {
                      "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOS4wLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9Ii05MCAyODQuNyA0MzAgNDMwIiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IC05MCAyODQuNyA0MzAgNDMwIiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnPg0KCTxwYXRoIGZpbGw9IiM0RjUyNjMiIGQ9Ik0yNzguNSw0MjAuOWgtNzQuMWwtNS42LTkuN2wxMy42LTIzLjZsLTE4LjEtMzEuM0gxODBsMjcuNS00Ny43YzMtNS4xLDEuMi0xMS43LTMuOS0xNC42DQoJCWMtNS4xLTMtMTEuNy0xLjItMTQuNiwzLjlsLTM0LDU4LjhIOTMuMmwtMzQtNTguOGMtMi45LTUuMS05LjUtNi45LTE0LjYtMy45cy02LjksOS41LTMuOSwxNC42bDI3LjUsNDcuN0g1My45bC0xOC4xLDMxLjMNCgkJbDEzLjYsMjMuNmwtNS42LDkuOGgtNzQuMmwtNDMuMyw3NC45bDQzLjMsNzQuOWg3NC4xbDM0LDU4LjlMNzksNjI5bC0xLjIsMC44bDQ2LjQsNzcuMmw0Ni4yLTc3LjNsMCwwbDM0LTU4LjloNzQuMWw0My4zLTc0LjkNCgkJTDI3OC41LDQyMC45eiBNNTUuNSw0MDAuNWwtNy40LTEyLjhMNjAsMzY3aDE0LjNsMC4zLDAuNUw1NS41LDQwMC41eiBNMTczLjQsMzY3LjVsMC4zLTAuNUgxODhsMTEuOSwyMC42bC03LjQsMTIuOUwxNzMuNCwzNjcuNXoiDQoJCS8+DQoJPHBvbHlnb24gZmlsbD0iI0ZGRkZGRiIgcG9pbnRzPSI0My43LDQ0Mi4zIDQyLjgsNDQyLjMgLTE4LjEsNDQyLjMgLTQ4LjksNDk1LjggLTE4LjEsNTQ5LjMgNDMsNTQ5LjMgNDMuNyw1NDkuMyA3NC42LDQ5NS45IAkiLz4NCgk8cG9seWdvbiBmaWxsPSIjRkZGRkZGIiBwb2ludHM9IjI2Ni4xLDQ0Mi4zIDIwNC4zLDQ0Mi4zIDIwNC4zLDQ0Mi41IDE3My40LDQ5NS44IDIwNC4zLDU0OS4zIDIwNC40LDU0OS4zIDI2Ni4xLDU0OS4zIDI5Nyw0OTUuOCAJDQoJCSIvPg0KCTxwb2x5Z29uIGZpbGw9IiM2MUMyMDIiIHBvaW50cz0iMTU0LjksMzc4LjIgOTMuMSwzNzguMiA5My4xLDM3OC4zIDYyLjMsNDMxLjcgOTMuMSw0ODUuMiA5My4yLDQ4NS4yIDE1NC45LDQ4NS4yIDE4NS44LDQzMS43IAkiLz4NCgk8cG9seWdvbiBmaWxsPSIjNjFDMjAyIiBwb2ludHM9IjE1Mi4xLDYxOC40IDE1Mi4xLDYxOC40IDEyNCw2NjUuMiA5Ni4yLDYxOC45IDk2LjIsNjE4LjkgNjIuMiw1NjAuMSA4OC4zLDUxNC45IDkzLjEsNTA2LjYgDQoJCTE1NC45LDUwNi42IDE4NS44LDU2MC4xIAkiLz4NCjwvZz4NCjxyZWN0IHg9Ii0xMDUiIHk9IjI3MC43IiBmaWxsPSJub25lIiB3aWR0aD0iNDU4IiBoZWlnaHQ9IjQ1OCIvPg0KPC9zdmc+DQo=",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "1.3.0",
                  "provider": {
                    "name": "StorageOS, Inc"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"storageos.com/v1\",\n    \"kind\": \"StorageOSCluster\",\n    \"metadata\": {\n      \"name\": \"example-storageos\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"namespace\": \"kube-system\",\n      \"secretRefName\": \"storageos-api\",\n      \"secretRefNamespace\": \"default\"\n    }\n  },\n  {\n    \"apiVersion\": \"storageos.com/v1\",\n    \"kind\": \"Job\",\n    \"metadata\": {\n      \"name\": \"example-job\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"image\": \"storageos/cluster-operator:latest\",\n      \"args\": [\"/var/lib/storageos\"],\n      \"mountPath\": \"/var/lib\",\n      \"hostPath\": \"/var/lib\",\n      \"completionWord\": \"done\"\n    }\n  },\n  {\n    \"apiVersion\": \"storageos.com/v1\",\n    \"kind\": \"StorageOSUpgrade\",\n    \"metadata\": {\n      \"name\": \"example-upgrade\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"newImage\": \"storageos/node:latest\"\n    }\n  }\n]",
                    "capabilities": "Deep Insights",
                    "categories": "Storage",
                    "certified": "false",
                    "containerImage": "storageos/cluster-operator:1.3.0",
                    "createdAt": "2019-07-08T12:01:29Z",
                    "description": "Cloud-native, persistent storage for containers.",
                    "repository": "https://github.com/storageos/cluster-operator",
                    "support": "StorageOS, Inc"
                  },
                  "description": "StorageOS is a cloud native, software-defined storage platform that\ntransforms commodity server or cloud based disk capacity into\nenterprise-class persistent storage for containers. StorageOS is ideal for\ndeploying databases, message busses, and other mission-critical stateful\nsolutions, where rapid recovery and fault tolerance are essential.\n\nThe StorageOS Operator installs and manages StorageOS within a cluster.\nCluster nodes may contribute local or attached disk-based storage into a\ndistributed pool, which is then available to all cluster members via a\nglobal namespace.\n\nVolumes are available across the cluster so if a container gets moved to\nanother node it has immediate access to re-attach its data. Data can be\nprotected with synchronous replication. Compression, caching, and QoS are\nenabled by default, and all volumes are thinly-provisioned.\n\nNo other hardware or software is required.\n\nStorageOS is free to use up to 100GB of presented Storage, increasing to\n500GB after registration.  For additional capacity and support plans contact\nsales@storageos.com.\n\n## Supported Features\n\n* **Rapid volume failover** - If a container gets re-scheduled to another\nnode, any StorageOS volumes can be re-attached immediately, irrespective of\nwhere the data is located within the cluster.\n\n* **Data protection** - Data is replicated synchronously, up to 6 copies.\n\n* **Block checksums** - Each block is protected by a checksum which\nautomatically detects any corruption of data in the underlying storage\nmedia.\n\n* **Thin provisioning** - Only consume the space you need in a storage pool.\n\n* **Data reduction** - Transparent inline data compression to reduce the\namount of storage used in a backing store as well as reducing the network\nbandwidth requirements for replication.\n\n* **In-memory caching** - Speed up access to data even when accessed\nremotely.\n\n* **Quality of service** - Prioritize data traffic and address the “noisy\nneighbors” problem.\n\n* **Flexible configuration** - Use labels to automate data placement and\nenforce data policy such as replication. Ideal for compliance and infosec\nteams to enforce policies and rules while still enabling self-service\nstorage by developers and DevOps teams.\n\n* **Access control** - Support multiple namespace – individual users are\npermissioned to specific storage namespaces.\n\n* **Observability \u0026 instrumentation** - Log streams for observability and\nPrometheus support for instrumentation.\n\n* **Deployment flexibility** - Scale up or scale out storage based on\napplication requirements.  Works with any infrastructure – on-premises, VM,\nbare metal or cloud.\n\n* **Small footprint** - Lightweight container requires minimum 1 core with\n2GB of RAM.  Runs in user-space on any 64-bit Linux with no custom kernel\nmodules.\n\n## Required Parameters\n\n* `secretRefName` - the name of a secret that contains two keys for the\n`apiUsername` and `apiPassword` to be used as api credentials\n([documentation](https://docs.storageos.com/docs/reference/cluster-operator/examples))\n* `secretRefNamespace` - the namespace where the api credentials secret is\nstored\n\n## About StorageOS\n\nStorageOS gives users total control of their own storage environment –\nwhether in the cloud or on-premises. Our customers take advantage of storage\non any platform while maintaining full control of business requirements\naround availability, data mobility, performance, security, data residency\ncompliance and business continuity.\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "storageosclusters.storageos.com",
                        "version": "v1",
                        "kind": "StorageOSCluster",
                        "displayName": "StorageOS Cluster",
                        "description": "StorageOS Cluster installs StorageOS in the cluster. It contains all the configuration for setting up a StorageOS cluster and also shows the status of the running StorageOS cluster.",
                        "statusDescriptors": [
                          {
                            "path": "nodes",
                            "displayName": "Nodes",
                            "description": "Set of nodes that are part of the StorageOS Cluster."
                          },
                          {
                            "path": "members",
                            "displayName": "Member Status",
                            "description": "The status of each of the members of StorageOS Cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                            ]
                          },
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the StorageOS Cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "ready",
                            "displayName": "Ready",
                            "description": "Ready Nodes"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "images",
                            "displayName": "Images",
                            "description": "Defines the various container images used in the cluster."
                          },
                          {
                            "path": "namespace",
                            "displayName": "Namespace",
                            "description": "The namespace to install the StorageOS cluster into. `kube-system` is recommended so that StorageOS does not get evicted if a node becomes over-allocated."
                          },
                          {
                            "path": "secretRefName",
                            "displayName": "Cluster Secret",
                            "description": "The name of the secret object that stores the api credentials."
                          },
                          {
                            "path": "secretRefNamespace",
                            "displayName": "Cluster Secret Namespace",
                            "description": "The name of the namespace where the secret object that stores the api credentials exists."
                          },
                          {
                            "path": "join",
                            "displayName": "Cluster members",
                            "description": "The join token is used for cluster discovery.  When used with the Operator, the token will be a comma-separated list of all cluster member IP addresses.  The node that owns the first IP address listed will be responsible for bootsrapping the cluster."
                          },
                          {
                            "path": "kvBackend",
                            "displayName": "KV Store",
                            "description": "KV store configuration to use. Defaults to embedded. `etcd` is recommended for production deployments with the address set to an external etcd instance."
                          },
                          {
                            "path": "csi",
                            "displayName": "Enable CSI",
                            "description": "Describes the Container Storage Interface (CSI) configuration."
                          },
                          {
                            "path": "service",
                            "displayName": "Service configuration",
                            "description": "The cluster Service configuration."
                          },
                          {
                            "path": "sharedDir",
                            "displayName": "Device directory",
                            "description": "The shared directory where storage devices should be created.  This directory must be available to both the StorageOS Node container and the kubelet, and must have mount propagation enabled. When kubelet is running in a container, `/var/lib/kubelet/plugins/kubernetes.io~storageos` should normally be set, otherwise leave empty."
                          },
                          {
                            "path": "ingress",
                            "displayName": "Ingress configuration",
                            "description": "Describes the ingress configuration to be configured for the cluster."
                          },
                          {
                            "path": "tlsEtcdSecretRefName",
                            "displayName": "etcd TLS Secret Name",
                            "description": "The name of the secret object that contains the etcd TLS certificates."
                          },
                          {
                            "path": "tlsEtcdSecretRefNamespace",
                            "displayName": "etcd TLS Secret Namespace",
                            "description": "The namespace of the secret object that contains the etcd TLS certificates."
                          },
                          {
                            "path": "nodeSelectorTerms",
                            "displayName": "Node Selectors",
                            "description": "Node selector terms can be set to control the placement of StorageOS pods using node affiinity."
                          },
                          {
                            "path": "tolerations",
                            "displayName": "Tolerations",
                            "description": "Tolerations can be set to control the placement of StorageOS pods."
                          },
                          {
                            "path": "k8sDistro",
                            "displayName": "Kubernetes Distribution Name",
                            "description": "Name of the Kubernetes distribution in use, e.g. `openshift`.  This will be included in the product telemetry (if enabled), to help focus development efforts."
                          },
                          {
                            "path": "disableTelemetry",
                            "displayName": "Disable Telemetry",
                            "description": "To disable anonymous usage reporting across the cluster, set to true. Defaults to false. To help improve the product, data such as API usage and StorageOS configuration information is collected."
                          },
                          {
                            "path": "disableFencing",
                            "displayName": "Disable Fencing",
                            "description": "When Pod Fencing is disabled, StorageOS will not perform any interaction with Kubernetes when it detects that a node has gone offline. Additionally, the Kubernetes permissions required for Fencing will not be added to the StorageOS role."
                          },
                          {
                            "path": "disableTCMU",
                            "displayName": "Disable TCMU",
                            "description": "Disable TCMU can be set to true to disable the TCMU storage driver.  This is required when there are multiple storage systems running on the same node and you wish to avoid conflicts.  Only one TCMU-based storage system can run on a node at a time.  Disabling TCMU will degrade performance."
                          },
                          {
                            "path": "forceTCMU",
                            "displayName": "Force TCMU",
                            "description": "Force TCMU can be set to true to ensure that TCMU is enabled or cause StorageOS to abort startup.  At startup, StorageOS will automatically fallback to non-TCMU mode if another TCMU-based storage system is running on the node.  Since non-TCMU has performance drawbacks, this may not always be desired."
                          },
                          {
                            "path": "disableScheduler",
                            "displayName": "Disable Scheduler",
                            "description": "Disable StorageOS scheduler deployment. StorageOS scheduler helps improve the scheduling decision of a pod, considering the location of volumes and their replicas."
                          },
                          {
                            "path": "pause",
                            "displayName": "Pause Operator",
                            "description": "When enabled, the Operator will not perform any actions on the cluster."
                          },
                          {
                            "path": "debug",
                            "displayName": "Enable Debug",
                            "description": "Enables debug logging when set to true."
                          }
                        ]
                      },
                      {
                        "name": "jobs.storageos.com",
                        "version": "v1",
                        "kind": "Job",
                        "displayName": "StorageOS Job",
                        "description": "StorageOS Job creates special pods that run on all the node and perform an administrative task. This could be used for cluster maintenance tasks.",
                        "statusDescriptors": [
                          {
                            "path": "completed",
                            "displayName": "Completed",
                            "description": "Set to true if the job completed."
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "image",
                            "displayName": "Image",
                            "description": "The container image to run as the job."
                          },
                          {
                            "path": "args",
                            "displayName": "Arguments",
                            "description": "The arguments to pass to the job container."
                          },
                          {
                            "path": "mountPath",
                            "displayName": "Target Path",
                            "description": "The path in the job container where a volume is mounted."
                          },
                          {
                            "path": "hostPath",
                            "displayName": "Source path",
                            "description": "The path on the host that is mounted into the job container."
                          },
                          {
                            "path": "completionWord",
                            "displayName": "Source Path",
                            "description": "The job is marked as completed when the completion word is found in the pod logs."
                          },
                          {
                            "path": "labelSelector",
                            "displayName": "Label Selector",
                            "description": "A label selector can be set to identify Pods created by the job."
                          },
                          {
                            "path": "nodeSelectorTerms",
                            "displayName": "Node Selectors",
                            "description": "Node selector terms can be set to control the placement of job pods using node affiinity."
                          },
                          {
                            "path": "tolerations",
                            "displayName": "Tolerations",
                            "description": "Tolerations can be set to control the placement of job pods."
                          }
                        ]
                      },
                      {
                        "name": "storageosupgrades.storageos.com",
                        "version": "v1",
                        "kind": "StorageOSUpgrade",
                        "displayName": "StorageOS Upgrade",
                        "description": "StorageOS Upgrade automatically upgrades an existing StorageOS cluster as per the upgrade configuration.",
                        "statusDescriptors": [
                          {
                            "path": "completed",
                            "displayName": "Completed",
                            "description": "Set to true if the upgrade completed."
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "newImage",
                            "displayName": "New Image",
                            "description": "The StorageOS Node image to upgrade to. e.g. `storageos/node:latest`"
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "strimzi-kafka-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/strimzi-kafka-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Red Hat",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Red Hat"
            },
            "packageName": "strimzi-kafka-operator",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "strimzi-cluster-operator.v0.13.0",
                "currentCSVDesc": {
                  "displayName": "Strimzi Apache Kafka Operator",
                  "icon": [
                    {
                      "base64data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTk1IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTk1OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6IzE5MkM0Nzt9Cgkuc3Qxe2ZpbGw6dXJsKCNTVkdJRF8xXyk7fQoJLnN0MntmaWxsOnVybCgjU1ZHSURfMl8pO30KCS5zdDN7ZmlsbDp1cmwoI1NWR0lEXzNfKTt9Cgkuc3Q0e2ZpbGw6dXJsKCNTVkdJRF80Xyk7fQoJLnN0NXtmaWxsOnVybCgjU1ZHSURfNV8pO30KCS5zdDZ7ZmlsbDp1cmwoI1NWR0lEXzZfKTt9Cjwvc3R5bGU+CjxnPgoJPHBvbHlnb24gY2xhc3M9InN0MCIgcG9pbnRzPSIyNTYsNSAxLDE1Mi4yIDEsNDQ2LjcgMjU2LDU5My45IDUxMSw0NDYuNyA1MTEsMTUyLjIgMjU2LDUgCSIvPgoJPGxpbmVhckdyYWRpZW50IGlkPSJTVkdJRF8xXyIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIHgxPSIxMDkuNDk5NiIgeTE9Ijg0Ljk2MjIiIHgyPSI0NDAuOTUxNyIgeTI9Ijc5My44MTAyIj4KCQk8c3RvcCAgb2Zmc2V0PSIwIiBzdHlsZT0ic3RvcC1jb2xvcjojRkZGRkZGIi8+CgkJPHN0b3AgIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6IzU0QkFEOCIvPgoJPC9saW5lYXJHcmFkaWVudD4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0yNTYsNTYxbDIyNi41LTEzMC44di0yNi4zYy0zNy42LTcuMy04NC45LTE0LjMtMTQzLjUtMTkuM2MtMTk5LjItMTcuMi0xNC44LTU2LjYsNjguOS0xMjcuMQoJCVMxMzAsMTY1LjcsMTMwLDE2NS43czE0Ny42LDMxLDEzMi44LDUwYy0xMC41LDEzLjUtMTM0LjMsNDMuNS0yMzMuMyw4OC4xdjEyNi41TDI1Niw1NjF6Ii8+CjwvZz4KPC9zdmc+Cg==",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.13.0",
                  "provider": {
                    "name": "Red Hat"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\",\n      \"kind\":\"Kafka\",\n      \"metadata\":{\n        \"name\":\"my-cluster\"\n      },\n      \"spec\":{\n        \"kafka\":{\n            \"version\":\"2.3.0\",\n            \"replicas\":3,\n            \"listeners\":{\n              \"plain\":{\n               },\n              \"tls\":{\n               }\n            },\n            \"config\":{\n              \"offsets.topic.replication.factor\":3,\n              \"transaction.state.log.replication.factor\":3,\n              \"transaction.state.log.min.isr\":2,\n              \"log.message.format.version\":\"2.3\"\n            },\n            \"storage\":{\n              \"type\":\"ephemeral\"\n            }\n        },\n        \"zookeeper\":{\n            \"replicas\":3,\n            \"storage\":{\n              \"type\":\"ephemeral\"\n            }\n        },\n        \"entityOperator\":{\n            \"topicOperator\":{\n             },\n            \"userOperator\":{\n             }\n        }\n      }\n  },\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\",\n      \"kind\":\"KafkaConnect\",\n      \"metadata\":{\n        \"name\":\"my-connect-cluster\"\n      },\n      \"spec\":{\n        \"version\":\"2.3.0\",\n        \"replicas\":1,\n        \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n        \"tls\":{\n            \"trustedCertificates\":[\n              {\n                  \"secretName\":\"my-cluster-cluster-ca-cert\",\n                  \"certificate\":\"ca.crt\"\n              }\n            ]\n        }\n      }\n  },\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\",\n      \"kind\":\"KafkaConnectS2I\",\n      \"metadata\":{\n        \"name\":\"my-connect-cluster\"\n      },\n      \"spec\":{\n        \"version\":\"2.3.0\",\n        \"replicas\":1,\n        \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n        \"tls\":{\n            \"trustedCertificates\":[\n              {\n                  \"secretName\":\"my-cluster-cluster-ca-cert\",\n                  \"certificate\":\"ca.crt\"\n              }\n            ]\n        }\n      }\n  },\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\",\n      \"kind\":\"KafkaMirrorMaker\",\n      \"metadata\":{\n        \"name\":\"my-mirror-maker\"\n      },\n      \"spec\":{\n        \"version\":\"2.3.0\",\n        \"replicas\":1,\n        \"consumer\":{\n            \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n            \"groupId\":\"my-source-group-id\"\n        },\n        \"producer\":{\n            \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n        },\n        \"whitelist\":\".*\"\n      }\n  },\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1alpha1\",\n      \"kind\":\"KafkaBridge\",\n      \"metadata\":{\n        \"name\":\"my-bridge\"\n      },\n      \"spec\":{\n        \"replicas\":1,\n        \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n        \"http\":{\n            \"port\":8080\n        }\n      }\n  },\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\",\n      \"kind\":\"KafkaTopic\",\n      \"metadata\":{\n        \"name\":\"my-topic\",\n        \"labels\":{\n            \"strimzi.io/cluster\":\"my-cluster\"\n        }\n      },\n      \"spec\":{\n        \"partitions\":10,\n        \"replicas\":3,\n        \"config\":{\n            \"retention.ms\":604800000,\n            \"segment.bytes\":1073741824\n        }\n      }\n  },\n  {\n      \"apiVersion\":\"kafka.strimzi.io/v1beta1\",\n      \"kind\":\"KafkaUser\",\n      \"metadata\":{\n        \"name\":\"my-user\",\n        \"labels\":{\n            \"strimzi.io/cluster\":\"my-cluster\"\n        }\n      },\n      \"spec\":{\n        \"authentication\":{\n            \"type\":\"tls\"\n        },\n        \"authorization\":{\n            \"type\":\"simple\",\n            \"acls\":[\n              {\n                  \"resource\":{\n                    \"type\":\"topic\",\n                    \"name\":\"my-topic\",\n                    \"patternType\":\"literal\"\n                  },\n                  \"operation\":\"Read\",\n                  \"host\":\"*\"\n              },\n              {\n                  \"resource\":{\n                    \"type\":\"topic\",\n                    \"name\":\"my-topic\",\n                    \"patternType\":\"literal\"\n                  },\n                  \"operation\":\"Describe\",\n                  \"host\":\"*\"\n              },\n              {\n                  \"resource\":{\n                    \"type\":\"group\",\n                    \"name\":\"my-group\",\n                    \"patternType\":\"literal\"\n                  },\n                  \"operation\":\"Read\",\n                  \"host\":\"*\"\n              },\n              {\n                  \"resource\":{\n                    \"type\":\"topic\",\n                    \"name\":\"my-topic\",\n                    \"patternType\":\"literal\"\n                  },\n                  \"operation\":\"Write\",\n                  \"host\":\"*\"\n              },\n              {\n                  \"resource\":{\n                    \"type\":\"topic\",\n                    \"name\":\"my-topic\",\n                    \"patternType\":\"literal\"\n                  },\n                  \"operation\":\"Create\",\n                  \"host\":\"*\"\n              },\n              {\n                  \"resource\":{\n                    \"type\":\"topic\",\n                    \"name\":\"my-topic\",\n                    \"patternType\":\"literal\"\n                  },\n                  \"operation\":\"Describe\",\n                  \"host\":\"*\"\n              }\n            ]\n        }\n      }\n  }\n]",
                    "capabilities": "Full Lifecycle",
                    "categories": "Streaming \u0026 Messaging",
                    "certified": "false",
                    "containerImage": "docker.io/strimzi/operator:0.13.0",
                    "createdAt": "2019-08-13 11:00:00",
                    "description": "Strimzi provides a way to run an Apache Kafka cluster on Kubernetes or OpenShift in various deployment configurations.",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Strimzi"
                  },
                  "description": "Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Includes Kafka Mirror Maker** - Allows for morroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n### Upgrading your Clusters\nThe Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/latest/#assembly-upgrading-kafka-versions-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Strimzi Operator supports three types of data storage:\n* Ephemeral (Recommended for development only)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStrimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).\n### Getting help\nIf you encounter any issues while using Strimzi, you can get help using:\n* [Strimzi mailing list](https://www.redhat.com/mailman/listinfo/strimzi)\n* [Strimzi Slack workspace](https://join.slack.com/t/strimzi/shared_invite/enQtMzU2Mjk3NTgxMzE5LTYyMTUwMGNlMDQwMzBhOGI4YmY4MjhiMDgyNjA5OTk2MTFiYjc4M2Q3NGU1YTFjOWRiMzM2NGMwNDUwMjBlNDY)\n### Contributing\nYou can contribute by:\n* Raising any issues you find using Strimzi\n* Fixing issues by opening Pull Requests\n* Improving documentation\n* Talking about Strimzi\n\nAll bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with [\"good-start\"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.\n\nThe [Hacking guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/HACKING.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.\n\nThe [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.\n\nIf you want to get in touch with us first before contributing, you can use:\n* [Strimzi mailing list](https://www.redhat.com/mailman/listinfo/strimzi)\n* [Strimzi Slack workspace](https://join.slack.com/t/strimzi/shared_invite/enQtMzU2Mjk3NTgxMzE5LTYyMTUwMGNlMDQwMzBhOGI4YmY4MjhiMDgyNjA5OTk2MTFiYjc4M2Q3NGU1YTFjOWRiMzM2NGMwNDUwMjBlNDY)\n### License\nStrimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": true
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "kafkas.kafka.strimzi.io",
                        "version": "v1beta1",
                        "kind": "Kafka",
                        "displayName": "Kafka",
                        "description": "Represents a Kafka cluster",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Route",
                            "version": "route.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicaSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "conditions",
                            "displayName": "Conditions",
                            "description": "Kafka cluster conditions",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.conditions"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "kafka.version",
                            "displayName": "Version",
                            "description": "Kafka version",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "kafka.replicas",
                            "displayName": "Kafka Brokers",
                            "description": "The desired number of Kafka brokers.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "kafka.storage.type",
                            "displayName": "Kafka storage",
                            "description": "The type of storage used by Kafka brokers",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "kafka.resources",
                            "displayName": "Kafka Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          },
                          {
                            "path": "zookeeper.replicas",
                            "displayName": "Zookeeper Nodes",
                            "description": "The desired number of Zookeeper nodes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "zookeeper.storage.type",
                            "displayName": "Zookeeper storage",
                            "description": "The type of storage used by Zookeeper nodes",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "zookeeper.resources",
                            "displayName": "Zookeeper Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "kafkaconnects.kafka.strimzi.io",
                        "version": "v1beta1",
                        "kind": "KafkaConnect",
                        "displayName": "Kafka Connect",
                        "description": "Represents a Kafka Connect cluster",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicaSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "replicas",
                            "displayName": "Connect nodes",
                            "description": "The desired number of Kafka Connect nodes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "Kafka Connect version",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "bootstrapServers",
                            "displayName": "Bootstrap server",
                            "description": "The address of the bootstrap server",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "resources",
                            "displayName": "Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "kafkaconnects2is.kafka.strimzi.io",
                        "version": "v1beta1",
                        "kind": "KafkaConnectS2I",
                        "displayName": "Kafka Connect Source to Image",
                        "description": "Represents a Kafka Connect cluster with Source 2 Image support",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "DeploymentConfig",
                            "version": "apps.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicationController",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "BuildConfig",
                            "version": "build.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "ImageStream",
                            "version": "image.openshift.io/v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "replicas",
                            "displayName": "Connect nodes",
                            "description": "The desired number of Kafka Connect nodes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "Kafka Connect version",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "bootstrapServers",
                            "displayName": "Bootstrap server",
                            "description": "The address of the bootstrap server",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "resources",
                            "displayName": "Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "kafkamirrormakers.kafka.strimzi.io",
                        "version": "v1beta1",
                        "kind": "KafkaMirrorMaker",
                        "displayName": "Kafka Mirror Maker",
                        "description": "Represents a Kafka MirrorMaker cluster",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicaSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "replicas",
                            "displayName": "MirrorMaker nodes",
                            "description": "The desired number of Kafka MirrorMaker nodes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "Kafka Mirror Maker version",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "consumer.bootstrapServers",
                            "displayName": "Source cluster",
                            "description": "The bootstrap address of the Source cluster",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "producer.bootstrapServers",
                            "displayName": "Target cluster",
                            "description": "The bootstrap address of the Target cluster",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "whitelist",
                            "displayName": "Mirrored topics",
                            "description": "Expression specifying the topics which should be mirrored",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "resources",
                            "displayName": "Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "kafkabridges.kafka.strimzi.io",
                        "version": "v1alpha1",
                        "kind": "KafkaBridge",
                        "displayName": "Kafka Bridge",
                        "description": "Represents a Kafka Bridge cluster",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicaSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "replicas",
                            "displayName": "Bridge nodes",
                            "description": "The desired number of Kafka Bridge nodes.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podCount"
                            ]
                          },
                          {
                            "path": "bootstrapServers",
                            "displayName": "Kafka cluster",
                            "description": "The bootstrap address of the Kafka cluster",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "http",
                            "displayName": "HTTP configuration",
                            "description": "The HTTP configuration",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "kafkatopics.kafka.strimzi.io",
                        "version": "v1beta1",
                        "kind": "KafkaTopic",
                        "displayName": "Kafka Topic",
                        "description": "Represents a topic inside a Kafka cluster",
                        "specDescriptors": [
                          {
                            "path": "partitions",
                            "displayName": "Partitions",
                            "description": "The number of partitions",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "replicas",
                            "displayName": "Replication factor",
                            "description": "The number of replicas",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "kafkausers.kafka.strimzi.io",
                        "version": "v1beta1",
                        "kind": "KafkaUser",
                        "displayName": "Kafka User",
                        "description": "Represents a user inside a Kafka cluster",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "authentication.type",
                            "displayName": "Authentication type",
                            "description": "Authentication type",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "authorization.type",
                            "displayName": "Authorization type",
                            "description": "Authorization type",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "synopsys",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/synopsys",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Synopsys, Inc",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Synopsys, Inc"
            },
            "packageName": "synopsys",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "synopsys-operator.2019.4.0",
                "currentCSVDesc": {
                  "displayName": "Synopsys Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "2019.4.0",
                  "provider": {
                    "name": "Synopsys, Inc"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"synopsys.com/v1\",\n    \"kind\": \"OpsSight\",\n    \"metadata\": {\n      \"name\": \"opssight-test\"\n    },\n    \"spec\": {\n      \"namespace\": \"opssight-test\",\n      \"perceptor\": {\n        \"name\": \"opssight-core\",\n        \"port\": 3001,\n        \"image\": \"docker.io/blackducksoftware/opssight-core:latest\",\n        \"checkForStalledScansPauseHours\": 999999,\n        \"stalledScanClientTimeoutHours\": 999999,\n        \"modelMetricsPauseSeconds\": 15,\n        \"unknownImagePauseMilliseconds\": 15000,\n        \"clientTimeoutMilliseconds\": 100000,\n        \"expose\": \"\"\n      },\n      \"scannerPod\": {\n        \"name\": \"opssight-scanner\",\n        \"scanner\": {\n          \"name\": \"opssight-scanner\",\n          \"port\": 3003,\n          \"image\": \"docker.io/blackducksoftware/opssight-scanner:latest\",\n          \"clientTimeoutSeconds\": 600\n        },\n        \"imageFacade\": {\n          \"name\": \"opssight-image-getter\",\n          \"port\": 3004,\n          \"internalRegistries\": [],\n          \"image\": \"docker.io/blackducksoftware/opssight-image-getter:latest\",\n          \"serviceAccount\": \"opssight-scanner\",\n          \"imagePullerType\": \"skopeo\"\n        },\n        \"replicaCount\": 1\n      },\n      \"perceiver\": {\n        \"enableImagePerceiver\": false,\n        \"enablePodPerceiver\": true,\n        \"port\": 3002,\n        \"imagePerceiver\": {\n          \"name\": \"opssight-image-processor\",\n          \"image\": \"docker.io/blackducksoftware/opssight-image-processor:latest\"\n        },\n        \"podPerceiver\": {\n          \"name\": \"opssight-pod-processor\",\n          \"image\": \"docker.io/blackducksoftware/opssight-pod-processor:latest\"\n        },\n        \"serviceAccount\": \"opssight-processor\",\n        \"annotationIntervalSeconds\": 30,\n        \"dumpIntervalMinutes\": 30\n      },\n      \"prometheus\": {\n        \"name\": \"prometheus\",\n        \"port\": 9090,\n        \"image\": \"docker.io/prom/prometheus:v2.1.0\",\n        \"expose\": \"\"\n      },\n      \"enableSkyfire\": false,\n      \"skyfire\": {\n        \"image\": \"gcr.io/saas-hub-stg/blackducksoftware/pyfire:master\",\n        \"name\": \"skyfire\",\n        \"port\": 3005,\n        \"prometheusPort\": 3006,\n        \"serviceAccount\": \"skyfire\",\n        \"hubClientTimeoutSeconds\": 120,\n        \"hubDumpPauseSeconds\": 240,\n        \"kubeDumpIntervalSeconds\": 60,\n        \"perceptorDumpIntervalSeconds\": 60\n      },\n      \"enableMetrics\": true,\n      \"defaultCPU\": \"300m\",\n      \"defaultMem\": \"1300Mi\",\n      \"scannerCPU\": \"300m\",\n      \"scannerMem\": \"1300Mi\",\n      \"logLevel\": \"debug\",\n      \"configMapName\": \"blackduck\",\n      \"secretName\": \"blackduck\",\n      \"blackduck\": {\n        \"externalHosts\": [\n          {\n            \"scheme\": \"https\",\n            \"domain\": \"\u003cBLACKDUCK_HOST\u003e\",\n            \"port\": 443,\n            \"user\": \"\u003cBLACKDUCK_USER\u003e\",\n            \"password\": \"\u003cBLACKDUCK_PASSWORD\u003e\",\n            \"concurrentScanLimit\": 2\n          }\n        ],\n        \"connectionsEnvironmentVariableName\": \"blackduck.json\",\n        \"tlsVerification\": false,\n        \"initialCount\": 0,\n        \"maxCount\": 0,\n        \"blackduckSpec\": {\n          \"namespace\": \"\",\n          \"size\": \"small\",\n          \"version\": \"2019.4.0\",\n          \"exposeService\": \"\",\n          \"livenessProbes\": false,\n          \"persistentStorage\": false,\n          \"certificateName\": \"default\",\n          \"licenseKey\": \"\u003cBLACKDUCK_LICENSE_KEY\u003e\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"synopsys.com/v1\",\n    \"kind\": \"Blackduck\",\n    \"metadata\": {\n      \"name\": \"blackduck-ephemeral\"\n    },\n    \"spec\": {\n      \"namespace\": \"blackduck-ephemeral\",\n      \"size\": \"Small\",\n      \"version\": \"2019.4.0\",\n      \"exposeService\": \"\",\n      \"livenessProbes\": false,\n      \"persistentStorage\": false,\n      \"licenseKey\": \"\u003cBLACKDUCK_LICENSE_KEY\u003e\",\n      \"certificateName\": \"default\"\n    }\n  },\n  {\n    \"apiVersion\": \"synopsys.com/v1\",\n    \"kind\": \"Alert\",\n    \"metadata\": {\n      \"clusterName\": \"\",\n      \"name\": \"alert-test\"\n    },\n    \"spec\": {\n      \"namespace\": \"alert-test\",\n      \"version\": \"4.0.0\",\n      \"alertImage\": \"docker.io/blackducksoftware/blackduck-alert:4.0.0\",\n      \"cfsslImage\": \"docker.io/blackducksoftware/blackduck-cfssl:1.0.0\",\n      \"exposeService\": \"\",\n      \"standAlone\": true,\n      \"port\": 8443,\n      \"persistentStorage\": false,\n      \"alertMemory\": \"2560M\",\n      \"cfsslMemory\": \"640M\",\n      \"encryptionPassword\": \"\",\n      \"encryptionGlobalSalt\": \"\",\n      \"environs\": [ \"ALERT_SERVER_PORT:8443\", \"PUBLIC_HUB_WEBSERVER_HOST:\u003c\u003cBLACK_DUCK_HOST\u003e\u003e\", \"PUBLIC_HUB_WEBSERVER_PORT:443\" ]\n    }\n  }\n]",
                    "capabilities": "Full Lifecycle",
                    "categories": "Security, Monitoring",
                    "certified": "false",
                    "containerImage": "docker.io/blackducksoftware/synopsys-operator:2019.4.0",
                    "createdAt": "2018-12-14 17:09:00",
                    "description": "Synopsys Operator is a cloud-native administration utility for Synopsys software.",
                    "repository": "https://github.com/blackducksoftware/synopsys-operator",
                    "support": "Synopsys, Inc"
                  },
                  "description": "[Synopsys Operator](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34373652/Synopsys+Operator) is a cloud-native administration utility for Synopsys software. Synopsys Operator assists in the deployment and management of Synopsys software like Black Duck, OpsSight Connector, and Black Duck Alert, in a Kubernetes and Red Hat OpenShift environment.\n\nThe Synopsys Operator deployment can be managed by a utility called [synopsysctl](https://github.com/blackducksoftware/synopsys-operator/releases). synopsysctl makes it easy to deploy Synopsys Operator, and it eliminates the need to edit YML/JSON configuration files when deploying and managing software with Synopsys Operator. Synopsysctl provides a rich set of command-line parameters to allow for fast and highly-configurable deployments of Black Duck, OpsSight Connector, and Black Duck Alert. synopsysctl’s interface mimics that of kubectl and oc, making it immediately familiar to anyone with Kubernetes and/or Red Hat OpenShift experience.\n\n## Black Duck\n[Black Duck](https://www.synopsys.com/software-integrity/security-testing/software-composition-analysis.html) is a comprehensive solution for managing security, license compliance, and code quality risks that come from the use of open source in applications and containers. Black Duck gives you unmatched visibility into third-party code, enabling you to control it across your software supply chain and throughout the application life cycle.\n\n### Supported Features\n\n* **Find and fix security vulnerabilities** at each stage in the SDLC, with detailed, vulnerability-specific remediation guidance and technical insight.\n\n* **Eliminate risk of open source license** noncompliance and safeguard your intellectual property by using the industry’s largest open source knowledge base to identify which of 2,500+ licenses are relevant to the open source in your applications.\n\n* **Scan virtually any software, firmware, and source code** to generate acomprehensive bill of materials (BoM) of what’s inside.\n\n* **Automatically monitor for new vulnerabilities** hat affect your BoM, with custom policies and workflow triggers to accelerate remediation and reduce your risk exposure.\n\n## OpsSight Connector\n[Synopsys Black Duck OpsSight](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34242566/OpsSight) for Red Hat OpenShift Container Platform provides automated open source identification and monitoring in all container images in a Kubernetes or OpenShift cluster to give teams visibility into, and control over, the risks associated with open source components in those images.\n\n### Supported Features\n\n* **Automated Detection** - OpsSight’s automated multifactor open source detection inventories all the open source in container images as they are deployed.\n\n* **Security Intelligence** -  Black Duck Enhanced Vulnerability Data identifies all known vulnerabilities for the open source in your container images while actionable mitigation and remediation guidance helps minimize exploit risk.\n\n* **Policy Management** - OpsSight policy management allows teams to define open source use and security policies, which are evaluated with each scan and documented as metadata on your containers, allowing you to flag images that violate policies and prevent them from deploying to production.\n\n* **Continous Monitoring** - OpsSight continuously monitors for newly reported open source security vulnerabilities associated with open source in use, providing same-day alerts so teams can understand how newly discovered vulnerabilities affect their containers in production.\n\n## Black Duck Alert\nBlack Duck Alert is an additional deployment to Black Duck that enables you to see Security Vulnerability and Policy Management notifications through email, Slack or HipChat.\n\n## About Synopsys\n\n[Synopsys Software Integrity](https://www.synopsys.com/software-integrity.html) helps development teams build secure, high-quality software, minimizing risks while maximizing speed and productivity. Synopsys, a recognized leader in application security, provides static analysis, software composition analysis, and dynamic analysis solutions that enable teams to quickly find and fix vulnerabilities and defects in proprietary code, open source components, and application behavior.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "blackducks.synopsys.com",
                        "version": "v1",
                        "kind": "Blackduck",
                        "displayName": "Black Duck",
                        "description": "Manages Black Duck instances",
                        "resources": [
                          {
                            "name": "",
                            "kind": "NameSpace",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicationController",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ServiceAccount",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ClusterRole",
                            "version": "authorization.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "ClusterRoleBinding",
                            "version": "authorization.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "PersistentVolumeClaim",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "ip",
                            "displayName": "IP",
                            "description": "Externally Black Duck instance IP address, if known.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                            ]
                          },
                          {
                            "path": "state",
                            "displayName": "State",
                            "description": "The state of the Black Duck instance.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                            ]
                          },
                          {
                            "path": "errorMessage",
                            "displayName": "ErrorMessage",
                            "description": "Current Error Message.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "namespace",
                            "displayName": "Namespace",
                            "description": "Namespace for the Black Duck Connector.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:namespaceSelector"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "Black Duck Version.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "licenseKey",
                            "displayName": "LicenseKey",
                            "description": "Black Duck license key.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "size",
                            "displayName": "Size",
                            "description": "Size of the Black Duck instance in the cluster, either Small, Medium, Large, X Large.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "dbPrototype",
                            "displayName": "DbPrototype",
                            "description": "Existing Black Duck database to clone into the new Black Duck instance.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "livenessProbes",
                            "displayName": "LivenessProbes",
                            "description": "Verifies that all Black Duck containers are running properly and restarts them if they fail.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "persistentStorage",
                            "displayName": "PersistentStorage",
                            "description": "If this Black Duck instance uses a persistent volume claim.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "type",
                            "displayName": "Type",
                            "description": "Type of Black Duck instance, which indicates relationship with OpsSight Connector.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "imageRegistries",
                            "displayName": "ImageRegistries",
                            "description": "Names and versions of the Black Duck container images.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "environs",
                            "displayName": "Environs",
                            "description": "List of Environment variables to be in the Black Duck container.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "exposeService",
                            "displayName": "ExposeService",
                            "description": "Controls which Black Duck services to expose outside the cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "certificateName",
                            "displayName": "CertificateName",
                            "description": "Certificate Name",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "opssights.synopsys.com",
                        "version": "v1",
                        "kind": "OpsSight",
                        "displayName": "OpsSight Connector",
                        "description": "Manages the OpsSight Connector",
                        "resources": [
                          {
                            "name": "",
                            "kind": "NameSpace",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicationController",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ServiceAccount",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ClusterRole",
                            "version": "authorization.openshift.io/v1"
                          },
                          {
                            "name": "",
                            "kind": "ClusterRoleBinding",
                            "version": "authorization.openshift.io/v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "state",
                            "displayName": "State",
                            "description": "The state of the OpsSight pods.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                            ]
                          },
                          {
                            "path": "errorMessage",
                            "displayName": "ErrorMessage",
                            "description": "Current Error Message within OpsSight.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "namespace",
                            "displayName": "Namespace",
                            "description": "Namespace for the OpsSight Connector.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:namespaceSelector"
                            ]
                          },
                          {
                            "path": "enableMetrics",
                            "displayName": "EnableMetrics",
                            "description": "Enable Prometheus metrics. Default is true."
                          },
                          {
                            "path": "defaultCPU",
                            "displayName": "DefaultCPU",
                            "description": "The default amount of CPU each container in a pod can request on a node.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          },
                          {
                            "path": "defaultMem",
                            "displayName": "DefaultMem",
                            "description": "The default amount of memory required for a container to run.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          },
                          {
                            "path": "scannerCPU",
                            "displayName": "ScannerCPU",
                            "description": "The scanner amount of CPU each container in a pod can request on a node.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          },
                          {
                            "path": "scannerMem",
                            "displayName": "DefaultMem",
                            "description": "The scanner amount of memory required for a container to run.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          },
                          {
                            "path": "logLevel",
                            "displayName": "LogLevel",
                            "description": "The loglevel of the log messages that are produced by each individual OpsSight container.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "enableSkyfire",
                            "displayName": "EnableSkyfire",
                            "description": "Enable Skyfire testing",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "skyfire",
                            "displayName": "Skyfire",
                            "description": "Skyfire object"
                          },
                          {
                            "path": "perceiver",
                            "displayName": "Perceiver",
                            "description": "Perceiver object which percieves cluster events"
                          },
                          {
                            "path": "perceptor",
                            "displayName": "Perceptor",
                            "description": "Perceptor object which is the core OpsSight container"
                          },
                          {
                            "path": "scannerPod",
                            "displayName": "ScannerPod",
                            "description": "ScannerPod object which contains the scanner and image getter capabilities"
                          },
                          {
                            "path": "blackduck",
                            "displayName": "Blackduck",
                            "description": "Blackduck object which stores the Black Duck instance"
                          },
                          {
                            "path": "prometheus",
                            "displayName": "Prometheus",
                            "description": "Prometheus object which stores the prometheus info"
                          },
                          {
                            "path": "configMapName",
                            "displayName": "ConfigMapName",
                            "description": "Name of the configmap",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "alerts.synopsys.com",
                        "version": "v1",
                        "kind": "Alert",
                        "displayName": "Black Duck Alert",
                        "description": "Manages Black Duck Alert",
                        "resources": [
                          {
                            "name": "",
                            "kind": "NameSpace",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ReplicationController",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "PersistentVolumeClaim",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "state",
                            "displayName": "State",
                            "description": "The state of Black Duck Alert.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                            ]
                          },
                          {
                            "path": "errorMessage",
                            "displayName": "ErrorMessage",
                            "description": "Current Error Message.",
                            "x-descriptors": [
                              "urn:alm:descriptor:text"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "namespace",
                            "displayName": "Namespace",
                            "description": "Namespace for Black Duck Alert.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:namespaceSelector"
                            ]
                          },
                          {
                            "path": "version",
                            "displayName": "Version",
                            "description": "Alert Version.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "alertImageName",
                            "displayName": "AlertImageName",
                            "description": "Name of the Alert container image.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "alertImageVersion",
                            "displayName": "AlertImageVersion",
                            "description": "Version of the Alert container image.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "port",
                            "displayName": "Port",
                            "description": "Alert Server Port",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          },
                          {
                            "path": "alertMem",
                            "displayName": "AlertMem",
                            "description": "The default amount of memory required for a alert container to run.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          },
                          {
                            "path": "cfsslMem",
                            "displayName": "CfsslMem",
                            "description": "The default amount of memory required for a cfssl container to run.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          },
                          {
                            "path": "standAlone",
                            "displayName": "StandAlone",
                            "description": "Is this a stand alone deployment or installed with Black Duck.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                            ]
                          },
                          {
                            "path": "environs",
                            "displayName": "Environs",
                            "description": "List of Environment variables to be in the Alert container.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:label"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "sysdig",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/sysdig",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Sysdig",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Sysdig"
            },
            "packageName": "sysdig",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "sysdig-operator.v1.4.7",
                "currentCSVDesc": {
                  "displayName": "Sysdig Agent Operator",
                  "icon": [
                    {
                      "base64data": "PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSIwIDAgMjE3IDIwOCI+PGRlZnM+PHN0eWxlPi5jbHMtMSwuY2xzLTQsLmNscy01e2ZpbGw6bm9uZTt9LmNscy0ye2ZpbGw6I2ZmZjt9LmNscy0ze2ZpbGw6IzAwYjRjODt9LmNscy00LC5jbHMtNXtzdHJva2U6IzBlMGYyNjtzdHJva2UtbWl0ZXJsaW1pdDoxMDt9LmNscy00e3N0cm9rZS13aWR0aDo1cHg7fS5jbHMtNXtzdHJva2Utd2lkdGg6MS41OHB4O30uY2xzLTZ7Y2xpcC1wYXRoOnVybCgjY2xpcC1wYXRoKTt9PC9zdHlsZT48Y2xpcFBhdGggaWQ9ImNsaXAtcGF0aCI+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMTY5LjUyLDE2My4yNWwtMTEuNTgsMTEuNTktMzQtMzQsMy40Ny0zLjQ5LTE3Ljc3LTE3Ljc3TDg2Ljg1LDE0Mi40LDU4LjMzLDExMy44OGMtMjgtMjgtMTEuNjYtNzMuNDctMTEuNjYtNzMuNDdaIi8+PC9jbGlwUGF0aD48L2RlZnM+PHRpdGxlPkFydGJvYXJkIDE8L3RpdGxlPjxwb2x5Z29uIGNsYXNzPSJjbHMtMiIgcG9pbnRzPSIxNDYuODkgMTE4LjkgMTIzLjk1IDE0MC44NSAxNTcuOTQgMTc0Ljg0IDE4MS4xIDE1MS42NyAxNDYuODkgMTE4LjkiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik0xNDMuNjIsMTIxLjE2bC0xNy43Ny0xNy43NywyMi44Mi0yMi44MUwxMjAuMTUsNTIuMDZjLTI4LTI4LTczLjQ4LTExLjY1LTczLjQ4LTExLjY1UzMwLjMzLDg1Ljg5LDU4LjMzLDExMy44OEw4Ni44NSwxNDIuNGwyMi44LTIyLjgxLDE3Ljc3LDE3Ljc3WiIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTY0LjMsNThjLTEuODgsMTEuMy0yLjQ2LDI5LjE4LDkuMTIsNDAuNzZsMTMuNDMsMTMuNDMiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0xNjkuNTIsMTYzLjI1bC0xMS41OCwxMS41OS0zNC0zNCwzLjQ3LTMuNDktMTcuNzctMTcuNzdMODYuODUsMTQyLjQsNTguMzMsMTEzLjg4Yy0yOC0yOC0xMS42Ni03My40Ny0xMS42Ni03My40N1oiLz48cGF0aCBjbGFzcz0iY2xzLTQiIGQ9Ik0xNDMuNjIsMTIxLjE2bC0xNy43Ny0xNy43NywyMi44Mi0yMi44MUwxMjAuMTUsNTIuMDZjLTI4LTI4LTczLjQ4LTExLjY1LTczLjQ4LTExLjY1UzMwLjMzLDg1Ljg5LDU4LjMzLDExMy44OEw4Ni44NSwxNDIuNGwyMi44LTIyLjgxLDE3Ljc3LDE3Ljc3WiIvPjxyZWN0IGNsYXNzPSJjbHMtNSIgeD0iMTM2LjE0IiB5PSIxMjIuMjMiIHdpZHRoPSIzMi43NiIgaGVpZ2h0PSI0OC4wNiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMzYzLjggMTQxLjgzKSByb3RhdGUoMTM1KSIvPjxyZWN0IGNsYXNzPSJjbHMtNCIgeD0iMTM2LjE0IiB5PSIxMjIuMjMiIHdpZHRoPSIzMi43NiIgaGVpZ2h0PSI0OC4wNiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMzYzLjggMTQxLjgzKSByb3RhdGUoMTM1KSIvPjxnIGNsYXNzPSJjbHMtNiI+PHBhdGggY2xhc3M9ImNscy00IiBkPSJNNzIuNzQsMzcuODQsNjcuNjMsNTAuMDVhNTMuNTksNTMuNTksMCwwLDAtNCwyNi40MmMuODYsNy45MywzLjU3LDE2LDkuODQsMjIuMzJsMTMuNDMsMTMuNDMiLz48L2c+PC9zdmc+",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "1.4.7",
                  "provider": {
                    "name": "Sysdig"
                  },
                  "annotations": {
                    "alm-examples": "[{\n  \"apiVersion\": \"sysdig.com/v1alpha1\",\n  \"kind\": \"SysdigAgent\",\n  \"metadata\": {\n    \"name\": \"basic-agent-deployment\"\n  },\n  \"spec\": {\n    \"sysdig\": {\n      \"accessKey\": \"XXX\"\n    }\n  }\n},\n{\n  \"apiVersion\": \"sysdig.com/v1alpha1\",\n  \"kind\": \"SysdigAgent\",\n  \"metadata\": {\n    \"name\": \"agent-with-ebpf-and-secure-enabled\"\n  },\n  \"spec\": {\n    \"ebpf\": {\n      \"enabled\": true\n    },\n    \"secure\": {\n      \"enabled\": true\n    },\n    \"sysdig\": {\n      \"accessKey\": \"XXX\"\n    }\n  }\n}]",
                    "capabilities": "Basic Install",
                    "categories": "Security, Monitoring",
                    "certified": "false",
                    "containerImage": "docker.io/sysdiglabs/sysdig-operator:1.4.7",
                    "createdAt": "2019-03-08T18:30:00Z",
                    "description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.",
                    "repository": "https://github.com/sysdiglabs/sysdig-operator/",
                    "support": "Sysdig, Inc."
                  },
                  "description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\n\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n\n## Settings\n\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n\n| Parameter                       | Description                                                            | Default                                     |\n| ---                             | ---                                                                    | ---                                         |\n| `image.registry`                | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`              | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                     | The image tag to pull                                                  | `0.89.5`                                    |\n| `image.pullPolicy`              | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`             | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`        | CPU requested for being run in a node                                  | `100m`                                      |\n| `resources.requests.memory`     | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`          | CPU limit                                                              | `200m`                                      |\n| `resources.limits.memory`       | Memory limit                                                           | `1024Mi`                                    |\n| `rbac.create`                   | If true, create \u0026 use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`         | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`           | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type` | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `ebpf.enabled`                  | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`  | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`              | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`               | Settings for agent's configuration file                                | `{}`                                        |\n| `secure.enabled`                | Enable Sysdig Secure                                                   | `false`                                     |\n| `customAppChecks`               | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                   | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n\n```yaml\napiVersion: sysdig.com/v1alpha1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  secure:\n    enabled: true\n  sysdig:\n    accessKey: XXX\n```\n\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n\n## Getting your Access Key\n\nTo retrieve the key and use it in the agent:\n\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n\n2. Choose Agent Installation.\n\n3. Use the Copy button to copy the access key at the top of the page.\n\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n\n## Verify Metrics in Sysdig Monitor UI\n\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n\n1. Access Sysdig Monitor:\n\n   **SaaS**: https://app.sysdigcloud.com\n\n   Log in with your Sysdig user name and password.\n\n2. Select the **Explore** tab to see if metrics are displayed.\n\n3. To verify that kube state metrics and cluster name are working correctly:\n\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n\n4. Select an individual container or pod to see details.\n\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\n\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "sysdigagents.sysdig.com",
                        "version": "v1alpha1",
                        "kind": "SysdigAgent",
                        "displayName": "Sysdig Agent daemonSet",
                        "description": "Represents a Sysdig Agent running on each node of your cluster."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "t8c",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/t8c",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Turbonomic, Inc.",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Turbonomic, Inc."
            },
            "packageName": "t8c",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "t8c-operator.v7.17.0",
                "currentCSVDesc": {
                  "displayName": "Turbonomic Platform Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "7.17.0",
                  "provider": {
                    "name": "Turbonomic, Inc."
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"charts.helm.k8s.io/v1alpha1\",\"kind\":\"Xl\",\"metadata\":{\"name\":\"xl-release\"},\"spec\":{\"global\":{\"repository\":\"turbonomic\",\"tag\":\"7.17.1\"}}}]",
                    "capabilities": "Basic Install",
                    "categories": "Monitoring",
                    "certified": "false",
                    "containerImage": "turbonomic/t8c-operator:7.17",
                    "createdAt": "2019-06-01T00:00:00.000Z",
                    "description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
                    "repository": "https://github.com/turbonomic/t8c-install/tree/master/operator",
                    "support": "Turbonomic, Inc."
                  },
                  "description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "xls.charts.helm.k8s.io",
                        "version": "v1alpha1",
                        "kind": "Xl",
                        "displayName": "Turbonomic Platform Operator",
                        "description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "tidb-operator",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/tidb-operator",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "PingCAP",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "PingCAP"
            },
            "packageName": "tidb-operator",
            "channels": [
              {
                "name": "stable",
                "currentCSV": "tidb-operator.1.0.0",
                "currentCSVDesc": {
                  "displayName": "TiDB Operator",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "1.0.0",
                  "provider": {
                    "name": "PingCAP"
                  },
                  "annotations": {
                    "alm-examples": "[  \n  {\n    \"apiVersion\": \"pingcap.com/v1alpha1\",\n      \"kind\": \"TidbCluster\",\n      \"metadata\": {\n        \"name\": \"demo\"\n        },\n      \"spec\": {\n        \"pd\": {\n            \"image\": \"pingcap/pd:v3.0.1\",\n            \"imagePullPolicy\": \"IfNotPresent\",\n            \"limits\": {},\n            \"nodeSelectorRequired\": true,\n            \"replicas\": 3,\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            },\n            \"storageClassName\": \"standard\"\n          },\n        \"pvReclaimPolicy\": \"Retain\",\n        \"services\": [\n            {\n            \"name\": \"pd\",\n            \"type\": \"ClusterIP\"\n            }\n          ],\n        \"tidb\": {\n            \"image\": \"pingcap/tidb:v3.0.1\",\n            \"imagePullPolicy\": \"IfNotPresent\",\n            \"limits\": {},\n            \"maxFailoverCount\": 1,\n            \"nodeSelectorRequired\": true,\n            \"replicas\": 1,\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          },\n        \"tikv\":{\n            \"image\": \"pingcap/tikv:v3.0.1\",\n            \"imagePullPolicy\": \"IfNotPresent\",\n            \"limits\": {},\n            \"nodeSelectorRequired\": true,\n            \"replicas\": 1,\n            \"requests\":{\n              \"storage\": \"4Gi\"\n            },\n            \"storageClassName\": \"standard\"\n          },\n        \"tikvPromGateway\": {\n          \"image\": \"prom/pushgateway:v0.3.1\",\n          \"imagePullPolicy\": \"IfNotPresent\",\n          \"limits\": {},\n          \"requests\": {}\n          },\n        \"timezone\": \"UTC\"\n    }\n  }\n]",
                    "capabilities": "Deep Insights",
                    "categories": "Database",
                    "certified": "False",
                    "containerImage": "pingcap/tidb-operator:v1.0.0",
                    "createdAt": "2019-07-30 08:08:00",
                    "description": "TiDB is a popular NewSQL MySQL-compatible database. The TiDB Operator manages the full lifecycle of using TiDB in any Kubernetes-enabled cloud environment.",
                    "repository": "https://github.com/pingcap/tidb-operator",
                    "support": "PingCAP"
                  },
                  "description": "\nThe TiDB Operator automatically deploys, operates, and manages a TiDB cluster in any Kubernetes-enabled cloud environment. \n\n[TiDB](https://github.com/pingcap/tidb) is a popular open-source NewSQL database that's MySQL compatible. It is currently deployed in-production in more than 300 companies, spanning industries from e-commerce and ride-sharing, to banking and food delivery. \n\n### Supported Features\n\n* **Horizontal Scaling** - Safely scale up or down each component of TiDB.\n\n* **Rolling Update** - Gracefully perform rolling updates in order with no downtime.\n\n* **Multi-tenant Support** - Users can deploy and manage multiple TiDB clusters on a single Kubernetes cluster using TiDB Operator.\n\n* **Automatic Failover** - Operator performs failover automatically when node failures occur.\n\n* **Simple Monitoring** - Operator installs Prometheus and Grafana by default for cluster monitoring. \n\n\n**For proper setup, deployment, and troubleshooting instructions, please see [TiDB Operator User Guide](https://pingcap.com/docs/v3.0/tidb-in-kubernetes/tidb-operator-overview/).**  ",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": false
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "tidbclusters.pingcap.com",
                        "version": "v1alpha1",
                        "kind": "TidbCluster",
                        "displayName": "TiDBCluster",
                        "description": "A TiDB Cluster"
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "stable"
          }
        },
        {
          "metadata": {
            "name": "twistlock",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/twistlock",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Twistlock",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Twistlock"
            },
            "packageName": "twistlock",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "twistlock-console-operator.v0.0.9",
                "currentCSVDesc": {
                  "displayName": "Twistlock Console Operator",
                  "icon": [
                    {
                      "base64data": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMDQuNzYgMTIwLjQyIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6IzYxMThmZjt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPmNvbG9yLWxvZ29tYXJrPC90aXRsZT48ZyBpZD0iTGF5ZXJfMiIgZGF0YS1uYW1lPSJMYXllciAyIj48ZyBpZD0iTGF5ZXJfMS0yIiBkYXRhLW5hbWU9IkxheWVyIDEiPjxwb2x5Z29uIGNsYXNzPSJjbHMtMSIgcG9pbnRzPSIxMDQuNzYgNDkuNjMgMTA0Ljc2IDMxLjQgODkuMDMgNDAuNDggODkuMDMgNTguNzEgMTA0Ljc2IDQ5LjYzIi8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9Ijg5LjAzIDYyLjI1IDg5LjAzIDc5LjIxIDEwMy43MSA3MC43MyA4OS4wMyA2Mi4yNSIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMSIgcG9pbnRzPSI4Ny4wMiA0MS42NyA3MS4yMyA1MC43OSA3MS4yMyA5MS44OCA1My40NCAxMDIuMTYgNTMuNDQgMTIwLjM2IDEwNC43NiA5MC43MiAxMDQuNzYgNzIuNDQgODcuMDIgODIuNjggODcuMDIgNDEuNjciLz48cG9seWdvbiBjbGFzcz0iY2xzLTEiIHBvaW50cz0iMzUuNTEgMjcuOTggNTAuMyAxOS40MyAzNS41MSAxMC44OSAzNS41MSAyNy45OCIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMSIgcG9pbnRzPSIzNC41OSA0OS4wNSA3MC4xNyAyOC41MSA4Ny45NyAzOC43OCAxMDMuNzYgMjkuNjYgNTIuMzggMCAzNi41MiA5LjE2IDU0LjMxIDE5LjQzIDE4LjggMzkuOTQgMzQuNTkgNDkuMDUiLz48cG9seWdvbiBjbGFzcz0iY2xzLTEiIHBvaW50cz0iMTcuODcgOTkuOCAzMi41OSA5MS4zIDE3Ljg3IDgyLjgxIDE3Ljg3IDk5LjgiLz48cG9seWdvbiBjbGFzcz0iY2xzLTEiIHBvaW50cz0iNTEuMzggODEuNjEgMTUuNzkgNjEuMDYgMTUuNzkgNDAuNTIgMTQuNzkgMzkuOTQgMTQuNzkgMzkuOTQgMCAzMS40IDAgOTAuNzIgMTUuODcgOTkuODkgMTUuODcgNzkuMzQgNTEuMzggOTkuODQgNTEuMzggODEuNjEiLz48cG9seWdvbiBjbGFzcz0iY2xzLTEiIHBvaW50cz0iNTEuNDQgMTAyLjE5IDM1LjU5IDkzLjA0IDM1LjU5IDExMS4yNyA1MS40NCAxMjAuNDIgNTEuNDQgMTAyLjE5Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjE3LjggNTkuOSAzMy41OCA2OS4wMiAzMy41OCA1MC43OSAxNy44IDQxLjY3IDE3LjggNTkuOSIvPjxwb2x5Z29uIGNsYXNzPSJjbHMtMSIgcG9pbnRzPSIxIDI5LjY2IDE2LjggMzguNzggMzIuNjYgMjkuNjIgMTYuODcgMjAuNSAxIDI5LjY2Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjY4LjIzIDcwLjczIDUyLjQ5IDYxLjY0IDM2LjY1IDcwLjc5IDUyLjM4IDc5Ljg3IDY4LjIzIDcwLjczIi8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjUxLjM4IDU5Ljk3IDUxLjM4IDQxLjY3IDM1LjU5IDUwLjc5IDM1LjU5IDY5LjA5IDUxLjM4IDU5Ljk3Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9Ijg2IDM5Ljk1IDcwLjE3IDMwLjgyIDU0LjQxIDM5LjkyIDcwLjIzIDQ5LjA1IDg2IDM5Ljk1Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjUzLjM4IDU5Ljg0IDY5LjIzIDY4Ljk5IDY5LjIzIDUwLjc5IDUzLjM4IDQxLjY0IDUzLjM4IDU5Ljg0Ii8+PHBvbHlnb24gY2xhc3M9ImNscy0xIiBwb2ludHM9IjUzLjM4IDgxLjYxIDUzLjM4IDk5Ljg4IDY5LjIzIDkwLjczIDY5LjIzIDcyLjQ2IDUzLjM4IDgxLjYxIi8+PC9nPjwvZz48L3N2Zz4=",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.0.9",
                  "provider": {
                    "name": "Twistlock"
                  },
                  "annotations": {
                    "alm-examples": "[{\"apiVersion\":\"charts.helm.k8s.io/v1alpha1\",\"kind\":\"TwistlockConsole\",\"metadata\":{\"name\":\"example-twistlockconsole\"},\"spec\":{\"COMMUNICATION_PORT\":\"8084\",\"CONSOLE_CN\":\"\",\"DATA_FOLDER\":\"/var/lib/twistlock\",\"DATA_RECOVERY_ENABLED\":\"true\",\"DATA_RECOVERY_VOLUME\":\"/var/lib/twistlock-backup\",\"DEFENDER_CN\":\"\",\"DEFENDER_LISTENER_TYPE\":\"\",\"DOCKER_SOCKET\":\"\",\"DOCKER_TWISTLOCK_TAG\":\"_19_03_317\",\"HIGH_AVAILABILITY_ENABLED\":\"false\",\"HIGH_AVAILABILITY_PORT\":\"8086\",\"HIGH_AVAILABILITY_STATE\":\"PRIMARY\",\"MANAGEMENT_PORT_HTTP\":\"8081\",\"MANAGEMENT_PORT_HTTPS\":\"8083\",\"READ_ONLY_FS\":\"true\",\"RUN_CONSOLE_AS_ROOT\":\"\",\"SCAP_ENABLED\":\"\",\"SELINUX_LABEL\":\"disable\",\"SYSTEMD_ENABLED\":\"\",\"consoleImageName\":\"registry-auth.twistlock.com/tw_\u003cREPLACE_TWISTLOCK_TOKEN\u003e/twistlock/console:console_19_03_317\",\"namespace\":\"twistlock\",\"openshift\":false,\"persistentVolumeDataFolder\":\"var/lib/twistlock\",\"persistentVolumeDataRecoveryFolder\":\"var/lib/twistlock-backup\",\"persistentVolumeStorage\":\"100Gi\",\"privileged\":false,\"secrets\":[],\"selinux-type\":\"\",\"serviceType\":\"LoadBalancer\",\"twistlock_cfg\":\"\\\"#  _____          _     _   _            _    \\\\n# |_   _|_      _(_)___| |_| | ___   ___| | __  \\\\n#   | | \\\\\\\\ \\\\\\\\ /\\\\\\\\ / / / __| __| |/ _ \\\\\\\\ / __| |/ /      \\\\n#   | |  \\\\\\\\ V  V /| \\\\\\\\__ \\\\\\\\ |_| | (_) | (__|   \\u003c       \\\\n#   |_|   \\\\\\\\_/\\\\\\\\_/ |_|___/\\\\\\\\__|_|\\\\\\\\___/ \\\\\\\\___|_|\\\\\\\\_\\\\\\\\\\\\\\\\     \\\\n\\\\n# This configuration file contains the setup parameters for Twistlock\\\\n# This file is typically stored in the same directory as the installation script (twistlock.sh)\\\\n# To reconfigure settings, update this configuration file and re-run twistlock.sh; state and unchanged settings will persist\\\\n\\\\n\\\\n\\\\n#############################################\\\\n#     Network configuration\\\\n#############################################\\\\n# Each port must be set to a unique value (multiple services cannot share the same port)\\\\n###### Management console ports #####\\\\n# Sets the ports that the Twistlock management website listens on\\\\n# The system that you use to configure Twistlock must be able to connect to the Twistlock Console on these ports\\\\n# To disable the HTTP listner, leave the value empty (e.g. MANAGEMENT_PORT_HTTP=)\\\\nMANAGEMENT_PORT_HTTP=${MANAGEMENT_PORT_HTTP-8081}\\\\nMANAGEMENT_PORT_HTTPS=8083\\\\n\\\\n##### Inter-system communication port ##### \\\\n# Sets the port for communication between the Defender(s) and the Console\\\\nCOMMUNICATION_PORT=8084\\\\n\\\\n##### Certificate common names (optional) #####\\\\n# Determines how to construct the CN in the Console's certificate\\\\n# This value should not be modified unless instructed to by Twistlock Support\\\\nCONSOLE_CN=$(hostname --fqdn 2\\u003e/dev/null); if [[ $? == 1 ]]; then CONSOLE_CN=$(hostname); fi\\\\n# Determines how to construct the CN in the Defenders' certificates\\\\n# Each Defender authenticates to the Console with this certificate and each cert must have a unique CN\\\\n# These values should not be modified unless instructed to by Twistlock Support\\\\nDEFENDER_CN=${DEFENDER_CN:-}\\\\n\\\\n#############################################\\\\n#     Twistlock system configuration\\\\n#############################################\\\\n###### Data recovery #####\\\\n# Data recovery automatically exports the full Twistlock configuration to the specified path every 24 hours\\\\n# Daily, weekly, and monthly snapshots are retained\\\\n# The exported configuration can be stored on durable storage or backed up remotely with other tools\\\\n# Sets data recovery state (enabled or disabled)\\\\nDATA_RECOVERY_ENABLED=true\\\\n# Sets the directory to which Twistlock data is exported\\\\nDATA_RECOVERY_VOLUME=/var/lib/twistlock-backup\\\\n\\\\n##### Read only containers #####\\\\n# Sets Twistlock containers file-system to read-only\\\\nREAD_ONLY_FS=true\\\\n\\\\n##### Storage paths #####\\\\n# Sets the base directory to store Twistlock local data (db and log files)\\\\nDATA_FOLDER=/var/lib/twistlock\\\\n\\\\n##### Docker socket #####\\\\n# Sets the location of the Docker socket file\\\\nDOCKER_SOCKET=${DOCKER_SOCKET:-/var/run/docker.sock}\\\\n# Sets the type of the docker listener (TCP or NONE)\\\\nDEFENDER_LISTENER_TYPE=${DEFENDER_LISTENER_TYPE:-NONE}\\\\n\\\\n#### SCAP (XCCDF) configuration ####\\\\n# Sets SCAP state (enabled or disabled)\\\\nSCAP_ENABLED=${SCAP_ENABLED:-false}\\\\n\\\\n#### systemd configuration ####\\\\n# Installs Twistlock as systemd service\\\\nSYSTEMD_ENABLED=${SYSTEMD_ENABLED:-false}\\\\n\\\\n#### userid configuration ####\\\\n# Run Twistlock console processes as root (default, twistlock user account)\\\\nRUN_CONSOLE_AS_ROOT=${RUN_CONSOLE_AS_ROOT:-false}\\\\n\\\\n#### selinux configuration ####\\\\n# If SELINUX is enabled in dockerd, enable running Twistlock console and defender with a dedicated SELINUX label\\\\n# See https://docs.docker.com/engine/reference/run/#security-configuration\\\\nSELINUX_LABEL=disable\\\\n\\\\n#############################################\\\\n#      High availability settings\\\\n#############################################\\\\n# Only to be used when the Console is deployed outside of a Kubernetes cluster\\\\n# This native HA capability uses Mongo clustering and requires 3 or more instances\\\\nHIGH_AVAILABILITY_ENABLED=false\\\\nHIGH_AVAILABILITY_STATE=PRIMARY\\\\nHIGH_AVAILABILITY_PORT=8086\\\\n\\\\n\\\\n\\\\n#############################################\\\\n#      Twistlock repository configuration\\\\n#############################################\\\\n# Sets the version tag of the Twistlock containers\\\\n# Do not modify unless instructed to by Twistlock Support\\\\nDOCKER_TWISTLOCK_TAG=_19_03_317\\\\n\\\"\"}}]",
                    "capabilities": "Basic Install",
                    "categories": "Security",
                    "certified": "false",
                    "containerImage": "docker.io/twistlock/console-operator:0.0.9",
                    "createdAt": "2019-04-01 00:00:00",
                    "description": "Deploy Twistlock cloud native security in Kubernetes.",
                    "repository": "https://github.com/twistlock/sample-code/tree/master/operators/twistlock-console-helm-operator",
                    "support": "Twistlock"
                  },
                  "description": "This guide walks through using the Twistlock Console operator \npowered by Helm using tools and libraries provided by the Operator SDK.\n\nThe operator runs as a container that has the Twistlock Console helm charts on board\nand can watch to see if the components are present. If they're not, the\noperator will use Helm to install the Twistlock Console correctly without\nany user interaction!\n\nAll you have to to do is tell your cluster about the new TwistlockConsole custom resource by\napplying the included Custom Resource Definition (CRD). Then deploy the operator\ncontainer into the cluster and let it do its thing.\n\nLet's get down to it. All we need from you is the Twistlock registry/docs token\nthat came with your license. All of the yaml files you need to deploy are listed below.\n\n##  Here's the plan:\n\n```sh\n# Let the cluster know about our new custom resource, TwistlockConsole\nkubectl apply -f deploy/crds/charts_v1alpha1_twistlockconsole_crd.yaml\n# Create the 'twistlock' namespace\nkubectl apply -f deploy/namespace.yaml\n# Create necessary user and permissions to make things happen\nkubectl apply -f deploy/service_account.yaml \nkubectl apply -f deploy/role.yaml\nkubectl apply -f deploy/role_binding.yaml\n# Deploy the operator container as a pod\nkubectl apply -f deploy/operator.yaml\n# Add your token and apply. For more detail, before you apply the CR, read the note below\nkubectl apply -f deploy/crds/charts_v1alpha1_twistlockconsole_cr.yaml\n``` \n\n\n### Understanding the Twistlock Customer Resource (CR) spec\n\nHelm uses a concept called [values][helm_values] to provide customizations\nto a Helm chart's defaults, which are defined in the Helm chart's `values.yaml`\nfile.\n\nOverriding these defaults is as simple as setting the desired values in the CR\nspec. With a Twistlock token from your license you can replace this placeholder \n`\u003cREPLACE_TWISTLOCK_TOKEN\u003e` with your token.\n\n```sh\nconsoleImageName: registry-auth.twistlock.com/tw_\u003cREPLACE_TWISTLOCK_TOKEN\u003e/twistlock/console:console_19_03_317\n``` \n\nThe other option to choose is whether we're on OpenShift, since Kubernetes is the default. If on OpenShift, be sure \nto add these lines to your CR spec as well:\n\n```sh\nopenshift: true\nserviceType: NodePort\n```",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "twistlockconsoles.charts.helm.k8s.io",
                        "version": "v1alpha1",
                        "kind": "TwistlockConsole",
                        "displayName": "Twistlock Console",
                        "description": "Twistlock Console is installed first and provides policy, API endpoints, GUI, and makes install of Defenders on each node easy through a daemonset."
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        },
        {
          "metadata": {
            "name": "vault",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/vault",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "Banzai Cloud",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "Banzai Cloud"
            },
            "packageName": "vault",
            "channels": [
              {
                "name": "beta",
                "currentCSV": "vaultoperator.v0.4.10",
                "currentCSVDesc": {
                  "displayName": "Vault Operator",
                  "icon": [
                    {
                      "base64data": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA3Ny40MSAxMTQuNjQiPjx0aXRsZT5Bc3NldCAxPC90aXRsZT48ZyBpZD0iTGF5ZXJfMiIgZGF0YS1uYW1lPSJMYXllciAyIj48ZyBpZD0iTG9nbyI+PHBhdGggZD0iTTEwLjM5LDg5LjI3Vjg3LjE2SDguNDZ2Mi4xMWgtMVY4NC4xOWgxdjIuMTNoMS45NFY4NC4xOWgxdjUuMDhabTQuNjEsMGgtLjc4TDE0LjE1LDg5YTIuMTUsMi4xNSwwLDAsMS0xLjE0LjMyYy0uNywwLTEtLjQ2LTEtMS4wOXMuMzQtMSwxLjExLTFIMTR2LS4zOGMwLS40MS0uMTItLjU1LS43My0uNTVhNS41NSw1LjU1LDAsMCwwLTEuMDYuMTFsLS4xMi0uN2E1LjE4LDUuMTgsMCwwLDEsMS4zMS0uMTdjMS4yLDAsMS41NS40MSwxLjU1LDEuMzJabS0xLTEuMzhoLS43MWMtLjMxLDAtLjQuMDgtLjQuMzZzLjA5LjM3LjM4LjM3YTEuNTUsMS41NSwwLDAsMCwuNzItLjE5Wm0zLDEuNDZhNC42Nyw0LjY3LDAsMCwxLTEuMzItLjIxbC4xMy0uN2E0LjQ0LDQuNDQsMCwwLDAsMS4xNC4xNmMuNDIsMCwuNDktLjA5LjQ5LS4zN3MwLS4zNC0uNjctLjQ4Yy0uOTMtLjIyLTEtLjQ0LTEtMS4xNXMuMzQtMS4wNiwxLjQzLTEuMDZhNS4yMiw1LjIyLDAsMCwxLDEuMTQuMTNsLS4wOS43M2E3LDcsMCwwLDAtMS4wNS0uMTFjLS40MiwwLS40OS4wOS0uNDkuMzJzMCwuMzIuNTQuNDRjMS4wNy4yNywxLjE3LjQxLDEuMTcsMS4xNlMxOC4xNiw4OS4zNSwxNyw4OS4zNVptNC4zOC0uMDhWODYuNzFjMC0uMi0uMDktLjI5LS4zMS0uMjlhMi43MiwyLjcyLDAsMCwwLTEsLjMxdjIuNTRoLTFWODQuMTJsMSwuMTR2MS42MmEzLjQ4LDMuNDgsMCwwLDEsMS40LS4zNWMuNjMsMCwuODYuNDMuODYsMS4wOHYyLjY2Wm0xLjc2LTQuMTh2LS45aDF2LjlabTAsNC4xOFY4NS42MWgxdjMuNjdabTEuNzItMy42M2MwLS45Mi41Ni0xLjQ1LDEuODYtMS40NWE2LjE0LDYuMTQsMCwwLDEsMS40Mi4xN2wtLjExLjgyQTgsOCwwLDAsMCwyNi43NSw4NWMtLjY4LDAtLjkuMjMtLjkuNzZ2MS45M2MwLC41My4yMi43Ni45Ljc2QTgsOCwwLDAsMCwyOCw4OC4zNmwuMTEuODJhNi4xNCw2LjE0LDAsMCwxLTEuNDIuMTdjLTEuMywwLTEuODYtLjUzLTEuODYtMS40NVptNS4zOSwzLjcxYy0xLjMxLDAtMS42Ni0uNjktMS42Ni0xLjQ0Vjg3YzAtLjc1LjM1LTEuNDQsMS42Ni0xLjQ0czEuNjYuNjksMS42NiwxLjQ0di45M0MzMS45MSw4OC42NSwzMS41Niw4OS4zNSwzMC4yNSw4OS4zNVptMC0zYy0uNTEsMC0uNzEuMjItLjcxLjYzdjFjMCwuNDEuMi42My43MS42M3MuNzEtLjIyLjcxLS42M3YtMUMzMSw4Ni41MywzMC43Niw4Ni4zMSwzMC4yNSw4Ni4zMVptNC4zNS4wNmE3LjU4LDcuNTgsMCwwLDAtMSwuNTN2Mi4zNmgtMVY4NS42MWguODFsLjA2LjQxYTQuMzUsNC4zNSwwLDAsMSwxLS40OFptMy44MiwxLjY4YTEuMTMsMS4xMywwLDAsMS0xLjI2LDEuMjksNS40OCw1LjQ4LDAsMCwxLTEtLjExdjEuNWwtMSwuMTRWODUuNjFoLjc2bC4wOS4zMWEyLjA2LDIuMDYsMCwwLDEsMS4yMS0uMzhjLjc3LDAsMS4xOC40NCwxLjE4LDEuMjdabS0yLjI4LjQxYTQuNDEsNC40MSwwLDAsMCwuODUuMWMuMzQsMCwuNDgtLjE2LjQ4LS40OVY4Ni43OGMwLS4zLS4xMi0uNDctLjQ3LS40N2ExLjM4LDEuMzgsMCwwLDAtLjg1LjMzWiIvPjxwYXRoIGQ9Ik0yMS43Myw5My4zNmg0LjEybC02LjI2LDIxSDEzLjczbC02LjI2LTIxaDQuMTJsNS4wNywxNy40N1oiLz48cGF0aCBkPSJNMzcuMzEsMTE0LjMySDM0LjE2bC0uMjgtMWE4LjM4LDguMzgsMCwwLDEtNC41NiwxLjM1Yy0yLjgsMC00LTEuOTItNC00LjU2LDAtMy4xMiwxLjM1LTQuMzEsNC40Ny00LjMxaDMuNjh2LTEuNjFjMC0xLjctLjQ3LTIuMy0yLjkzLTIuM2EyMS40MiwyMS40MiwwLDAsMC00LjI1LjQ3bC0uNDctMi45M2EyMCwyMCwwLDAsMSw1LjI2LS43MmM0LjgyLDAsNi4yMywxLjcsNi4yMyw1LjU0Wm0tMy44NC01Ljc5SDMwLjYzYy0xLjI2LDAtMS42MS4zNS0xLjYxLDEuNTFzLjM1LDEuNTQsMS41NCwxLjU0YTYsNiwwLDAsMCwyLjktLjc5WiIvPjxwYXRoIGQ9Ik00My4zNSw5OXYxMC43YzAsLjgyLjM1LDEuMjMsMS4yMywxLjIzYTEwLjU5LDEwLjU5LDAsMCwwLDQtMS4yOVY5OWgzLjg0djE1LjMzSDQ5LjQ5TDQ5LjExLDExM0ExNS4zNSwxNS4zNSwwLDAsMSw0MywxMTQuNjRjLTIuNTUsMC0zLjQ2LTEuNzktMy40Ni00LjUzVjk5WiIvPjxwYXRoIGQ9Ik01NC40NiwxMTQuMzJWOTIuNzNsMy44NC0uNTN2MjIuMTNaIi8+PHBhdGggZD0iTTY5Ljc2LDExNGExMC42NCwxMC42NCwwLDAsMS0zLjM3LjZjLTIuOCwwLTQuMjItMS4zMi00LjIyLTQuMDZWMTAyaC0yLjNWOTloMi4zVjk1LjE5TDY2LDk0LjY1Vjk5aDMuOTNMNjkuNjksMTAySDY2djhhMS4yMSwxLjIxLDAsMCwwLDEuMzgsMS4zNSw3LjM5LDcuMzksMCwwLDAsMS45Mi0uMzFaIi8+PHBhdGggZD0iTTAsMCwzOC41Nyw3Ny40MSw3Ny40MSwwWk00My4xNiwxNS41NGg0LjQ5VjIwSDQzLjE2Wm0tOC45NCwxOEgyOS43M1YyOWg0LjQ5Wm0wLTYuNzNIMjkuNzNWMjIuMjdoNC40OVptMC02LjczSDI5LjczVjE1LjU0aDQuNDlaTTQxLDQwLjIySDM2LjQ2VjM1LjczSDQxWm0wLTYuNzNIMzYuNDZWMjlINDFabTAtNi43M0gzNi40NlYyMi4yN0g0MVpNNDEsMjBIMzYuNDZWMTUuNTRINDFabTIuMjEsMi4yNGg0LjQ5djQuNDlINDMuMTZabTAsMTEuMjJWMjloNC40OXY0LjQ5WiIvPjwvZz48L2c+PC9zdmc+",
                      "mediatype": "image/svg+xml"
                    }
                  ],
                  "version": "0.4.10",
                  "provider": {
                    "name": "Banzai Cloud"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"vault.banzaicloud.com/v1alpha1\",\n    \"kind\": \"Vault\",\n    \"metadata\": {\n      \"name\": \"vault\"\n    },\n    \"spec\": {\n      \"size\": 1,\n      \"image\": \"vault:1.0.0\",\n      \"bankVaultsImage\": \"banzaicloud/bank-vaults:latest\",\n      \"annotations\": {\n        \"prometheus.io/scrape\": \"true\",\n        \"prometheus.io/port\": \"9102\"\n      },\n      \"serviceAccount\": \"vault\",\n      \"serviceType\": \"ClusterIP\",\n      \"ingress\": {\n        \"annotations\": null,\n        \"spec\": {\n        }\n      },\n      \"unsealConfig\": {\n        \"kubernetes\": {\n          \"secretNamespace\": \"default\"\n        }\n      },\n      \"config\": {\n        \"storage\": {\n          \"file\": {\n            \"path\": \"/vault/file\"\n          }\n        },\n        \"listener\": {\n          \"tcp\": {\n            \"address\": \"0.0.0.0:8200\",\n            \"tls_cert_file\": \"/vault/tls/server.crt\",\n            \"tls_key_file\": \"/vault/tls/server.key\"\n          }\n        },\n        \"telemetry\": {\n          \"statsd_address\": \"localhost:9125\"\n        },\n        \"ui\": true\n      },\n      \"externalConfig\": {\n        \"policies\": [\n          {\n            \"name\": \"allow_secrets\",\n            \"rules\": \"path \\\"secret/*\\\" { capabilities = [\\\"create\\\", \\\"read\\\", \\\"update\\\", \\\"delete\\\", \\\"list\\\"] }\"\n          }\n        ],\n        \"auth\": [\n          {\n            \"type\": \"kubernetes\",\n            \"roles\": [\n              {\n                \"name\": \"default\",\n                \"bound_service_account_names\": \"default\",\n                \"bound_service_account_namespaces\": \"default\",\n                \"policies\": \"allow_secrets\",\n                \"ttl\": \"1h\"\n              }\n            ]\n          }\n        ],\n        \"secrets\": [\n          {\n            \"path\": \"secret\",\n            \"type\": \"kv\",\n            \"description\": \"General secrets.\",\n            \"options\": {\n              \"version\": 2\n            }\n          }\n        ],\n        \"startupSecrets\": [\n          {\n            \"type\": \"kv\",\n            \"path\": \"secret/data/accounts/aws\",\n            \"data\": {\n              \"data\": {\n                \"AWS_ACCESS_KEY_ID\": \"secretId\",\n                \"AWS_SECRET_ACCESS_KEY\": \"s3cr3t\"\n              }\n            }\n          }\n        ]\n      },\n      \"vaultEnvsConfig\": [\n        {\n          \"name\": \"VAULT_LOG_LEVEL\",\n          \"value\": \"debug\"\n        }\n      ]\n    }\n  }\n]\n",
                    "capabilities": "Full Lifecycle",
                    "categories": "Security",
                    "certified": "false",
                    "containerImage": "banzaicloud/vault-operator:0.4.10",
                    "createdAt": "2019-03-07T08:00:00Z",
                    "description": "Creates and maintain highly-available Vault clusters on Kubernetes",
                    "repository": "https://github.com/banzaicloud/bank-vaults/tree/master/operator",
                    "support": "Banzai Cloud"
                  },
                  "description": "The Vault Operator creates and maintains highly-available Vault clusters on Kubernetes, allowing engineers to easily deploy and manage Vault clusters for their applications.\n\nSecure, store and tightly control access to tokens, passwords, certificates, encryption keys for protecting secrets and other sensitive data using a UI, CLI, or HTTP API.\n\n### Reading and writing to Vault\n\nCommunicate with Vault through its command line utility `vault` via port forwarding:\n\n    $ kubectl --namespace default port-forward service/vault 8200:8200\n    $ export VAULT_TOKEN=$(kubectl get secrets vault-unseal-keys -o jsonpath={.data.vault-root} | base64 -D)\n    $ vault list secrets\n\nThe Vault-Operator helps to provision and manage Vault on top of Kubernetes with\nthe Bank-Vaults CLI tool which is a tool to help automate the setup and management of HashiCorp Vault.\n\nFeatures:\n  - Initializes Vault and stores the root token and unseal keys in one of the followings\n    - AWS KMS keyring (backed by S3)\n    - Azure Key Vault\n    - Google Cloud KMS keyring (backed by GCS)\n    - Alibaba Cloud KMS (backed by OSS)\n    - Kubernetes Secrets (should be used only for development purposes)\n    - Dev Mode (useful for vault server -dev dev mode Vault servers)\n    - Files (backed by files, should be used only for development purposes)\n  - Automatically unseals Vault with these keys\n  - Continuously configures Vault with a YAML/JSON based external configuration (besides the standard Vault configuration)\n  - If the configuration is updated Vault will be reconfigured\n  - It supports configuring Vault secret engines, plugins, auth methods, and policies, audit devices\n  - Direct secret injection into Pods via the vault-secrets-webhook (https://github.com/banzaicloud/bank-vaults#mutating-webhook)\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": false
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "vaults.vault.banzaicloud.com",
                        "version": "v1alpha1",
                        "kind": "Vault",
                        "displayName": "Vault Cluster",
                        "description": "Represents a cluster of Vault nodes.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Deployment",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Secret",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "ConfigMap",
                            "version": "v1"
                          }
                        ],
                        "statusDescriptors": [
                          {
                            "path": "serviceName",
                            "displayName": "Service",
                            "description": "The service at which the running Vault cluster can be accessed.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes:Service"
                            ]
                          },
                          {
                            "path": "size",
                            "displayName": "Cluster Size",
                            "description": "The current size of the Vault cluster."
                          },
                          {
                            "path": "phase",
                            "displayName": "Status",
                            "description": "The current status of the Vault cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase"
                            ]
                          },
                          {
                            "path": "reason",
                            "displayName": "Status Details",
                            "description": "Explanation for the current status of the cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:io.kubernetes.phase:reason"
                            ]
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "size",
                            "displayName": "Size",
                            "description": "The desired number of member Pods for the Vault cluster.",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.banzaicloud.vault:podCount"
                            ]
                          },
                          {
                            "path": "pod.resources",
                            "displayName": "Resource Requirements",
                            "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                            "x-descriptors": [
                              "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "beta"
          }
        },
        {
          "metadata": {
            "name": "wildfly",
            "namespace": "test",
            "selfLink": "/apis/packages.operators.coreos.com/v1/namespaces/test/packagemanifests/wildfly",
            "creationTimestamp": "2019-09-05T07:10:38Z",
            "labels": {
              "catalog": "operatorhubio-catalog",
              "catalog-namespace": "olm",
              "provider": "WildFly",
              "provider-url": ""
            }
          },
          "spec": {},
          "status": {
            "catalogSource": "operatorhubio-catalog",
            "catalogSourceDisplayName": "Community Operators",
            "catalogSourcePublisher": "OperatorHub.io",
            "catalogSourceNamespace": "olm",
            "provider": {
              "name": "WildFly"
            },
            "packageName": "wildfly",
            "channels": [
              {
                "name": "alpha",
                "currentCSV": "wildfly-operator.v0.2.0",
                "currentCSVDesc": {
                  "displayName": "WildFly",
                  "icon": [
                    {
                      "base64data": "",
                      "mediatype": "image/png"
                    }
                  ],
                  "version": "0.2.0",
                  "provider": {
                    "name": "WildFly"
                  },
                  "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"wildfly.org/v1alpha1\",\n    \"kind\": \"WildFlyServer\",\n    \"metadata\": {\n      \"name\": \"quickstart\"\n    },\n    \"spec\": {\n      \"applicationImage\": \"quay.io/jmesnil/wildfly-operator-quickstart:16.0\",\n      \"size\": 1\n    }\n  }\n]\n",
                    "capabilities": "Basic Install",
                    "categories": "Application Runtime",
                    "certified": "false",
                    "containerImage": "quay.io/wildfly/wildfly-operator:0.2.0",
                    "createdAt": "2019-06-12T08:00:00Z",
                    "description": "Operator that creates and manages Java applications running on WildFly.",
                    "repository": "https://github.com/wildfly/wildfly-operator",
                    "support": "WildFlyServer"
                  },
                  "description": "WildFly is a flexible, lightweight, managed application runtime that helps you build amazing applications.\nFly Fast, and Free!\n\n### Save Time With Faster Development\nWildFly supports the latest standards for REST based data access, including JAX-RS 2, and JSON-P.\nBuilding on Jakarta EE provides rich enterprise capabilities in easy to consume frameworks that eliminate boilerplate and reduce technical burden.\n\nThe quick boot of WildFly combined with the easy-to-use Arquillian framework allows for test driven development using the real environment your code will be running in. Your test code is separate and simply deployed along side your application where it has full access to server resources.\n\n### Save Resources With Efficient Management\nWildFly takes an aggressive approach to memory management and is based on pluggable subsystems that can be added or removed as needed.\n\nThe quick boot of WildFly combined with the easy-to-use Arquillian framework allows for test driven development using the real environment your code will be running in. Your test code is separate and simply deployed along side your application where it has full access to server resources.\n\nConfiguration in WildFly is centralized, simple and user-focused. The configuration file is organized by subsystems that you can easily comprehend and no internal server wiring is exposed. Subsystems use intelligent defaults, but can still be customized to best fit your needs. If you are running in domain mode, the configuration for all servers participating in the domain is specified in a well-organized manner within the same file.\n### Save Money With Open Source\nWildFly is an open source community project sponsored by Red Hat(TM) and is available for use and distribution under the LGPL v2.1 license meaning that it’s available for you to download and use at no cost. This allows organizations like yours to develop amazing new technologies and federates the tech world to allow successful startups to come from anywhere.\n\n## Basic Install (Phase I)\nThe features and capabilities of **Basic Install (Phase I)** deals with the provisioning, installation and configuration of a Java application managed by the WildFly Operator.\n\n### Specify the Docker Application Image\nThe `applicationImage` specifies the Docker application image that contains the Java application. The image must have been built \nhttps://github.com/wildfly/wildfly-s2i[WildFly S2I].\n\n    spec:\n      applicationImage: \"quay.io/jmesnil/wildfly-operator-quickstart:16.0\"\n\nThe `applicationImage` accepts different references to Docker image:\n\n  * the name of the image: `quay.io/jmesnil/wildfly-operator-quickstart`\n  * a tag: `quay.io/jmesnil/wildfly-operator-quickstart:16.0`\n  * a digest: `quay.io/jmesnil/wildfly-operator-quickstart@sha256:0af38bc38be93116b6a1d86a9c78bd14cd527121970899d719baf78e5dc7bfd2`\n\n### Specify the Size of the Application\nThe `size` specifies the size of the application, i.e. the number of pods that runs the application image.\n\n    spec:\n      size:2\n\n### Specify the Storage Requirements for the Server Data Directory\nThe `storage` defines the storage requirements for the application data.\nThe application may require persistent storage for some data (e.g. transaction or messaging logs) that must persist across Pod restarts.\n\nIf the `storage` spec is empty, an `EmptyDir` volume will be used by each pod of the application (but this volume will not persist after its corresponding pod is stopped)\nThe `storage` spec is defined in the link:../apis.adoc#StorageSpec[StorageSpec API Documentation]\n\n    spec:\n      storage:\n        volumeClaimTemplate:\n          spec:\n            resources:\n              requests:\n                storage: 3Gi\n\nThe persistent volume that meets this storage requirement is mounted on the `/wildfly/standalone/data` directory (corresponding to WildFly's `jboss.server.data.dir` path).\n\n### Configure the Application Environment\nEnvironment can be configured using the `env` spec.\nEnvironment variables can come directly from values (such as the `POSTGRESQL_SERVICE_HOST` example below) or from secrets (e.g. the `POSTGRESQL_USER` example below).\n\n    spec:\n      env:\n      - name: POSTGRESQL_SERVICE_HOST\n        value: postgresql\n      - name: POSTGRESQL_SERVICE_PORT\n        value: '5432'\n      - name: POSTGRESQL_DATABASE\n        valueFrom:\n          secretKeyRef:\n            key: database-name\n            name: postgresql\n      - name: POSTGRESQL_USER\n        valueFrom:\n          secretKeyRef:\n            key: database-user\n            name: postgresql\n      - name: POSTGRESQL_PASSWORD\n        valueFrom:\n          secretKeyRef:\n            key: database-password\n            name: postgresql\n### Bring Your Own Standalone XML Configuation\nIt is possible to directly provide WildFly standalone configuration instead of the one in the application image (that comes from WildFly S2I).\n\nThe standalone XML file must be put in a ConfigMap that is accessible by the operator.\nThe `standaloneConfigMap` must provide the `name` of this ConfigMap as well as the `key` corresponding to the name of standalone XML file.\n\n    spec:\n      standaloneConfigMap:\n        name: clusterbench-config-map\n        key: standalone-openshift.xml\n\nIn this example, the `clusterbench-config-map` must be created *before* the WildFly Operator deploys the application.\n\n    $ kubectl create configmap clusterbench-config-map --from-file examples/clustering/config/standalone-openshift.xml\n    configmap/clusterbench-config-map created\n",
                  "installModes": [
                    {
                      "type": "OwnNamespace",
                      "supported": true
                    },
                    {
                      "type": "SingleNamespace",
                      "supported": true
                    },
                    {
                      "type": "MultiNamespace",
                      "supported": false
                    },
                    {
                      "type": "AllNamespaces",
                      "supported": true
                    }
                  ],
                  "customresourcedefinitions": {
                    "owned": [
                      {
                        "name": "wildflyservers.wildfly.org",
                        "version": "v1alpha1",
                        "kind": "WildFlyServer",
                        "displayName": "WildFlyServer",
                        "description": "An application running on WildFly application runtime.",
                        "resources": [
                          {
                            "name": "",
                            "kind": "Service",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "Pod",
                            "version": "v1"
                          },
                          {
                            "name": "",
                            "kind": "StatefulSet",
                            "version": "v1beta2"
                          }
                        ],
                        "specDescriptors": [
                          {
                            "path": "size",
                            "displayName": "Size",
                            "description": "Number of instances for a WildFlyServer resource."
                          },
                          {
                            "path": "image",
                            "displayName": "Application Image",
                            "description": "Name of the application image to be deployed."
                          },
                          {
                            "path": "standaloneConfigMap",
                            "displayName": "Standalone ConfigMap",
                            "description": "spec to specify how standalone configuration can be read from a ConfigMap."
                          },
                          {
                            "path": "storage",
                            "displayName": "Storage",
                            "description": "Storage spec to specify how storage should be used."
                          }
                        ]
                      }
                    ]
                  },
                  "apiservicedefinitions": {

                  }
                }
              }
            ],
            "defaultChannel": "alpha"
          }
        }
      ]
    });
  }

  listSubscriptions() {
    return Promise.resolve({
      apiVersion: 'operators.coreos.com/v1alpha1',
      items: [
        {
          apiVersion: 'operators.coreos.com/v1alpha1',
          kind: 'Subscription',
          metadata: {
            annotations: {
              'kubectl.kubernetes.io/last-applied-configuration':
                '{"apiVersion":"operators.coreos.com/v1alpha1","kind":"Subscription","metadata":{"annotations":{},"name":"podset","namespace":"ck"},"spec":{"channel":"version-1","installPlanApproval":"Automatic","name":"podset","source":"my-operator-catalog","sourceNamespace":"olm","startingCSV":"podset-operator.v0.1.0"}}\n',
            },
            creationTimestamp: '2019-09-02T03:41:17Z',
            generation: 1,
            name: 'podset',
            namespace: 'ck',
            resourceVersion: '1438768',
            selfLink: '/apis/operators.coreos.com/v1alpha1/namespaces/ck/subscriptions/podset',
            uid: '349fff7e-e1b9-43c0-863a-d06fafb1da57',
          },
          spec: {
            channel: 'version-1',
            installPlanApproval: 'Automatic',
            name: 'podset',
            source: 'my-operator-catalog',
            sourceNamespace: 'olm',
            startingCSV: 'podset-operator.v0.1.0',
          },
          status: {
            catalogHealth: [
              {
                catalogSourceRef: {
                  apiVersion: 'operators.coreos.com/v1alpha1',
                  kind: 'CatalogSource',
                  name: 'my-operator-catalog',
                  namespace: 'olm',
                  resourceVersion: '1436542',
                  uid: 'b72447d1-c677-4be1-a38b-bf3bfbb6d675',
                },
                healthy: true,
                lastUpdated: '2019-09-02T03:41:17Z',
              },
            ],
            conditions: [
              {
                lastTransitionTime: '2019-09-02T03:41:17Z',
                message: 'all available catalogsources are healthy',
                reason: 'AllCatalogSourcesHealthy',
                status: 'False',
                type: 'CatalogSourcesUnhealthy',
              },
            ],
            currentCSV: 'podset-operator.v0.1.0',
            installPlanRef: {
              apiVersion: 'operators.coreos.com/v1alpha1',
              kind: 'InstallPlan',
              name: 'install-7zlhx',
              namespace: 'ck',
              resourceVersion: '1438715',
              uid: '405de947-b7a6-4699-905e-827851550f1d',
            },
            installedCSV: 'podset-operator.v0.1.0',
            installplan: {
              apiVersion: 'operators.coreos.com/v1alpha1',
              kind: 'InstallPlan',
              name: 'install-7zlhx',
              uuid: '405de947-b7a6-4699-905e-827851550f1d',
            },
            lastUpdated: '2019-09-02T03:41:20Z',
            state: 'AtLatestKnown',
          },
        },
        {
          apiVersion: 'operators.coreos.com/v1alpha1',
          kind: 'Subscription',
          metadata: {
            creationTimestamp: '2019-09-04T07:18:46Z',
            generation: 1,
            name: 'podset',
            namespace: 'operators',
            resourceVersion: '2157222',
            selfLink:
              '/apis/operators.coreos.com/v1alpha1/namespaces/operators/subscriptions/podset',
            uid: '3a0808f1-c0a9-464f-9339-e975f42c2108',
          },
          spec: {
            channel: 'version-1',
            installPlanApproval: 'Automatic',
            name: 'podset',
            source: 'my-operator-catalog',
            sourceNamespace: 'olm',
            startingCSV: 'podset-operator.v0.1.0',
          },
          status: {
            catalogHealth: [
              {
                catalogSourceRef: {
                  apiVersion: 'operators.coreos.com/v1alpha1',
                  kind: 'CatalogSource',
                  name: 'my-operator-catalog',
                  namespace: 'olm',
                  resourceVersion: '2156408',
                  uid: 'b72447d1-c677-4be1-a38b-bf3bfbb6d675',
                },
                healthy: true,
                lastUpdated: '2019-09-04T07:18:46Z',
              },
            ],
            conditions: [
              {
                lastTransitionTime: '2019-09-04T07:18:46Z',
                message: 'all available catalogsources are healthy',
                reason: 'AllCatalogSourcesHealthy',
                status: 'False',
                type: 'CatalogSourcesUnhealthy',
              },
            ],
            currentCSV: 'podset-operator.v0.1.0',
            installPlanRef: {
              apiVersion: 'operators.coreos.com/v1alpha1',
              kind: 'InstallPlan',
              name: 'install-5nlvw',
              namespace: 'operators',
              resourceVersion: '2157194',
              uid: 'de27e229-6fdc-4e25-8432-2a188eaa363e',
            },
            installedCSV: 'podset-operator.v0.1.0',
            installplan: {
              apiVersion: 'operators.coreos.com/v1alpha1',
              kind: 'InstallPlan',
              name: 'install-5nlvw',
              uuid: 'de27e229-6fdc-4e25-8432-2a188eaa363e',
            },
            lastUpdated: '2019-09-04T07:18:50Z',
            state: 'AtLatestKnown',
          },
        },
      ],
      kind: 'SubscriptionList',
      metadata: {
        continue: '',
        resourceVersion: '2157304',
        selfLink: '/apis/operators.coreos.com/v1alpha1/subscriptions',
      },
    });
  }
}

export default new OperatorService();
